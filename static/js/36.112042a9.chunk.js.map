{"version":3,"sources":["data/classes/Feature.tsx","data/races/Race.tsx","data/races/Subrace.tsx","data/classes/FeatureSet.tsx","data/Monster.tsx","data/classes/Class.tsx","data/classes/Subclass.tsx","data/Gear.tsx","data/Item.tsx","data/Spell.tsx","data/encounter/Encounter.tsx","data/IEntity.tsx","data/Selection.tsx","data/RandomTable.tsx","data/Book.tsx","components/form_elements/TextButton.tsx","components/home/Home.tsx","data/races/Trait.tsx"],"names":["FeatureType","featureTypeArray","value","label","getOptionFromEnum","opt","undefined","forEach","option","toString","Feature","name","text","selections","type","this","normal","isFeature","arg","nameCheck","textCheck","selectionsCheck","Array","isArray","Race","id","filename","pic","abilityScores","age","alignment","size","speed","lang","traits","sources","isRace","picCheck","abilityScoresCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","traitsCheck","isTrait","sourcesCheck","Subrace","isSubrace","typeCheck","FeatureSet","level","profBonus","features","bonis","spellslots","isFeatureSet","levelCheck","profBonusCheck","featuresCheck","Monster","subtype","ac","hp","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","subtypeCheck","acCheck","hpCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Gear","description","cost","damage","weight","properties","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","Spell","classes","school","time","range","components","duration","ritual","isSpell","classesCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","Encounter","enemies","players","isPlaying","currentInit","roundCounter","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","isIEntity","Selection","selectionOptions","isSelection","selectionOptionsCheck","RandomTable","header","rows","Book","cover","data","pages","tags","Blob","TextButton","icon","transform","disabled","onClick","SimpleButton","Icon","styled","button","theme","buttons","color","backgroundColor","height","hoverColor","FontAwesomeIcon","Home","history","useHistory","useState","reload","isReload","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","bookAmount","setBookAmount","selectionAmount","setSelectionAmount","tableAmount","setTableAmount","useEffect","reciveCount","result","reciveAllPromise","then","General","HomeSection","SelectionTitle","faMeteor","SectionText","ButtonBar","push","faPlusCircle","newSpell","createNewWithId","createNewSpell","newItem","createNewItem","newGear","createNewGear","newRace","createNewRace","newSubrace","createNewSubrace","newClass","createNewClass","newSubclass","createNewSubclass","newSelection","createNewSelection","faIdCard","faDragon","newMonster","createNewMonster","newEncounter","createNewEncounter","faTable","newRandomTable","createNewRandomTable","newBook","createNewBook","faChartPie","faCog","faQuestionCircle","div","tile","boxShadow","input","Trait"],"mappings":"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","file":"static/js/36.112042a9.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Item implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","export default interface IEntity {\n    id?: number;\n    name: string;\n}\n\nexport function isIEntity(arg: any): arg is IEntity {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  \n    return (\n      arg &&\n      nameCheck \n    );\n  }","import IEntity, { isIEntity } from \"./IEntity\";\n\nexport default class Selection implements IEntity {\n  id?: number;\n  name: string;\n  selectionOptions: { entityName: string; entityText: string; level: number }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    selectionOptions?: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.selectionOptions = selectionOptions || [];\n  }\n}\n\nexport function isSelection(arg: any): arg is Selection {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n\n  return arg && nameCheck && selectionOptionsCheck;\n}\n\nexport function findSelectionFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  selectionOptionsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n  return {\n    nameCheck: nameCheck,\n    selectionOptionsCheck: selectionOptionsCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Book from \"../../data/Book\";\nimport Selection from \"../../data/Selection\";\nimport Class from \"../../data/classes/Class\";\nimport Subclass from \"../../data/classes/Subclass\";\nimport Encounter from \"../../data/encounter/Encounter\";\nimport Gear from \"../../data/Gear\";\nimport Item from \"../../data/Item\";\nimport Monster from \"../../data/Monster\";\nimport Race from \"../../data/races/Race\";\nimport Subrace from \"../../data/races/Subrace\";\nimport Spell from \"../../data/Spell\";\nimport {\n  createNewWithId,\n  reciveAllPromise,\n  reciveCount,\n} from \"../../services/DatabaseService\";\n\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiBookmarklet,\n  GiSwordClash,\n} from \"react-icons/gi\";\nimport {\n  faChartPie,\n  faCog,\n  faDragon,\n  faIdCard,\n  faMeteor,\n  faPlusCircle,\n  faQuestionCircle,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport RandomTable from \"../../data/RandomTable\";\n\nconst Home = () => {\n  let history = useHistory();\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [bookAmount, setBookAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n  const [tableAmount, setTableAmount] = useState<number>(0);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"books\", (result: number) => {\n        setBookAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveCount(\"randomTables\", (result: number) => {\n        setTableAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable();\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <General>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faMeteor} /> Spells\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${spellAmount} spells in your collection. `}\n            {spellAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to spells\"}\n              onClick={() => history.push(`/spell-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSpell()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiCrystalWand /> Magic Items\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${itemAmount} magic items in your collection. `}\n            {itemAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to items\"}\n              onClick={() => history.push(`/item-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewItem()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBackpack /> Gears\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${gearAmount} gears in your collection. `}\n            {gearAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to gears\"}\n              onClick={() => history.push(`/gear-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewGear()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiWomanElfFace /> Races\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${raceAmount} races in your collection. `}\n            {raceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to races\"}\n              onClick={() => history.push(`/race-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subraces</SelectionTitle>\n          <SectionText>\n            {`You have ${subraceAmount} subraces in your collection. `}\n            {subraceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubrace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiPlagueDoctorProfile /> Classes\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${classAmount} classes in your collection. `}\n            {classAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to classes\"}\n              onClick={() => history.push(`/class-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewClass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subclass</SelectionTitle>\n          <SectionText>\n            {`You have ${subclassAmount} subclass in your collection. `}\n            {subclassAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubclass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <BiSelectMultiple /> Selection\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${selectionAmount} selections in your collection. `}\n            {selectionAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to selections\"}\n              onClick={() => history.push(`/selection-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSelection()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faIdCard} /> Characters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${charAmount} characters in your collection. `}\n            {charAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to characters\"}\n              onClick={() => history.push(`/char-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => history.push(`/char-lab`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faDragon} /> Monsters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${monsterAmount} monsters in your collection. `}\n            {monsterAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to monsters\"}\n              onClick={() => history.push(`/monster-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewMonster()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiSwordClash /> Encounters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${encounterAmount} encounters in your collection. `}\n            {encounterAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to encounters\"}\n              onClick={() => history.push(`/encounter-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewEncounter()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faTable} /> Random Tables\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${tableAmount} random tables in your collection. `}\n            {tableAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to Tables\"}\n              onClick={() => history.push(`/randomTable-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRandomTable()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBookmarklet /> Library\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${bookAmount} pdf's in your collection. `}\n            {bookAmount <= 0 && `Try adding one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to library\"}\n              onClick={() => history.push(`/library`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Add\"}\n              onClick={() => createNewBook()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faChartPie} /> Statistics\n          </SelectionTitle>\n          <SectionText>For more Statistics on your collection...</SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to statistics\"}\n              onClick={() => history.push(`/statistics`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faCog} /> Options\n          </SelectionTitle>\n          <SectionText>\n            To import/export or to make other adjustments to your collection...\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to options\"}\n              onClick={() => history.push(`/options`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faQuestionCircle} /> Help\n          </SelectionTitle>\n          <SectionText>\n            Help on where to find what and how to add tables or hyperlinks\n            inside of text fields.\n          </SectionText>\n          <ButtonBar>\n            <TextButton text={\"Help\"} onClick={() => history.push(`/help`)} />\n          </ButtonBar>\n        </HomeSection>\n      </General>\n    </>\n  );\n};\n\nexport default Home;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  align-content: stretch;\n`;\n\nconst HomeSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  max-height: 20px;\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n\nconst ButtonBar = styled(SectionText)`\n  align-self: flex-end;\n  max-height: 50px;\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n"],"sourceRoot":""}