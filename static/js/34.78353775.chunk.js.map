{"version":3,"sources":["data/classes/Feature.tsx","components/form_elements/ShortTextField.tsx","components/form_elements/EnumField.tsx","components/form_elements/NumberArrayField.tsx","components/entities/subclasses/details/SubclassView.tsx","components/entities/subclasses/details/SubclassEditView.tsx","components/entities/subclasses/details/SubclassDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/entities/subclasses/details/link_wrapper/IdToSubclass.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/general_elements/Dialog.tsx","components/form_elements/NumberField.tsx","../node_modules/peerjs/dist sync"],"names":["FeatureType","featureTypeArray","value","label","getOptionFromEnum","opt","undefined","forEach","option","toString","Feature","name","text","selections","type","this","normal","isFeature","arg","nameCheck","textCheck","selectionsCheck","Array","isArray","ShortTextField","icon","transform","onChange","Field","LabelText","Icon","Input","e","target","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","textarea","input","EnumField","options","handleChange","StyledSelect","classNamePrefix","Select","buttons","NumberArrayField","values","max","useState","array","setArray","handleValueChange","index","map","key","SubclassView","subclass","send","setSend","CenterWrapper","View","Name","PropWrapper","Prop","PropTitle","faLink","sources","features","length","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","count","levels","i","push","level","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","Text","FormatedText","TextButton","faPaperPlane","onClick","P2PSender","data","mode","span","backgroundColorLink","table","tr","th","td","SubclassEditView","onEdit","setSelections","useEffect","reciveAll","selectionOptions","select","onBoniChange","oldFeature","oldBoni","field","onFeatureChange","oldFeatureSet","StringField","FeatureView","FeatureNumber","onFeatureSetChange","IconButton","faTrash","indexOf","splice","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","slice","removeSpellslot","faPlus","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","selection","oldSelection","featuresets","onSelectionChange","featureSets","removeSelection","addNewSelection","addNewFeature","profBonus","NumberField","SubclassDetail","isNew","editMode","setMode","subclassObj","editSubclass","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","id","goBack","abortText","abortClick","TopBar","BackButton","faArrowLeft","action","title","tableName","updateWithCallback","result","setTimeout","updateSubclass","faSave","Message","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","height","button","hoverColor","placeholder","LinkCheck","loading","setLoading","entitiyFound","setEntity","recivePromiseByAttributeCount","then","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","useCallback","includes","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","Link","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","IdToSubclass","match","db","MyAppDatabase","subclasses","params","Back","ToggleLeft","ToggleRight","EditToggle","props","setName","peer","setPeer","setError","brokerId","min","password","characters","Math","floor","random","generateBrokerId","newPeer","Peer","host","secure","console","log","on","conn","errorData","disconnected","destroyed","reconnect","reciveAllPromise","results","faExclamationCircle","DialogWrapper","ButtonBar","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/34.78353775.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclass.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclass} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclass.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: FeatureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclass.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  subclass: Subclass;\n  isNew: boolean;\n}\n\nconst SubclassDetail = ({ subclass, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj, subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subclass.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subclasses\", subclass.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateSubclass(\"subclasses\", subclassObj)} icon={faSave} />\n            <IconButton onClick={() => deleteSubclass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    recivePromiseByAttributeCount(type + \"s\", \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n        case \"group\":\n          return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 97;"],"sourceRoot":""}