{"version":3,"sources":["data/chars/BuildChar.tsx","database/MyDatabase.tsx","logo192.png","../node_modules/peerjs/dist sync","data/Modifier.tsx","data/races/Race.tsx","data/races/Subrace.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","data/chars/ClassSet.tsx","components/navigation/Header.tsx","components/navigation/NavButton.tsx","components/SearchbarStyle.tsx","components/navigation/NavMenu.tsx","components/navigation/Navigation.tsx","components/AppWrapper.tsx","components/Loading.tsx","components/entities/campaigns/CampaignTile.tsx","data/campaign/Campaign.tsx","data/Filter.tsx","components/form_elements/IconButton.tsx","components/form_elements/StringField.tsx","components/entities/campaigns/CampaignSearchBar.tsx","components/entities/campaigns/CampaignOverview.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","data/campaign/Note.tsx","components/general_elements/TabBar.tsx","components/form_elements/TextField.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/TextButton.tsx","components/entities/campaigns/details/CampaignEditView.tsx","components/entities/chars/CharTile.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/general_elements/FormatedText.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/npc/NpcTile.tsx","components/entities/quest/QuestTile.tsx","components/entities/campaigns/details/CampaignView.tsx","components/general_elements/ToggleStyle.tsx","components/entities/campaigns/details/CampaignDetail.tsx","components/entities/campaigns/details/link_wrapper/IdToCampaign.tsx","components/entities/campaigns/details/link_wrapper/NameToCampaign.tsx","components/form_elements/StringSearchField.tsx","components/entities/chars/CharSearchBar.tsx","components/entities/chars/CharOverview.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/form_elements/SmallNumberField.tsx","components/entities/chars/details/detail_components/CharGeneral.tsx","components/entities/chars/details/detail_components/CharHeader.tsx","components/entities/item/ItemTile.tsx","components/entities/gear/GearTile.tsx","components/entities/chars/details/detail_components/CharCombat.tsx","components/entities/monster/MonsterTile.tsx","components/form_elements/SmallNumberArrayField.tsx","components/entities/spells/SpellTile.tsx","components/entities/chars/details/detail_components/CharSpells.tsx","services/PdfService.tsx","components/entities/chars/details/CharView.tsx","components/form_elements/CheckField.tsx","components/form_elements/EnumField.tsx","components/form_elements/NumberField.tsx","components/entities/chars/details/CharEditView.tsx","components/general_elements/Dialog.tsx","components/entities/chars/details/CharDetail.tsx","components/entities/chars/details/link_wrapper/IdToChar.tsx","components/entities/chars/details/link_wrapper/NameToChar.tsx","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/entities/classes/ClassTile.tsx","data/classes/Feature.tsx","data/classes/FeatureSet.tsx","data/classes/Class.tsx","components/entities/classes/ClassSearchBar.tsx","components/entities/classes/ClassOverview.tsx","data/classes/Subclass.tsx","components/entities/classes/details/ClassView.tsx","components/form_elements/NumberArrayField.tsx","components/form_elements/ShortTextField.tsx","components/entities/classes/details/ClassEditView.tsx","components/entities/classes/details/ClassDetail.tsx","components/entities/classes/details/link_wrapper/IdToClass.tsx","components/entities/classes/details/link_wrapper/NameToClass.tsx","data/encounter/Player.tsx","data/Monster.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","services/DiceService.tsx","components/form_elements/TinyNumberField.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/entities/encounters/details/link_wrapper/IdToEncounter.tsx","components/entities/encounters/details/link_wrapper/NameToEncounter.tsx","components/entities/encounters/EncounterTile.tsx","data/encounter/Encounter.tsx","components/entities/encounters/EncounterSearchBar.tsx","components/entities/encounters/EncounterOverview.tsx","components/entities/gear/details/GearView.tsx","components/entities/gear/details/GearEditView.tsx","components/entities/gear/details/GearDetail.tsx","components/entities/gear/details/link_wrapper/IdToGear.tsx","components/entities/gear/details/link_wrapper/NameToGear.tsx","components/form_elements/MultipleSelectField.tsx","data/Gear.tsx","components/entities/gear/GearSearchBar.tsx","components/entities/gear/GearOverview.tsx","components/entities/item/details/ItemView.tsx","components/entities/item/details/ItemEditView.tsx","components/entities/item/details/ItemDetail.tsx","components/entities/item/details/link_wrapper/IdToItem.tsx","components/entities/item/details/link_wrapper/NameToItem.tsx","data/Item.tsx","components/entities/item/ItemSearchBar.tsx","components/entities/item/ItemOverview.tsx","components/entities/library/details/BookView.tsx","components/form_elements/FileField.tsx","components/entities/library/details/BookEditView.tsx","components/entities/library/details/BookDetail.tsx","components/entities/library/details/link_wrapper/IdToBook.tsx","components/entities/library/details/link_wrapper/NameToBook.tsx","components/entities/library/BookTile.tsx","data/Book.tsx","components/entities/library/LibrarySearchBar.tsx","components/entities/library/Library.tsx","components/entities/monster/details/MonsterView.tsx","components/entities/monster/details/MonsterEditView.tsx","components/entities/monster/details/MonsterDetail.tsx","components/entities/monster/details/link_wrapper/IdToMonster.tsx","components/entities/monster/details/link_wrapper/NameToMonster.tsx","components/entities/monster/MonsterSearchBar.tsx","components/entities/monster/MonsterOverview.tsx","components/entities/npc/details/NpcView.tsx","components/entities/npc/details/NpcEditView.tsx","components/entities/npc/details/NpcDetail.tsx","components/entities/npc/details/link_wrapper/IdToNpc.tsx","components/entities/npc/details/link_wrapper/NameToNpc.tsx","data/campaign/Npc.tsx","components/entities/npc/NpcSearchBar.tsx","components/entities/npc/NpcOverview.tsx","components/entities/quest/details/QuestView.tsx","components/entities/quest/details/QuestEditView.tsx","components/entities/quest/details/QuestDetail.tsx","components/entities/quest/details/link_wrapper/IdToQuest.tsx","components/entities/quest/details/link_wrapper/NameToQuest.tsx","data/campaign/Quest.tsx","components/entities/quest/QuestSearchBar.tsx","components/entities/quest/QuestOverview.tsx","components/entities/races/details/RaceView.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/races/details/RaceDetail.tsx","components/entities/races/details/link_wrapper/IdToRace.tsx","components/entities/races/details/link_wrapper/NameToRace.tsx","components/entities/races/RaceTile.tsx","components/entities/races/RaceSearchBar.tsx","components/entities/races/RaceOverview.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableDetail.tsx","components/entities/random_tables/details/link_wrapper/IdToRandomTable.tsx","components/entities/random_tables/details/link_wrapper/NameToRandomTable.tsx","components/entities/random_tables/RandomTableTile.tsx","data/RandomTable.tsx","components/entities/random_tables/RandomTableSearchBar.tsx","components/entities/random_tables/RandomTableOverview.tsx","components/entities/selections/details/SelectionView.tsx","components/entities/selections/details/SelectionEditView.tsx","components/entities/selections/details/SelectionDetail.tsx","components/entities/selections/details/link-wrapper/IdToSelection.tsx","components/entities/selections/details/link-wrapper/NameToSelection.tsx","components/entities/selections/SelectionTile.tsx","data/IEntity.tsx","data/Selection.tsx","components/entities/selections/SelectionSearchBar.tsx","components/entities/selections/SelectionOverview.tsx","components/entities/spells/details/SpellView.tsx","components/entities/spells/details/SpellEditView.tsx","components/entities/spells/details/SpellDetail.tsx","components/entities/spells/details/link_wrapper/IdToSpell.tsx","components/entities/spells/details/link_wrapper/NameToSpell.tsx","data/Spell.tsx","components/entities/spells/SpellSearchBar.tsx","components/entities/spells/SpellOverview.tsx","components/entities/subclasses/details/SubclassView.tsx","components/entities/subclasses/details/SubclassEditView.tsx","components/entities/subclasses/details/SubclassDetail.tsx","components/entities/subclasses/details/link_wrapper/IdToSubclass.tsx","components/entities/subclasses/details/link_wrapper/NameToSubclass.tsx","components/entities/subraces/details/SubraceView.tsx","components/entities/subraces/details/SubraceEditView.tsx","components/entities/subraces/details/SubraceDetail.tsx","components/entities/subraces/details/link_wrapper/IdToSubrace.tsx","components/entities/subraces/details/link_wrapper/NameToSubrace.tsx","components/help/Help.tsx","components/home/Home.tsx","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/theme/Theme.tsx","components/theme/MyThemeProvider.tsx","components/options/GeneralOptions.tsx","components/options/SpellsOptions.tsx","components/options/GearsOptions.tsx","components/options/ItemsOptions.tsx","components/options/MonstersOptions.tsx","components/options/RacesOptions.tsx","components/options/ClassesOptions.tsx","components/options/CharsOptions.tsx","components/options/EncountersOptions.tsx","components/options/SelectionsOptions.tsx","data/classes/Boni.tsx","services/5eToolService.tsx","components/options/OtherImportOptions.tsx","components/options/Options.tsx","components/statistics/gear/CostRatioChart.tsx","components/statistics/gear/DamageRatioChart.tsx","components/statistics/gear/GearTypeRatioChart.tsx","components/statistics/gear/WeightRatioChart.tsx","components/statistics/general/AmountOfEntitiesChart.tsx","components/statistics/items/AttunmentRatioChart.tsx","components/statistics/items/BaseRatioChart.tsx","components/statistics/items/ItemTypeRatioChart.tsx","components/statistics/items/MagicBonusRatioChart.tsx","components/statistics/items/RarityRatioChart.tsx","components/statistics/monsters/CrRatioChart.tsx","components/statistics/monsters/LegendaryRatioChart.tsx","components/statistics/monsters/MonsterTypeRatioChart.tsx","components/statistics/spells/ActionsRatioChart.tsx","components/statistics/spells/LevelRatioChart.tsx","components/statistics/spells/RitualRatioChart.tsx","components/statistics/spells/SchoolsRatioChart.tsx","components/statistics/Statistics.tsx","App.tsx","serviceWorker.js","index.js","data/races/Trait.tsx","services/CharacterService.tsx","services/DatabaseService.tsx"],"names":["BuildChar","character","level","prof","classes","subclasses","classFeatures","race","subrace","raceFeatures","gears","items","spells","monsters","modifiers","oldCharacter","this","Char","Race","Subrace","MyAppDatabase","races","subraces","chars","encounters","books","selections","randomTables","campaigns","quests","npcs","worlds","locations","events","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","ModifierOperator","Modifier","target","operator","value","origin","op","ADD","SUBSTRACT","EQUAL","tar","Array","isArray","name","filename","pic","abilityScores","age","alignment","size","speed","lang","traits","sources","isRace","arg","nameCheck","undefined","picCheck","abilityScoresCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","traitsCheck","isTrait","sourcesCheck","findRaceFormattError","type","isSubrace","typeCheck","findSubraceFormattError","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","player","background","spellSlots","activeSelections","currencyBonis","ac","hp","currentHp","init","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","classeCheck","classe","levelCheck","subclasseCheck","subclasse","isClassSet","Header","Bar","NameWrapper","Logo","src","LogoImg","Name","HomeCredits","packageJson","styled","div","theme","header","backgroundColor","color","img","NavButton","open","setOpen","Button","onClick","button","buttons","Tooltip","span","main","highlight","LeftTooltip","RightTooltip","FixedBar","SearchBar","CreateButton","hoverColor","ExportButton","FieldGroup","NavMenu","location","useLocation","Menu","TopSide","to","className","pathname","icon","faHome","Seperator","MiddleSide","LeftSide","faMapMarkedAlt","faTable","RightSide","faMeteor","faIdCard","faDragon","BottomSide","faChartPie","faCog","tile","Navigation","Nav","AppWrapper","children","useState","moveNav","mode","handlers","useSwipeable","onSwipedRight","onSwipedLeft","Content","App","LoadingSpinner","Spinner","Icon","faDiceD20","width","height","r","cx","cy","stopColor","offset","LocalLoadingSpinner","Wrapper","LocalSpinner","FontAwesomeIcon","CampaignTile","campaign","getPicture","useCallback","Tile","fallback","PropWrapper","Text","PropTitle","description","WideProp","faLink","Link","boxShadow","headerColor","Prop","backgroundColorLink","Image","ImgContainer","Empty","props","Campaign","players","notes","Filter","filedName","sort","fieldName","IconButton","disabled","transform","SimpleButton","DisabledSimpleButton","StringField","label","placeholder","onChange","Field","LabelText","Input","input","CampaignSearchBar","onSend","filters","setFilters","history","useHistory","setName","newFilters","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","newCampaign","createNewWithId","push","createNewCampaign","faPlusCircle","exportFilteredFromTable","faFileExport","CampaignOverview","setFilter","allCampaigns","setAllCampaigns","setCampaigns","start","end","hasMore","scrollParam","setParam","useEffect","reciveAllFiltered","results","slice","length","filterArray","CampaignContainer","dataLength","next","s","concat","loader","map","index","key","InfiniteScroll","useItem","effect","setEffect","reducer","state","action","data","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equals","first","BackButton","Back","Note","title","content","tags","TabBar","activeTab","child","Tab","isActive","TextField","textarea","AutoStringField","optionTable","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","a","itemList","forEach","reciveAllPromise","Promise","all","o","reciveAll","onSearch","searchTerm","newOptions","filter","option","includes","opt","Option","Options","TextButton","text","CampaignEditView","onEdit","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","CenterWrapper","tab","View","faImage","faBookOpen","Container","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","removePlayer","faPlus","addNewPlayer","newNote","removeNote","newContent","newTags","addNewNote","CharTile","char","calcLevel","PropRowWrapper","RowProp","classSet","BuildCampaign","champaign","characters","buildCampaign","console","time","characterList","npcList","questList","recivePromiseByAttribute","npc","quest","timeEnd","FormatedText","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","formatLink","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","formatIcon","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","NoteSearchBar","setTitle","setContent","setTags","NpcTile","ImageName","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","QuestTile","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","SearchableView","applyFilters","faTags","ToggleLeft","ToggleRight","EditToggle","CampaignDetail","editMode","setMode","campaignObj","editCampaign","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","updateCampaign","tableName","updateWithCallback","result","setTimeout","TopBar","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","campaignId","remove","Message","editAndSaveCampaign","IdToCampaign","match","db","params","NameToCampaign","StringSearchField","mobile","changeSort","Sort","faChevronCircleUp","faChevronCircleDown","CharSearchBar","setSources","setSort","CharOverview","allChars","setAllChars","setChars","CharContainer","P2PSender","peer","setPeer","setError","brokerId","min","max","password","i","Math","floor","random","generateBrokerId","newPeer","Peer","host","secure","log","on","conn","errorData","send","disconnected","destroyed","reconnect","faExclamationCircle","SmallNumberField","showMax","Max","CharGeneral","buildChar","deathSaves","setDeathSaves","setProf","featureSets","featureSet","profBonus","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","hitDices","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","ImageView","MainLink","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","ItemTile","item","hasAttunment","attunment","Rarity","rarity","Flag","base","toLowerCase","trim","GearTile","gear","faCoins","cost","faWeightHanging","weight","CharCombat","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","f1","f2","features","feature","baseitem","toLocaleLowerCase","bonus","attribute","magicBonus","damage","properties","baseGear","strBonus","dexBonus","MonsterTile","monster","isLegendary","lAblt","sAblt","formatCr","cr","Type","subtype","CR","faRunning","SmallNumberArrayField","values","SpellTile","spell","formatTime","formatLevel","hasRitual","ritual","hasConcentration","duration","formatComponents","words","components","formatDuration","replace","School","school","Level","faHistory","faHourglassHalf","faPowerOff","rotate","range","faMortarPestle","faUser","CharSpell","saveChar","onSpellslotChange","oldSlots","newSpellSlots","slots","oldSlotValues","from","onCurrencyBoniChange","oldBoni","newBonis","boni","boniChange","classSlots","fillTemplate","template","buildCharacter","completeChar","PDFDocument","load","pdfDoc","form","getForm","getTextField","setText","getCheckBox","check","equipments","featureText","feature2Text","featur","count","spellFieldNumbers","save","downloadFilledPdf","pdfBytes","blob","Blob","window","navigator","msSaveOrOpenBlob","pdfURL","URL","createObjectURL","document","createElement","download","href","body","appendChild","click","removeChild","exportPdf","filledArray","CharView","modifications","setSend","setBuildChar","tabs","setTabs","applyMods","t","update","faPaperPlane","faFilePdf","SmallText","proficiencies","selectionsData","activeSelect","featureName","activeOption","activeSelectOption","entityName","entityText","trait","TraitWrapper","TraitName","TraitLevel","TraitText","makeString","CheckField","defaultChecked","checked","Checkmark","EnumField","handleChange","StyledSelect","classNamePrefix","Select","NumberField","CharEditView","setSelections","onChangeItemAttribute","newItem","recalcSelections","newActiveSelections","select","selection","selectionName","selectionOptions","featureCount","subclass","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","onChangeActiveSelection","oldActiveSelection","activeSelection","activSelect","oldClass","newClassList","removeClass","addNewClass","SelectionTitle","find","newSpell","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","newMonster","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","Dialog","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","ButtonBar","CharDetail","isNew","modMode","setModMode","charObj","editChar","showDeleteDialog","setDeleteDialog","recalcClasses","bonis","fullClassList","classList","class","isCurrency","spellslots","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","faSlidersH","faList","updateChar","IdToChar","NameToChar","CharLabGeneral","completed","faCheckCircle","CharLabClass","setClasses","equipment","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","nextTab","faEdit","saveWithCallback","FeatureType","ClassTile","featureTypeArray","getOptionFromEnum","Feature","normal","FeatureSet","isFeatureSet","profBonusCheck","featuresCheck","textCheck","selectionsCheck","isFeature","Class","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","Subclass","isSubclass","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","levels","printSpellslots","spellslot","FeatureProp","tr","NumberArrayField","array","setArray","handleValueChange","ShortTextField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","splice","removeFeatureSet","FeatureNumberArray","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","addNewFeature","ClassDetail","classObj","editClass","updateClass","IdToClass","NameToClass","Player","tempHp","initBonus","tag","isMonster","Monster","savingThrows","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","ablt","subtypeCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","crExpTable","exp","expTable","easy","medium","hard","deadly","calcDifficulty","encounter","calcExp","enemyExp","enemies","enemy","crExp","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","newEnemy","oldEnemy","onChangePlayerField","reciveByAttribute","onChangeEnemy","newEnemyList","removeEnemy","addNewEnemy","newPlayerList","rollDie","round","TinyNumberField","EncounterView","isLoading","setPlayers","newPlayers","isPlaying","b","newField","finishEncounter","newEnemies","currentInit","roundCounter","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Table","Row","current","isDead","PropField","faSkullCrossbones","EncounterDetail","encounterObj","editEncounter","updateEncounter","encounterId","editAndSaveEncounter","IdToEncounter","NameToEncounter","EncounterTile","Encounter","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","EncounterSearchBar","newEncounter","createNewEncounter","EncounterOverview","allEncounters","setAllEncounters","setEncounters","EncounterContainer","GearView","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","IdToGear","NameToGear","MultipleSelectField","isMulti","Gear","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","reciveAttributeSelection","types","faBook","newGear","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","ItemView","itemBase","setItemBase","ItemEditView","ItemDetail","itemObj","editItem","updateItem","IdToItem","NameToItem","Item","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","pdfjs","GlobalWorkerOptions","workerSrc","BookView","book","numPages","setNumPages","pageNumber","setPageNumber","reader","FileReader","readAsDataURL","onloadend","base64data","changePage","prevPageNumber","DocumentWrapper","faArrowRight","file","onLoadSuccess","onItemClick","itemPageNumber","appVersion","msSaveBlob","url","showPdf","faExternalLinkAlt","downloadFile","faFileDownload","TagWrapper","Tag","faTag","FileField","accept","files","multiple","BookEditView","faFileImport","fileList","triggerImportFiles","cover","pages","TagView","oldTag","onTagChange","removeTag","BookDetail","bookObj","editBook","updateBook","IdToBook","NameToBook","BookTile","Book","LibrarySearchBar","setPages","newBook","createNewBook","Library","allBooks","setAllBooks","setBooks","LibraryContainer","MonsterView","faShieldAlt","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","IdToMonster","NameToMonster","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","NpcView","NpcEditView","NpcDetail","npcObj","editNpc","updateNpc","IdToNpc","NameToNpc","Npc","NpcSearchBar","newNpc","createNewNpc","NpcOverview","allNpcs","setAllNpcs","setNpcs","NpcContainer","QuestView","QuestEditView","QuestDetail","questObj","editQuest","updateQuest","IdToQuest","NameToQuest","Quest","rewards","followQuest","QuestSearchBar","newQuest","createNewQuest","QuestOverview","allQuests","setAllQuests","setQuests","QuestContainer","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","RaceEditView","onTraitChange","oldTrait","TraitView","removeTrait","RaceDetail","raceObj","editRace","updateRace","IdToRace","NameToRace","RaceTile","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","RandomTableView","randomTable","rand","setRand","faDice","lastRowValues","rows","rollForRandom","RandomTableEditView","onRowChange","RowWrapper","RowCount","removeRow","RandomTableDetail","randomTableObj","editRandomTable","updateRandomTable","IdToRandomTable","NameToRandomTable","RandomTableTile","RandomTable","RandomTableSearchBar","newRandomTable","createNewRandomTable","RandomTableOverview","allRandomTables","setAllRandomTables","setRandomTables","SelectionView","SelectionEditView","SelectionWrapper","SelectionName","SelectionLevel","SelectionText","SelectionDetail","selectionObj","editSelection","updateSelection","IdToSelection","NameToSelection","SelectionTile","isIEntity","Selection","isSelection","selectionOptionsCheck","SelectionSearchBar","newSelection","createNewSelection","SelectionOverview","allSelections","setAllSelections","SelectionContainer","SpellView","SpellEditView","SpellDetail","spellObj","editSpell","updateSpell","IdToSpell","NameToSpell","Spell","isSpell","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","SpellSearchBar","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","schools","rotation","createNewSpell","SpellOverview","allSpells","setAllSpells","setSpells","SpellContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","updateSubclass","IdToSubclass","NameToSubclass","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","IdToSubrace","NameToSubrace","Help","General","HelpSection","SectionText","Home","reload","isReload","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","bookAmount","setBookAmount","selectionAmount","setSelectionAmount","tableAmount","setTableAmount","reciveCount","HomeSection","faQuestionCircle","scanImportFileTest","json","fileName","callback","failCount","failedObj","promList","obj","saveNew","scanForFormatErrors","replaceAll","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","raceFailCount","subraceFormatErrors","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","selectionFormatErrors","findSelectionFormattError","selectionFailCount","errors","JSON","stringify","failedObject","Errors","exportAllFromTable","decodeURIComponent","encodeURI","encodeURIComponent","exportAll","tableList","list","entity","P2PReciver","changeData","peerId","setId","setState","connect","faCheck","lightTheme","nav","small","large","darkTheme","ctx","createContext","c","useContext","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","setTheme","localTheme","localStorage","getItem","setItem","GeneralOptions","OptionSection","ExternalLink","rel","faPatreon","faDiscord","SpellsOptions","amount","triggerDeleteAll","OptionTab","SectionRow","faTrashAlt","GearsOptions","ItemsOptions","MonstersOptions","RacesOptions","amounts","sendRaces","setSendRaces","sendSubraces","setSendSubraces","ClassesOptions","sendClasses","setSendClasses","sendSubclasses","setSendSubclasses","CharsOptions","EncountersOptions","SelectionsOptions","Boni","recurdsiveTextAdder","newText","entry","parseGear","entryTextPart","listItem","colLabels","cel","convertText","dmg1","dmgType","property","prop","source","parseItem","bonusSpellAttack","Number","parseInt","bonusWeapon","bonusAc","reqAttune","baseItem","baseParts","OtherImportOptions","trigger5eToolsSpellImport","fileReader","parse","fromClassList","number","unit","condition","distance","v","m","concentration","meta","readAsText","import5eToolsSpellsFiles","trigger5eToolsMonsterImport","_copy","align","value2","skill","sense","langs","languages","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conditionImmune","tra","lactions","legendary","average","import5eToolsMonstersFiles","trigger5eToolsRacesImport","ability","scores","Trait","subname","subabilityScores","subtraits","import5eToolsRacesFiles","trigger5eToolsClassesImport","hitdice","hd","faces","startingProficiencies","armor","weapons","wpn","choose","startingEquipment","default","eqp","classTableGroups","col","rowIndex","colIndex","clearLabel","featureParts","classFeature","objFeature","subclassFeatures","subclassFeature","subclassShortName","subclassSource","feat","import5eToolsClassesFiles","trigger5eToolsItemsImport","import5eToolsItemsFiles","failedObjs","setFailedObjs","setData","importFiles","failed","deleteAll","returnTile","OptionSectionLarge","CostRatioChart","generalCounts","setGeneralCounts","makeSchoolsData","reciveAttributeSelectionPromise","costs","recivePromiseByAttributeCount","names","counts","colors","labels","datasets","paddingBottom","DamageRatioChart","GearTypeRatioChart","WeightRatioChart","weights","AmountOfEntitiesChart","makeGeneralCountsData","reciveCountPromise","AttunmentRatioChart","attunments","BaseRatioChart","ItemTypeRatioChart","MagicBonusRatioChart","magicBoni","RarityRatioChart","CrRatioChart","crs","LegendaryRatioChart","leg","noleg","MonsterTypeRatioChart","ActionsRatioChart","times","newTimes","startsWith","LevelRatioChart","RitualRatioChart","rituals","SchoolsRatioChart","Statistics","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","getElementById","process","addEventListener","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker","subclassList","gearList","monsterList","spellList","currentItems","currentGears","currentBases","classLevel","charClass","originItem","extractModifier","extractTarget","newModifiers","rawModifier","substring","modPromises","reject","replacePlaceholder","rawPlaceholder","eval","finally","close","put","prom","add","delete","toArray","equalsIgnoreCase","test","hasTag","fieldPart","arrayTest","filterPart","val","sortedFiled","reverse","sortBy","orderBy","uniqueKeys","clear"],"mappings":"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","file":"static/js/main.1fb10384.chunk.js","sourcesContent":["import Class from \"../classes/Class\";\nimport FeatureSet from \"../classes/FeatureSet\";\nimport Subclass from \"../classes/Subclass\";\nimport Gear from \"../Gear\";\nimport Item from \"../Item\";\nimport Modifier from \"../Modifier\";\nimport Monster from \"../Monster\";\nimport Race from \"../races/Race\";\nimport Subrace from \"../races/Subrace\";\nimport Trait from \"../races/Trait\";\nimport Spell from \"../Spell\";\nimport Char from \"./Char\";\n\nexport default class BuildChar {\n  character: Char;\n  oldCharacter: Char;\n  level: number;\n  prof: number;\n  classes: Class[];\n  subclasses: Subclass[];\n  classFeatures: FeatureSet[];\n  race: Race;\n  subrace: Subrace;\n  raceFeatures: Trait[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  spells: Spell[];\n  monsters: Monster[];\n  modifiers: Modifier[];\n\n  constructor(\n    character?: Char,\n    level?: number,\n    prof?: number,\n    classes?: Class[],\n    subclasses?: Subclass[],\n    classFeatures?: FeatureSet[],\n    race?: Race,\n    subrace?: Subrace,\n    raceFeatures?: Trait[],\n    gears?: {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    items?: {\n      item: Item;\n      base: Gear | undefined;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    spells?: Spell[],\n    monsters?: Monster[],\n    modifiers?: Modifier[]\n  ) {\n    this.character = character || new Char();\n    this.oldCharacter = character || new Char();\n    this.level = level || 0;\n    this.prof = prof || 0;\n    this.classes = classes || [];\n    this.subclasses = subclasses || [];\n    this.classFeatures = classFeatures || [];\n    this.race = race || new Race();\n    this.subrace = subrace || new Subrace();\n    this.raceFeatures = raceFeatures || [];\n    this.gears = gears || [];\n    this.items = items || [];\n    this.spells = spells || [];\n    this.monsters = monsters || [];\n    this.modifiers = modifiers || [];\n  }\n}\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo192.a0b12edf.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 293;","export enum ModifierOperator {\n  EQUAL,\n  ADD,\n  SUBSTRACT,\n}\n\nexport default class Modifier {\n  target: string | string[];\n  operator: ModifierOperator;\n  value: string | number;\n  origin: string;\n\n  constructor(\n    target: string | string[],\n    operator: ModifierOperator,\n    value: string | number,\n    origin: string\n  ) {\n    this.target = target;\n    this.operator = operator;\n    this.value = value;\n    this.origin = origin;\n  }\n\n  makeString(): string {\n    let op = \"\";\n    if (this.operator === ModifierOperator.ADD) {\n      op = \"+\";\n    } else if (this.operator === ModifierOperator.SUBSTRACT) {\n      op = \"-\";\n    } else if (this.operator === ModifierOperator.EQUAL) {\n      op = \"=\";\n    }\n\n    let tar = \"\";\n    if (Array.isArray(this.target)) {\n      tar = `${this.target[0]}.${this.target[1]}`;\n    } else {\n      tar = this.target;\n    }\n\n    return `${tar} ${op} ${this.value}`;\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\nimport LogoImg from \"../../logo192.png\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <NameWrapper>\n        <Logo src={LogoImg} />\n        <Name>DnDTome</Name>\n      </NameWrapper>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\n  width: calc(100% - 20px);\n  height: 30px;\n  line-height: 30px;\n  padding: 10px 10px 10px 10px;\n  background-color: ${({ theme }) => theme.header.backgroundColor};\n  color: ${({ theme }) => theme.header.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n\n  @media (max-width: 576px) {\n    width: calc(100% - 60px);\n    padding: 10px 10px 10px 50px;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  width: 150px;\n  svg {\n    float: left;\n    font-size: 30px;\n    margin-right: 5px;\n  }\n`;\n\nconst Name = styled.div`\n  width: 95px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  float: left;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  float: left;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: none;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n  @media (max-width: 576px) {\n    display: flex;\n  }\n`;\n","import styled from \"styled-components\";\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.6;\n  transition: 0.3s;\n`;\n\nexport const LeftTooltip = styled(Tooltip)`\n  right: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nexport const RightTooltip = styled(Tooltip)`\n  left: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent ${({ theme }) => theme.main.highlight} transparent transparent;\n  }\n`;\n\nexport const Bar = styled.div<SearchMode>`\n  position: fixed;\n  z-index: 50;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 120px);\n  padding: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nexport const FixedBar = styled(Bar)<SearchMode>`\n  top: 40px;\n  left: 100px;\n  z-index: 900;\n  \n  @media (max-width: 576px) {\n    min-width: calc(100% - 20px);\n    left: 0px;\n  }\n`;\n\nexport const SearchBar = styled.div<SearchMode>`\n  position: absolute;\n  bottom: -35px;\n  left: calc(50% - 17px);\n\n  height: 40px;\n  width: 40px;\n  transform: rotate(45deg);\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  text-align: center;\n  line-height: 40px;\n\n  @media (max-width: 576px) {\n    left: calc(50% - 20px);\n  }\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CreateButton = styled.button`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    top: auto;\n  \n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border: none;\n    padding 10px;\n    box-sizing:content-box;\n    line-height: 20px;\n    cursor: pointer;\n  \n    width: 30px;\n    height: 30px;\n    border-radius: 40px;\n    text-decoration: none;\n  \n    &:hover {\n      color: ${({ theme }) => theme.buttons.hoverColor};\n      ${LeftTooltip} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  `;\n\nexport const ExportButton = styled(CreateButton)`\n  bottom: 70px;\n`;\n\nexport const FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n  faHome,\n  faTable,\n  faMapMarkedAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiBookshelf,\n  GiSolarSystem,\n  GiScrollUnfurled,\n  GiDjinn,\n} from \"react-icons/gi\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport { RightTooltip } from \"../SearchbarStyle\";\nimport { MdEvent } from \"react-icons/md\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <TopSide>\n        <Link\n          to=\"/home\"\n          className={\n            location.pathname === \"/home\" || location.pathname === \"/\" ? \"menuItemActiv\" : \"\"\n          }\n        >\n          <FontAwesomeIcon icon={faHome} />\n          <RightTooltip>Home</RightTooltip>\n        </Link>\n        <Seperator />\n      </TopSide>\n      <MiddleSide>\n        <LeftSide>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiBookmarklet />\n            <RightTooltip>Campaigns</RightTooltip>\n          </Link>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiScrollUnfurled />\n            <RightTooltip>Quests</RightTooltip>\n          </Link>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiDjinn />\n            <RightTooltip>Npc's</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSolarSystem />\n            <RightTooltip>Worlds</RightTooltip>\n          </Link>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMapMarkedAlt} />\n            <RightTooltip>Locations</RightTooltip>\n          </Link>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <MdEvent />\n            <RightTooltip>Events</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/randomTable-overview\"\n            className={location.pathname === \"/randomTable-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faTable} />\n            <RightTooltip>Random Tables</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link to=\"/library\" className={location.pathname === \"/library\" ? \"menuItemActiv\" : \"\"}>\n            <GiBookshelf />\n            <RightTooltip>Library</RightTooltip>\n          </Link>\n        </LeftSide>\n        <RightSide>\n          <Link\n            to=\"/spell-overview\"\n            className={location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMeteor} />\n            <RightTooltip>Spells</RightTooltip>\n          </Link>\n          <Link\n            to=\"/item-overview\"\n            className={location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiCrystalWand />\n            <RightTooltip>Magic Items</RightTooltip>\n          </Link>\n          <Link\n            to=\"/gear-overview\"\n            className={location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiBackpack />\n            <RightTooltip>Gear</RightTooltip>\n          </Link>\n          <Link\n            to=\"/race-overview\"\n            className={location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiWomanElfFace />\n            <RightTooltip>Races</RightTooltip>\n          </Link>\n          <Link\n            to=\"/class-overview\"\n            className={location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiPlagueDoctorProfile />\n            <RightTooltip>Classes</RightTooltip>\n          </Link>\n          <Link\n            to=\"/selection-overview\"\n            className={location.pathname === \"/selection-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <BiSelectMultiple />\n            <RightTooltip>Selections</RightTooltip>\n          </Link>\n          <Link\n            to=\"/char-overview\"\n            className={location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faIdCard} />\n            <RightTooltip>Chars</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/monster-overview\"\n            className={location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faDragon} />\n            <RightTooltip>Monsters</RightTooltip>\n          </Link>\n          <Link\n            to=\"/encounter-overview\"\n            className={location.pathname === \"/encounter-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSwordClash />\n            <RightTooltip>Encounters</RightTooltip>\n          </Link>\n        </RightSide>\n      </MiddleSide>\n      <BottomSide>\n        <Seperator />\n        <Link\n          to=\"/statistics\"\n          className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faChartPie} />\n          <RightTooltip>Statistics</RightTooltip>\n        </Link>\n        <Link to=\"/options\" className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}>\n          <FontAwesomeIcon icon={faCog} />\n          <RightTooltip>Options</RightTooltip>\n        </Link>\n      </BottomSide>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 1.5em - 55px);\n  text-align: center;\n  padding: 1rem;\n\n  overflow: visible;\n\n  position: fixed;\n  z-index: 950;\n  top: 50px;\n  left: 0;\n\n  @media (max-width: 576px) {\n    transition: transform 0.3s ease-in-out;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  }\n`;\n\nconst Seperator = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n  flex: 1 1 auto;\n  min-width: 100%;\n  max-height: 0px;\n  margin-top: -1px;\n  margin-bottom: -1px;\n`;\n\nconst TopSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: calc(100% - 10px);\n\n  svg {\n    margin-right: 5px;\n  }\n\n  a {\n    flex: 1 1 auto;\n    max-height: 20px;\n    font-size: 20px;\n    text-align: center;\n    padding: 0.75rem 0;\n    color: ${({ theme }) => theme.tile.color};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    position: relative;\n    display: inline-block;\n\n    svg {\n      padding: 0px;\n      margin: 0px;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n    ${RightTooltip} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\nconst MiddleSide = styled.div``;\nconst BottomSide = styled(TopSide)``;\nconst LeftSide = styled(TopSide)`\n  width: 32px;\n  float: left;\n`;\nconst RightSide = styled(LeftSide)`\n  margin-left: 5px;\n  padding-left: 5px;\n  border-left: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst Navigation = ({ open, setOpen }: $Props) => {\n  return (\n    <Nav>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  max-width: 100px;\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { ReactNode, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport styled from \"styled-components\";\nimport Header from \"./navigation/Header\";\nimport Navigation from \"./navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const moveNav = (mode: string) => {\n    if (mode === \"open\") {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => moveNav(\"open\"),\n    onSwipedLeft: () => moveNav(\"close\"),\n  });\n\n  return (\n    <App {...handlers}>\n      <Header />\n      <Navigation open={open} setOpen={setOpen} />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: no-wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow-x: hidden;\n`;\n\nconst Content = styled.div`\n  margin-left: 105px;\n  width: 100%;\n\n  @media (max-width: 576px) {\n    margin-left: 0px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { Suspense, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../data/campaign/Campaign\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  campaign: Campaign;\n}\n\nconst CampaignTile = ({ campaign }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  return (\n    <Tile to={\"/campaign-detail/id/\" + campaign.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n\n        <PropWrapper>\n          <Name>\n            <b>{campaign.name}</b>\n          </Name>\n          <Text>\n            <PropTitle>Description</PropTitle>\n            {campaign.description}\n          </Text>\n          <WideProp>\n            <Icon icon={faLink} />\n            {campaign.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CampaignTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  //world: World;\n  quests: string[];\n  npcs: string[];\n  notes: Note[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    quests?: string[],\n    npcs?: string[],\n    notes?: Note[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.quests = quests || [];\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const questsCheck = arg.quests !== undefined && Array.isArray(arg.quests);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    questsCheck &&\n    npcsCheck &&\n    notesCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e:any) => void);\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CampaignSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewCampaign = () => {\n    let newCampaign = new Campaign();\n    delete newCampaign.id;\n    createNewWithId(\"campaigns\", newCampaign, (id) => {\n      history.push(`/campaign-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"campaigns\", filters, \"DnDTome_filtered_campaigns.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewCampaign()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default CampaignSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport Filter from \"../../../data/Filter\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nimport AppWrapper from \"../../AppWrapper\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport CampaignTile from \"./CampaignTile\";\nimport CampaignSearchBar from \"./CampaignSearchBar\";\n\nconst CampaignOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allCampaigns, setAllCampaigns] = useState<Campaign[]>([]);\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"campaigns\", filters, (results: any[]) => {\n      setAllCampaigns(results);\n      setCampaigns(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (campaigns.length === allCampaigns.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setCampaigns((s) =>\n      s.concat(allCampaigns.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CampaignSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <CampaignContainer\n        dataLength={campaigns.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {campaigns!.map((campaign: Campaign, index: number) => {\n          return <CampaignTile key={index} campaign={campaign}></CampaignTile>;\n        })}\n      </CampaignContainer>\n    </AppWrapper>\n  );\n};\n\nexport default CampaignOverview;\n\nconst CampaignContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName]\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName]\n                      .toLowerCase()\n                      .includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Notes\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import Char from \"../chars/Char\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\nimport Quest from \"./Quest\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  quests: Quest[];\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], quests?: Quest[]) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.quests = quests || [];\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let quests: Quest[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let questList: Promise<Quest>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  campaign.quests.forEach((quest: string) => {\n    questList.push(recivePromiseByAttribute(\"quests\", \"name\", quest));\n  });\n\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  quests = await Promise.all(questList);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, quests);\n};\n","import {\n  faDragon,\n  faIdCard,\n  faMapMarkedAlt,\n  faMeteor,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiBookshelf,\n  GiDjinn,\n} from \"react-icons/gi\";\nimport { MdEvent } from \"react-icons/md\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    {formatIcon(linkParts[0])} {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      default:\n        return \"\";\n    }\n  };\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{npc.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <WideProp>\n            <Icon icon={faLink} />\n            {npc.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Quest from \"../../../data/campaign/Quest\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  quest: Quest;\n}\n\nconst QuestTile = ({ quest }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (quest !== undefined) {\n      if (quest.pic === \"\" || quest.pic === null) {\n        return \"\";\n      }\n      return quest.pic;\n    }\n    return \"\";\n  }, [quest]);\n\n  return (\n    <Tile to={\"/quest-detail/id/\" + quest.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{quest.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{quest.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <WideProp>\n            <Icon icon={faLink} />\n            {quest.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default QuestTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport CharTile from \"../../chars/CharTile\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport Filter from \"../../../../data/Filter\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport NpcTile from \"../../npc/NpcTile\";\nimport QuestTile from \"../../quest/QuestTile\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Players\", \"Notes\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                {loadedCampaign.campaign.description}\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Quests\" && (\n            <PropWrapper>\n              {loadedCampaign.quests.map((quest: Quest, index: number) => {\n                return <QuestTile quest={quest} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled(View)`\n  margin-top: 50px;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport CampaignEditView from \"./CampaignEditView\";\nimport CampaignView from \"./CampaignView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  campaign: Campaign;\n}\n\nconst CampaignDetail = ({ campaign }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [campaignObj, editCampaign] = useState<Campaign>(campaign);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteCampaign = (campaignId: number | undefined) => {\n    remove(\"campaigns\", campaignId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (campaignObj !== campaign) {\n      setUnsavedChanges(true);\n    }\n  }, [campaignObj, campaign]);\n\n  const updateCampaign = (tableName: string, campaignObj: Campaign) => {\n    updateWithCallback(tableName, campaignObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveCampaign = (campaign: Campaign) => {\n    editCampaign(campaign);\n    updateCampaign(\"campaigns\", campaign);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateCampaign(\"campaigns\", campaignObj)} icon={faSave} />\n            <IconButton onClick={() => deleteCampaign(campaignObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CampaignEditView campaign={campaignObj} onEdit={(value) => editCampaign(value)} />\n      ) : (\n        <CampaignView campaign={campaignObj} onEdit={(value) => editAndSaveCampaign(value)} />\n      )}\n    </>\n  );\n};\n\nexport default CampaignDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport CampaignDetail from \"../CampaignDetail\";\n\ntype TParams = { id: string };\n\nconst IdToCampaign = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [campaign, loading, error] = useItem(db.campaigns, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && campaign !== undefined ? <CampaignDetail campaign={campaign} /> : \"\"}\n    </AppWrapper>\n  );\n};\n\nexport default IdToCampaign;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport CampaignDetail from \"../CampaignDetail\";\n\ntype TParams = { name: string };\n\nconst NameToCampaign = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [campaign, loading, error] = useItemByAttr(db.campaigns, \"name\", match.params.name);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && campaign !== undefined ? <CampaignDetail campaign={campaign} /> : \"\"}\n    </AppWrapper>\n  );\n};\n\nexport default NameToCampaign;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  mobile?: boolean;\n  onChange: (value: string, sort: { name: string; label: string; sort: number }) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  mobile,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field mobile={mobile === undefined ? true : mobile}>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onChange(e.target.value, sort)}></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />}\n          {sort.sort === 2 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleDown} />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\ntype MobileType = {\n  mobile?: boolean;\n};\n\nconst Field = styled.label<MobileType>`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ mobile }) => (!mobile ? \"@media (max-width: 576px) {display: none;}\" : \"\")}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"chars\", filters, \"DnDTome_filtered_chars.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default CharSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Char from \"../../../data/chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <CharContainer\n          dataLength={chars.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {chars!.map((char: Char, index: number) => {\n            return <CharTile key={index} char={char}></CharTile>;\n          })}\n        </CharContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField\n            value={peer.id}\n            label={`Your ${name} ID:`}\n            onChange={() => {}}\n          />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport BuildChar from \"../../../../../data/chars/BuildChar\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../form_elements/SmallNumberField\";\nimport FeatureSet from \"../../../../../data/classes/FeatureSet\";\nimport FormatedText from \"../../../../general_elements/FormatedText\";\n\ninterface $Props {\n  buildChar: BuildChar;\n  onChange: (character: BuildChar) => void;\n}\n\nconst CharGeneral = ({ buildChar, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    buildChar.character.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [buildChar]);\n\n  useEffect(() => {\n    if (buildChar.classes && buildChar.classes.length > 0) {\n      const level = calcLevel();\n      buildChar.classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [buildChar, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar: BuildChar = {\n      ...buildChar,\n      character: {\n        ...buildChar.character,\n        money: { ...buildChar.character.money, [field]: value },\n      },\n    };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...buildChar, character: { ...buildChar.character, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(buildChar.character.saves.strSaveProf, buildChar.character.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(buildChar.character.saves.dexSaveProf, buildChar.character.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(buildChar.character.saves.conSaveProf, buildChar.character.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(buildChar.character.saves.intSaveProf, buildChar.character.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(buildChar.character.saves.wisSaveProf, buildChar.character.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(buildChar.character.saves.chaSaveProf, buildChar.character.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(buildChar.character.skills.acrobaticsProf, buildChar.character.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(buildChar.character.skills.animalHandlingProf, buildChar.character.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(buildChar.character.skills.arcanaProf, buildChar.character.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(buildChar.character.skills.athleticsProf, buildChar.character.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(buildChar.character.skills.deceptionProf, buildChar.character.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(buildChar.character.skills.historyProf, buildChar.character.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(buildChar.character.skills.insightProf, buildChar.character.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(buildChar.character.skills.intimidationProf, buildChar.character.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(buildChar.character.skills.investigationProf, buildChar.character.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(buildChar.character.skills.medicineProf, buildChar.character.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(buildChar.character.skills.natureProf, buildChar.character.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(buildChar.character.skills.perceptionProf, buildChar.character.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(buildChar.character.skills.performanceProf, buildChar.character.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(buildChar.character.skills.persuasionProf, buildChar.character.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(buildChar.character.skills.religionProf, buildChar.character.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(buildChar.character.skills.sleightOfHandProf, buildChar.character.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(buildChar.character.skills.stealthProf, buildChar.character.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(buildChar.character.skills.survivalProf, buildChar.character.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(buildChar.character.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {buildChar.character.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {buildChar.character.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {buildChar.character.hp}\n          </Prop>\n          <SmallNumberField\n            value={buildChar.character.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {buildChar.character.classes.map((classe) => {\n              return buildChar.classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(buildChar.character.skills.perceptionProf, buildChar.character.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(buildChar.character.skills.investigationProf, buildChar.character.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(buildChar.character.skills.insightProf, buildChar.character.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={buildChar.character.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={buildChar.character.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={buildChar.character.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={buildChar.character.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={buildChar.character.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={buildChar.character.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={buildChar.character.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../data/chars/Char\";\nimport ClassSet from \"../../../../../data/chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport BuildChar from \"../../../../../data/chars/BuildChar\";\n\nimport FormatedText from \"../../../../general_elements/FormatedText\";\nimport Feature from \"../../../../../data/classes/Feature\";\n\ninterface $Props {\n  buildChar: BuildChar;\n}\n\nconst CharCombat = ({ buildChar }: $Props) => {\n  let history = useHistory();\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (buildChar.classFeatures && buildChar.classFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      buildChar.classFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [buildChar]);\n\n  return (\n    <>\n      <MinView>\n        {buildChar.items &&\n          buildChar.items.length > 0 &&\n          buildChar.items.map((baseitem, index: number) => {\n            if (baseitem.item.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const bonus = Math.floor((buildChar.character[baseitem.attribute] - 10) / 2);\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink onClick={() => history.push(`/item-detail/name/${baseitem.origin}`)}>\n                      {baseitem.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +{bonus + (baseitem.prof ? buildChar.prof : 0) + baseitem.item.magicBonus}\n                  </Prop>\n                  <Prop>{`${baseitem.base?.damage} +${baseitem.item.magicBonus + bonus}`}</Prop>\n                  <Prop>{baseitem.base?.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {buildChar.gears &&\n          buildChar.gears.length > 0 &&\n          buildChar.gears.map((baseGear, index: number) => {\n            if (baseGear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((buildChar.character.str - 10) / 2);\n              const dexBonus = Math.floor((buildChar.character.dex - 10) / 2);\n              if (baseGear.gear.properties.toLocaleLowerCase().includes(\"finesse\")) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{baseGear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + buildChar.prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + buildChar.prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{baseGear.gear.damage}</Prop>\n                    <Prop>{baseGear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{baseGear.gear.name}</Prop>\n                    <Prop>+{strBonus + buildChar.prof}</Prop>\n                    <Prop>{baseGear.gear.damage}</Prop>\n                    <Prop>{baseGear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={buildChar.character.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport BuildChar from \"../../../../../data/chars/BuildChar\";\n\nimport SmallNumberArrayField from \"../../../../form_elements/SmallNumberArrayField\";\nimport SpellTile from \"../../../spells/SpellTile\";\nimport SmallNumberField from \"../../../../form_elements/SmallNumberField\";\n\ninterface $Props {\n  buildChar: BuildChar;\n  saveChar: (char: BuildChar) => void;\n}\n\nconst CharSpell = ({ buildChar, saveChar }: $Props) => {\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = buildChar.character.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...buildChar, character: { ...buildChar.character, spellSlots: newSpellSlots } });\n    },\n    [buildChar, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (oldBoni: { origin: string; value: number; max: number }, value: number) => {\n      let newBonis = buildChar.character.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...buildChar, character: { ...buildChar.character, currencyBonis: newBonis } });\n    },\n    [buildChar, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {buildChar.character.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {buildChar.character.castingDC}\n          </Prop>\n          {buildChar.character.currencyBonis &&\n            buildChar.character.currencyBonis.map(\n              (boni: { origin: string; value: number; max: number }, index: number) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) => onCurrencyBoniChange(boni, boniChange)}\n                  />\n                );\n              }\n            )}\n          {buildChar.character.spellSlots &&\n            buildChar.character.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) => onSpellslotChange(classSlots, i, value)}\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {buildChar.spells &&\n            buildChar.spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import { PDFDocument } from \"pdf-lib\";\nimport Char from \"../data/chars/Char\";\nimport ClassSet from \"../data/chars/ClassSet\";\nimport Feature from \"../data/classes/Feature\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Spell from \"../data/Spell\";\nimport { buildCharacter } from \"./CharacterService\";\n\n\nconst formatScore = (score: number) => {\n  let mod = Math.floor((score - 10) / 2);\n  if (score > 9) {\n    return \"+\" + mod;\n  }\n  return \"\" + mod;\n};\n\nconst calcSkill = (skillProf: number, prof: number, stat: number) => {\n  return \"\" + (skillProf * prof + Math.floor((stat - 10) / 2));\n};\n\nconst fillTemplate = async (template: string | ArrayBuffer, char: Char) => {\n  let completeChar = await buildCharacter(char);\n\n  // Load a PDF with form fields\n  const pdfDoc = await PDFDocument.load(template);\n\n  // Get the form containing all the fields\n  const form = pdfDoc.getForm();\n\n  form.getTextField(\"CharacterName\").setText(char.name);\n  form.getTextField(\"PlayerName\").setText(char.player);\n  form.getTextField(\"Alignment\").setText(char.alignment);\n  form.getTextField(\"AC\").setText(\"\" + char.ac);\n  form.getTextField(\"Initiative\").setText(\"\" + char.init);\n  form.getTextField(\"Speed\").setText(char.speed);\n  form.getTextField(\"HPMax\").setText(\"\" + char.hp);\n  form.getTextField(\"HPCurrent\").setText(\"\" + char.currentHp);\n  form.getTextField(\"HD\");\n  form.getTextField(\"HDTotal\");\n  form.getTextField(\"Background\").setText(char.background);\n  form.getTextField(\"XP\").setText(\"Milestone\");\n\n  form.getTextField(\"Race\").setText(char.race.race + \" (\" + char.race.subrace + \")\");\n  let classes = \"\";\n  char.classes.forEach((classSet: ClassSet) => {\n    classes += `${classSet.classe} ${classSet.level} (${classSet.subclasse}), `;\n  });\n  form.getTextField(\"ClassLevel\").setText(classes);\n\n  form.getTextField(\"CP\").setText(\"\" + char.money.copper);\n  form.getTextField(\"SP\").setText(\"\" + char.money.silver);\n  form.getTextField(\"EP\").setText(\"\" + char.money.electrum);\n  form.getTextField(\"GP\").setText(\"\" + char.money.gold);\n  form.getTextField(\"PP\").setText(\"\" + char.money.platinum);\n\n  form.getTextField(\"STR\").setText(\"\" + char.str);\n  form.getTextField(\"STRmod\").setText(formatScore(char.str));\n  form.getTextField(\"DEX\").setText(\"\" + char.dex);\n  form.getTextField(\"DEXmod\").setText(formatScore(char.dex));\n  form.getTextField(\"CON\").setText(\"\" + char.con);\n  form.getTextField(\"CONmod\").setText(formatScore(char.con));\n  form.getTextField(\"INT\").setText(\"\" + char.int);\n  form.getTextField(\"INTmod\").setText(formatScore(char.int));\n  form.getTextField(\"WIS\").setText(\"\" + char.wis);\n  form.getTextField(\"WISmod\").setText(formatScore(char.wis));\n  form.getTextField(\"CHA\").setText(\"\" + char.cha);\n  form.getTextField(\"CHAmod\").setText(formatScore(char.cha));\n\n  form\n    .getTextField(\"ST Strength\")\n    .setText(calcSkill(char.saves.strSaveProf, completeChar.prof, char.str));\n  if (char.saves.strSaveProf === 1) form.getCheckBox(\"Check Box 11\").check();\n  form\n    .getTextField(\"ST Dexterity\")\n    .setText(calcSkill(char.saves.dexSaveProf, completeChar.prof, char.dex));\n  if (char.saves.dexSaveProf === 1) form.getCheckBox(\"Check Box 18\").check();\n  form\n    .getTextField(\"ST Constitution\")\n    .setText(calcSkill(char.saves.conSaveProf, completeChar.prof, char.con));\n  if (char.saves.conSaveProf === 1) form.getCheckBox(\"Check Box 19\").check();\n  form\n    .getTextField(\"ST Intelligence\")\n    .setText(calcSkill(char.saves.intSaveProf, completeChar.prof, char.int));\n  if (char.saves.intSaveProf === 1) form.getCheckBox(\"Check Box 20\").check();\n  form\n    .getTextField(\"ST Wisdom\")\n    .setText(calcSkill(char.saves.wisSaveProf, completeChar.prof, char.wis));\n  if (char.saves.wisSaveProf === 1) form.getCheckBox(\"Check Box 21\").check();\n  form\n    .getTextField(\"ST Charisma\")\n    .setText(calcSkill(char.saves.chaSaveProf, completeChar.prof, char.cha));\n  if (char.saves.chaSaveProf === 1) form.getCheckBox(\"Check Box 22\").check();\n\n  form\n    .getTextField(\"Acrobatics\")\n    .setText(calcSkill(char.skills.acrobaticsProf, completeChar.prof, char.str));\n  if (char.skills.acrobaticsProf > 0) form.getCheckBox(\"Check Box 23\").check();\n  form\n    .getTextField(\"Animal\")\n    .setText(calcSkill(char.skills.animalHandlingProf, completeChar.prof, char.wis));\n  if (char.skills.animalHandlingProf > 0) form.getCheckBox(\"Check Box 24\").check();\n  form\n    .getTextField(\"Arcana\")\n    .setText(calcSkill(char.skills.arcanaProf, completeChar.prof, char.int));\n  if (char.skills.arcanaProf > 0) form.getCheckBox(\"Check Box 25\").check();\n  form\n    .getTextField(\"Athletics\")\n    .setText(calcSkill(char.skills.athleticsProf, completeChar.prof, char.dex));\n  if (char.skills.athleticsProf > 0) form.getCheckBox(\"Check Box 26\").check();\n  form\n    .getTextField(\"Deception\")\n    .setText(calcSkill(char.skills.deceptionProf, completeChar.prof, char.cha));\n  if (char.skills.deceptionProf > 0) form.getCheckBox(\"Check Box 27\").check();\n  form\n    .getTextField(\"History\")\n    .setText(calcSkill(char.skills.historyProf, completeChar.prof, char.int));\n  if (char.skills.historyProf > 0) form.getCheckBox(\"Check Box 28\").check();\n  form\n    .getTextField(\"Insight\")\n    .setText(calcSkill(char.skills.insightProf, completeChar.prof, char.wis));\n  if (char.skills.insightProf > 0) form.getCheckBox(\"Check Box 29\").check();\n  form\n    .getTextField(\"Intimidation\")\n    .setText(calcSkill(char.skills.intimidationProf, completeChar.prof, char.cha));\n  if (char.skills.intimidationProf > 0) form.getCheckBox(\"Check Box 30\").check();\n  form\n    .getTextField(\"Investigation\")\n    .setText(calcSkill(char.skills.investigationProf, completeChar.prof, char.int));\n  if (char.skills.investigationProf > 0) form.getCheckBox(\"Check Box 31\").check();\n  form\n    .getTextField(\"Medicine\")\n    .setText(calcSkill(char.skills.medicineProf, completeChar.prof, char.wis));\n  if (char.skills.medicineProf > 0) form.getCheckBox(\"Check Box 32\").check();\n  form\n    .getTextField(\"Nature\")\n    .setText(calcSkill(char.skills.natureProf, completeChar.prof, char.int));\n  if (char.skills.natureProf > 0) form.getCheckBox(\"Check Box 33\").check();\n  form\n    .getTextField(\"Perception\")\n    .setText(calcSkill(char.skills.perceptionProf, completeChar.prof, char.wis));\n  if (char.skills.perceptionProf > 0) form.getCheckBox(\"Check Box 34\").check();\n  form\n    .getTextField(\"Performance\")\n    .setText(calcSkill(char.skills.performanceProf, completeChar.prof, char.cha));\n  if (char.skills.performanceProf > 0) form.getCheckBox(\"Check Box 35\").check();\n  form\n    .getTextField(\"Persuasion\")\n    .setText(calcSkill(char.skills.persuasionProf, completeChar.prof, char.cha));\n  if (char.skills.persuasionProf > 0) form.getCheckBox(\"Check Box 35\").check();\n  form\n    .getTextField(\"Religion\")\n    .setText(calcSkill(char.skills.religionProf, completeChar.prof, char.int));\n  if (char.skills.religionProf > 0) form.getCheckBox(\"Check Box 36\").check();\n  form\n    .getTextField(\"SleightofHand\")\n    .setText(calcSkill(char.skills.sleightOfHandProf, completeChar.prof, char.dex));\n  if (char.skills.sleightOfHandProf > 0) form.getCheckBox(\"Check Box 37\").check();\n  form\n    .getTextField(\"Stealth\")\n    .setText(calcSkill(char.skills.stealthProf, completeChar.prof, char.dex));\n  if (char.skills.stealthProf > 0) form.getCheckBox(\"Check Box 38\").check();\n  form\n    .getTextField(\"Survival\")\n    .setText(calcSkill(char.skills.survivalProf, completeChar.prof, char.wis));\n  if (char.skills.survivalProf > 0) form.getCheckBox(\"Check Box 38\").check();\n\n  form.getTextField(\"Treasure\");\n\n  let equipments: string = \"\";\n  char.items.forEach(\n    (item: { origin: string; attuned: boolean; prof: boolean; attribute: string }) => {\n      equipments += item.origin + \", \";\n    }\n  );\n  form.getTextField(\"Equipment\").setText(equipments);\n\n  let featureText = \"\";\n  let feature2Text = \"\";\n  completeChar.classFeatures.forEach((features: FeatureSet) => {\n    features.features.forEach((featur: Feature) => {\n      if (featur.type.toString() !== \"normal\") {\n        feature2Text += featur.type + \" - \" + featur.name + \"\\n\";\n      } else {\n        featureText += featur.type + \" - \" + featur.name + \"\\n\";\n      }\n    });\n  });\n  form.getTextField(\"Feat+Traits\").setText(featureText);\n  form.getTextField(\"Features and Traits\").setText(feature2Text);\n\n  form.getTextField(\"SpellSaveDC  2\").setText(\"\" + char.castingDC);\n  form.getTextField(\"SpellAtkBonus 2\").setText(\"\" + char.castingHit);\n  form.getTextField(\"SpellcastingAbility 2\");\n  form.getTextField(\"Spellcasting Class 2\");\n\n  let count = 0;\n  completeChar.items.forEach((item) => {\n    if (count <= 3 && item.base !== undefined) {\n      count++;\n      const bonus = Math.floor((char[item.attribute] - 10) / 2);\n      form.getTextField(`Wpn Name ${count}`).setText(item.item.name);\n      form\n        .getTextField(`Wpn${count} AtkBonus`)\n        .setText(`+ ${bonus + (item.prof ? completeChar.prof : 0) + item.item.magicBonus}`);\n      form\n        .getTextField(`Wpn${count} Damage`)\n        .setText(`${item.base.damage} +${item.item.magicBonus + bonus}`);\n    }\n  });\n  if (count <= 3) {\n    completeChar.gears.forEach((gear) => {\n      if (count <= 3 && gear.gear.damage !== \"\") {\n        count++;\n        const strBonus = Math.floor((char.str - 10) / 2);\n        const dexBonus = Math.floor((char.dex - 10) / 2);\n        if (gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")) {\n          form.getTextField(`Wpn Name ${count}`).setText(gear.gear.name);\n          form.getTextField(`Wpn${count} AtkBonus`).setText(\n            `${strBonus > dexBonus ? `+${strBonus + completeChar.prof}` : \"\"}\n            ${dexBonus > strBonus ? `+${dexBonus + completeChar.prof}` : \"\"}`\n          );\n          form.getTextField(`Wpn${count} Damage`).setText(gear.gear.damage);\n        } else {\n          form.getTextField(`Wpn Name ${count}`).setText(gear.gear.name);\n          form.getTextField(`Wpn${count} AtkBonus`).setText(`+ ${strBonus + completeChar.prof}`);\n          form.getTextField(`Wpn${count} Damage`).setText(gear.gear.damage);\n        }\n      }\n    });\n  }\n\n  let spellFieldNumbers = [\n    [1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022],\n    [1015, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033],\n    [1046, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045],\n    [1048, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059],\n    [1061, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072],\n    [1074, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081],\n    [1083, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090],\n    [1092, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099],\n    [10101, 10100, 10102, 10103, 10104, 10105, 10106],\n    [10108, 10107, 10109, 101010, 101011, 101012, 101013],\n  ];\n  completeChar.spells.forEach((spell: Spell) => {\n    if (spellFieldNumbers[spell.level].length > 0) {\n      form.getTextField(`Spells ${spellFieldNumbers[spell.level][0]}`).setText(spell.name);\n      spellFieldNumbers[spell.level].slice(1);\n    }\n  });\n\n  // Serialize the PDFDocument to bytes (a Uint8Array)\n  return pdfDoc.save();\n};\n\nconst downloadFilledPdf = (pdfBytes: Uint8Array, filename: string) => {\n  let contentType = \"application/pdf;charset=utf-8;\";\n  const blob = new Blob([pdfBytes], { type: contentType });\n\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var pdfURL = window.URL.createObjectURL(blob);\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = pdfURL;\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n\nexport const exportPdf = async (char: Char) => {\n  const template =\n    \"\";\n\n  fillTemplate(template, char).then((filledArray) => {\n    downloadFilledPdf(filledArray, char.name + \".pdf\");\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { update } from \"../../../../services/DatabaseService\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport Feature from \"../../../../data/classes/Feature\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Trait from \"../../../../data/races/Trait\";\n\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharGeneral from \"./detail_components/CharGeneral\";\nimport CharHeader from \"./detail_components/CharHeader\";\nimport ItemTile from \"../../item/ItemTile\";\nimport GearTile from \"../../gear/GearTile\";\nimport CharCombat from \"./detail_components/CharCombat\";\nimport MonsterTile from \"../../monster/MonsterTile\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CharSpell from \"./detail_components/CharSpells\";\nimport { faFilePdf, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { exportPdf } from \"../../../../services/PdfService\";\nimport { buildCharacter, applyMods } from \"../../../../services/CharacterService\";\nimport BuildChar from \"../../../../data/chars/BuildChar\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport Modifier from \"../../../../data/Modifier\";\n\ninterface $Props {\n  character: Char;\n  modifications: boolean;\n}\n\nconst CharView = ({ character, modifications }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [buildChar, setBuildChar] = useState<BuildChar>(new BuildChar());\n  const [loading, setLoading] = useState<boolean>(true);\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n    \"Modifications\",\n  ]);\n\n  useEffect(() => {\n    buildCharacter(character).then(async (buildChar) => {\n      setBuildChar(await applyMods(buildChar, modifications));\n      setLoading(false);\n    });\n  }, [character, setBuildChar, modifications]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && buildChar.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [buildChar.monsters, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && buildChar.items.length > 0) setTabs((t) => [...t, \"Items\"]);\n  }, [buildChar.items, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && buildChar.spells.length > 0) setTabs((t) => [...t, \"Spells\"]);\n  }, [buildChar.spells, tabs]);\n\n  const saveChar = (char: BuildChar) => {\n    setBuildChar(char);\n    update(\"chars\", char.character);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && buildChar && (\n        <CenterWrapper>\n          <CharHeader char={buildChar.character} />\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <>\n              <CharGeneral buildChar={buildChar} onChange={saveChar} />\n              <View>\n                <PropWrapper>\n                  {!send && (\n                    <TextButton\n                      text={`Send ${buildChar.character.name}`}\n                      icon={faPaperPlane}\n                      onClick={() => setSend(true)}\n                    />\n                  )}\n                  {!!send && <P2PSender data={buildChar.character} mode={\"THIS\"} />}\n                </PropWrapper>\n                <TextButton\n                  text={`Export ${buildChar.character.name} to Pdf`}\n                  icon={faFilePdf}\n                  onClick={() => exportPdf(buildChar.character)}\n                />\n              </View>\n            </>\n          )}\n          {activeTab === \"Combat\" && <CharCombat buildChar={buildChar} />}\n          {activeTab === \"Classes\" && (\n            <View>\n              <PropWrapper>\n                {buildChar.classes &&\n                  buildChar.classes.map((classe: Class, index: number) => {\n                    return (\n                      <SmallText key={index}>\n                        <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                        <FormatedText text={classe.proficiencies} />\n                      </SmallText>\n                    );\n                  })}\n              </PropWrapper>\n              <PropWrapper>\n                {buildChar.classFeatures &&\n                  buildChar.classFeatures\n                    .sort((f1, f2) => f1.level - f2.level)\n                    .map((featureSet: FeatureSet) => {\n                      return featureSet.features.map((feature: Feature, index: number) => {\n                        let selectionsData: {\n                          entityName: string;\n                          entityText: string;\n                          level: number;\n                        }[] = [];\n                        if (feature.selections !== undefined && feature.selections.length > 0) {\n                          buildChar.character.activeSelections.forEach((activeSelect) => {\n                            if (activeSelect.featureName === feature.name) {\n                              selectionsData.push(activeSelect.activeOption);\n                            }\n                          });\n                        }\n                        return (\n                          <Text key={index}>\n                            <PropTitle>{feature.name}:</PropTitle>\n                            <FormatedText text={feature.text} />\n                            {selectionsData.map((activeSelectOption) => {\n                              return (\n                                <>\n                                  <br />\n                                  <PropTitle>Choosen {activeSelectOption.entityName}:</PropTitle>\n                                  <FormatedText text={activeSelectOption.entityText} />\n                                </>\n                              );\n                            })}\n                          </Text>\n                        );\n                      });\n                    })}\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Race\" && (\n            <View>\n              <PropWrapper>\n                {buildChar.raceFeatures &&\n                  buildChar.raceFeatures\n                    .sort((f1, f2) => f1.level - f2.level)\n                    .map((trait: Trait, index: number) => {\n                      return (\n                        <TraitWrapper key={index}>\n                          <TraitName>{trait.name}</TraitName>\n                          <TraitLevel>{trait.level}</TraitLevel>\n                          <TraitText>\n                            <FormatedText text={trait.text} />\n                          </TraitText>\n                        </TraitWrapper>\n                      );\n                    })}\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Spells\" && <CharSpell buildChar={buildChar} saveChar={saveChar} />}\n          {activeTab === \"Items\" && (\n            <View>\n              <PropWrapper>\n                {buildChar.items &&\n                  buildChar.items.map((item, index: number) => {\n                    return <ItemTile key={index} item={item.item} />;\n                  })}\n                {buildChar.gears &&\n                  buildChar.gears.map((gear, index: number) => {\n                    return <GearTile key={index} gear={gear.gear} />;\n                  })}\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Monster\" && (\n            <View>\n              <PropWrapper>\n                {buildChar.monsters &&\n                  buildChar.monsters.map((monster, index: number) => {\n                    return <MonsterTile key={index} monster={monster} />;\n                  })}\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Notes\" && (\n            <View>\n              <PropWrapper>\n                <Text>\n                  <PropTitle>Notes:</PropTitle>\n                  <FormatedText text={buildChar.character.spellNotes} />\n                </Text>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Modifications\" && (\n            <View>\n              <PropWrapper>\n                {buildChar.modifiers.map((mod: Modifier, index: number) => {\n                  return (\n                    <Text>\n                      <PropTitle>\n                        {mod.origin}\n                        {\" | \"}\n                      </PropTitle>\n                      <FormatedText text={mod.makeString()} />\n                    </Text>\n                  );\n                })}\n              </PropWrapper>\n            </View>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature from \"../../../../data/classes/Feature\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport { buildCharacter } from \"../../../../services/CharacterService\";\nimport BuildChar from \"../../../../data/chars/BuildChar\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../../../Loading\";\n\ninterface $Props {\n  character: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ character, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [buildChar, setBuildChar] = useState<BuildChar>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [selections, setSelections] = useState<Selection[]>([]);\n\n  useEffect(() => {\n    buildCharacter(character).then((buildChar) => {\n      setBuildChar(buildChar);\n      setLoading(false);\n    });\n  }, [character, setBuildChar]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      setSelections(selectionsData);\n    });\n  }, []);\n\n  const removeSpell = (oldSpell: string) => {\n    if (buildChar !== undefined) {\n      let newSpellList = buildChar.character.spells.filter((spell) => spell !== oldSpell);\n      onEdit({ ...buildChar.character, spells: newSpellList });\n    }\n  };\n  const addNewSpell = () => {\n    if (buildChar !== undefined) {\n      let newSpellList = buildChar.character.spells;\n      newSpellList.push(\"\");\n      onEdit({ ...buildChar.character, spells: newSpellList });\n    }\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    if (buildChar !== undefined) {\n      let spells = buildChar.spells.map((spell) => {\n        if (spell.name === oldSpell) {\n          return newSpell;\n        } else {\n          return spell.name;\n        }\n      });\n      onEdit({ ...buildChar.character, spells: spells });\n    }\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    if (buildChar !== undefined) {\n      let newItemList = buildChar.items.filter((item) => item.origin !== oldItem.origin);\n      onEdit({ ...buildChar.character, items: newItemList });\n    }\n  };\n  const addNewItem = () => {\n    if (buildChar !== undefined) {\n      let newItemList = buildChar.character.items;\n      newItemList.push({\n        origin: \"\",\n        attuned: false,\n        prof: false,\n        attribute: \"str\",\n      });\n      onEdit({ ...buildChar.character, items: newItemList });\n    }\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    if (buildChar !== undefined) {\n      let items = buildChar.character.items;\n      items[i].origin = newItem;\n      onEdit({ ...buildChar.character, items: items });\n    }\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    if (buildChar !== undefined) {\n      let items = buildChar.character.items;\n      items[i] = newItem;\n      onEdit({ ...buildChar.character, items: items });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (buildChar !== undefined) {\n      let newMonsterList = buildChar.character.monsters.filter((monster) => monster !== oldMonster);\n      onEdit({ ...buildChar.character, monsters: newMonsterList });\n    }\n  };\n  const addNewMonster = () => {\n    if (buildChar !== undefined) {\n      let newMonsterList = buildChar.character.monsters;\n      newMonsterList.push(\"\");\n      onEdit({ ...buildChar.character, monsters: newMonsterList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (buildChar !== undefined) {\n      let monsters = buildChar.character.monsters.map((monster) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...buildChar.character, monsters: monsters });\n    }\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    if (buildChar !== undefined) {\n      let newClassList = buildChar.character.classes.filter((classe) => classe !== oldClass);\n      onEdit({ ...buildChar.character, classes: newClassList });\n    }\n  };\n  const addNewClass = () => {\n    if (buildChar !== undefined) {\n      let newClassList = buildChar.character.classes;\n      newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n      onEdit({ ...buildChar.character, classes: newClassList });\n    }\n  };\n\n  const recalcSelections = useCallback(() => {\n    let newActiveSelections: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[] = [];\n    if (buildChar !== undefined) {\n      buildChar.classes.forEach((classe: Class) => {\n        classe.featureSets.forEach((featureSet: FeatureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.selections !== undefined && feature.selections.length > 0) {\n              let count = 1;\n              feature.selections.forEach((select: string) => {\n                selections.forEach((selection: Selection) => {\n                  if (selection.name === select) {\n                    newActiveSelections.push({\n                      selectionName: selection.name,\n                      activeOption: selection.selectionOptions[0],\n                      featureName: feature.name,\n                      featureCount: count,\n                      className: classe.name,\n                    });\n                    count++;\n                  }\n                });\n              });\n            }\n          });\n        });\n        buildChar.subclasses.forEach((subclass: Subclass) => {\n          if (classe.name === subclass.type) {\n            subclass.features.forEach((featureSet: FeatureSet) => {\n              featureSet.features.forEach((feature: Feature) => {\n                if (feature.selections !== undefined && feature.selections.length > 0) {\n                  let count = 1;\n                  feature.selections.forEach((select: string) => {\n                    selections.forEach((selection: Selection) => {\n                      if (selection.name === select) {\n                        newActiveSelections.push({\n                          selectionName: selection.name,\n                          activeOption: selection.selectionOptions[0],\n                          featureName: feature.name,\n                          featureCount: count,\n                          className: subclass.name,\n                        });\n                        count++;\n                      }\n                    });\n                  });\n                }\n              });\n            });\n          }\n        });\n      });\n    }\n    return newActiveSelections;\n  }, [buildChar, selections]);\n\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      if (buildChar !== undefined) {\n        let classes: ClassSet[] = buildChar.character.classes.map((classSet: ClassSet) => {\n          if (classSet === oldClassSet) {\n            return { ...classSet, level: level };\n          } else {\n            return classSet;\n          }\n        });\n        let newActiveSelections = recalcSelections();\n        onEdit({\n          ...buildChar.character,\n          classes: classes,\n          activeSelections: newActiveSelections,\n        });\n      }\n    },\n    [buildChar, onEdit, recalcSelections]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      if (buildChar !== undefined) {\n        let classes = buildChar.character.classes.map((classSet: ClassSet) => {\n          if (classSet === oldClassSet) {\n            return { ...classSet, classe: classe };\n          } else {\n            return classSet;\n          }\n        });\n        onEdit({ ...buildChar.character, classes: classes });\n      }\n    },\n    [buildChar, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      if (buildChar !== undefined) {\n        let classes = buildChar.character.classes.map((classSet: ClassSet) => {\n          if (classSet === oldClassSet) {\n            return { ...classSet, subclasse: subclass };\n          } else {\n            return classSet;\n          }\n        });\n        onEdit({ ...buildChar.character, classes: classes });\n      }\n    },\n    [buildChar, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      if (buildChar !== undefined) {\n        return skillProf * buildChar.prof + formatScore(stat);\n      }\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, buildChar]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      if (buildChar !== undefined) {\n        const skills: Skills = buildChar.character.skills;\n        let profValue = skills[profName];\n        profValue = (profValue + 1) % 3;\n        onEdit({\n          ...buildChar.character,\n          skills: { ...buildChar.character.skills, [profName]: profValue },\n        });\n      }\n    },\n    [buildChar, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      if (buildChar !== undefined) {\n        const saves: Saves = buildChar.character.saves;\n        let profValue = saves[profName];\n        profValue = (profValue + 1) % 2;\n        onEdit({\n          ...buildChar.character,\n          saves: { ...buildChar.character.saves, [profName]: profValue },\n        });\n      }\n    },\n    [buildChar, onEdit]\n  );\n\n  const onChangeActiveSelection = useCallback(\n    (\n      oldActiveSelection: {\n        selectionName: string;\n        activeOption: {\n          entityName: string;\n          entityText: string;\n          level: number;\n        };\n        featureName: string;\n        className: string;\n      },\n      select: string\n    ) => {\n      if (buildChar !== undefined) {\n        let newActiveSelections = buildChar.character.activeSelections.map(\n          (activeSelection: {\n            selectionName: string;\n            activeOption: {\n              entityName: string;\n              entityText: string;\n              level: number;\n            };\n            featureName: string;\n            featureCount: number;\n            className: string;\n          }) => {\n            if (activeSelection === oldActiveSelection) {\n              let activSelect = {\n                entityName: \"\",\n                entityText: \"\",\n                level: 0,\n              };\n              selections.forEach((selection: Selection) => {\n                if (selection.name === activeSelection.selectionName) {\n                  selection.selectionOptions.forEach((option) => {\n                    if (option.entityName === select) {\n                      activSelect = option;\n                    }\n                  });\n                }\n              });\n              return { ...activeSelection, activeOption: activSelect };\n            } else {\n              return activeSelection;\n            }\n          }\n        );\n        onEdit({ ...buildChar.character, activeSelections: newActiveSelections });\n      }\n    },\n    [buildChar, selections, onEdit]\n  );\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && buildChar && (\n        <CenterWrapper>\n          <CharView>\n            <StringField\n              value={buildChar.character.name}\n              label=\"Name\"\n              onChange={(name) => onEdit({ ...buildChar.character, name: name })}\n            />\n            <StringField\n              value={buildChar.character.player}\n              label=\"Player\"\n              onChange={(player) => onEdit({ ...buildChar.character, player: player })}\n            />\n            <StringField\n              value={buildChar.character.pic}\n              label=\"Picture\"\n              onChange={(pic) => onEdit({ ...buildChar.character, pic: pic })}\n            />\n            <StringField\n              value={buildChar.character.background}\n              label=\"Background\"\n              onChange={(background) => onEdit({ ...buildChar.character, background: background })}\n            />\n            <StringField\n              value={buildChar.character.alignment}\n              label=\"Alignment\"\n              onChange={(alignment) => onEdit({ ...buildChar.character, alignment: alignment })}\n            />\n            <NumberField\n              value={buildChar.character.ac}\n              label=\"Armor Class\"\n              onChange={(ac) => onEdit({ ...buildChar.character, ac: ac })}\n            />\n            <NumberField\n              value={buildChar.character.hp}\n              label=\"Hit Points\"\n              onChange={(hp) => onEdit({ ...buildChar.character, hp: hp })}\n            />\n            <NumberField\n              value={buildChar.character.init}\n              label=\"Initiative\"\n              onChange={(init) => onEdit({ ...buildChar.character, init: init })}\n            />\n            <NumberField\n              value={buildChar.character.str}\n              label=\"Strength\"\n              onChange={(str) => onEdit({ ...buildChar.character, str: str })}\n            />\n            <NumberField\n              value={buildChar.character.dex}\n              label=\"Dexterity\"\n              onChange={(dex) => onEdit({ ...buildChar.character, dex: dex })}\n            />\n            <NumberField\n              value={buildChar.character.con}\n              label=\"Constitution\"\n              onChange={(con) => onEdit({ ...buildChar.character, con: con })}\n            />\n            <NumberField\n              value={buildChar.character.int}\n              label=\"Intelligence\"\n              onChange={(int) => onEdit({ ...buildChar.character, int: int })}\n            />\n            <NumberField\n              value={buildChar.character.wis}\n              label=\"Wisdom\"\n              onChange={(wis) => onEdit({ ...buildChar.character, wis: wis })}\n            />\n            <NumberField\n              value={buildChar.character.cha}\n              label=\"Charisma\"\n              onChange={(cha) => onEdit({ ...buildChar.character, cha: cha })}\n            />\n            <TextField\n              value={buildChar.character.spellNotes}\n              label=\"Notes\"\n              onChange={(notes) => onEdit({ ...buildChar.character, spellNotes: notes })}\n            />\n          </CharView>\n          <CharView>\n            <TabBar\n              children={[\"General\", \"Abilities\", \"Classes\", \"Races\", \"Spells\", \"Items\", \"Monster\"]}\n              onChange={(tab: string) => setTab(tab)}\n              activeTab={activeTab}\n            />\n            {activeTab === \"General\" && (\n              <>\n                <TextField\n                  value={buildChar.character.speed}\n                  label=\"Speed\"\n                  onChange={(speed) => onEdit({ ...buildChar.character, speed: speed })}\n                />\n                <TextField\n                  value={buildChar.character.profsLangs}\n                  label=\"Languages\"\n                  onChange={(profsLangs) =>\n                    onEdit({ ...buildChar.character, profsLangs: profsLangs })\n                  }\n                />\n                <TextField\n                  value={buildChar.character.senses}\n                  label=\"Senses\"\n                  onChange={(senses) => onEdit({ ...buildChar.character, senses: senses })}\n                />\n              </>\n            )}\n            {activeTab === \"Classes\" && (\n              <>\n                {buildChar.character.classes.map((classSet: ClassSet, index: number) => {\n                  return (\n                    <PropWrapper key={index}>\n                      <NumberField\n                        value={classSet.level}\n                        label=\"Level\"\n                        onChange={(level) => changeClassLevel(classSet, level)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n                      <AutoStringField\n                        optionTable={\"classes\"}\n                        value={classSet.classe}\n                        label=\"Class\"\n                        onChange={(classe) => changeClass(classSet, classe)}\n                      />\n                      <StringField\n                        value={classSet.subclasse}\n                        label=\"Subclass\"\n                        onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n                      />\n                    </PropWrapper>\n                  );\n                })}\n                <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n                {buildChar.character.activeSelections?.map(\n                  (\n                    activeSelection: {\n                      selectionName: string;\n                      activeOption: {\n                        entityName: string;\n                        entityText: string;\n                        level: number;\n                      };\n                      featureName: string;\n                      className: string;\n                    },\n                    index: number\n                  ) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <SelectionTitle>\n                          {activeSelection.featureName} of {activeSelection.className}\n                        </SelectionTitle>\n                        <EnumField\n                          options={\n                            selections\n                              .find((select) => select.name === activeSelection.selectionName)\n                              ?.selectionOptions.filter((option) => option.level <= buildChar.level)\n                              .map((option) => {\n                                return {\n                                  value: option.entityName,\n                                  label: option.entityName,\n                                };\n                              }) || []\n                          }\n                          value={{\n                            value: activeSelection.activeOption.entityName,\n                            label: activeSelection.activeOption.entityName,\n                          }}\n                          label={activeSelection.selectionName}\n                          onChange={(select) => onChangeActiveSelection(activeSelection, select)}\n                        />\n                      </PropWrapper>\n                    );\n                  }\n                )}\n              </>\n            )}\n            {activeTab === \"Races\" && (\n              <PropWrapper>\n                <AutoStringField\n                  optionTable={\"races\"}\n                  value={buildChar.character.race.race}\n                  label=\"Race\"\n                  onChange={(race) =>\n                    onEdit({\n                      ...buildChar.character,\n                      race: { ...buildChar.character.race, race: race },\n                    })\n                  }\n                />\n                <StringField\n                  value={buildChar.character.race.subrace}\n                  label=\"Subrace\"\n                  onChange={(subrace) =>\n                    onEdit({\n                      ...buildChar.character,\n                      race: { ...buildChar.character.race, subrace: subrace },\n                    })\n                  }\n                />\n              </PropWrapper>\n            )}\n            {activeTab === \"Abilities\" && (\n              <>\n                <PropWrapper>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Str Save:</PropTitle>\n                      {calcSkill(buildChar.character.saves.strSaveProf, buildChar.character.str)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                      <Icon icon={formatProf(buildChar.character.saves.strSaveProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Dex Save:</PropTitle>\n                      {calcSkill(buildChar.character.saves.dexSaveProf, buildChar.character.dex)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                      <Icon icon={formatProf(buildChar.character.saves.dexSaveProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Con Save:</PropTitle>\n                      {calcSkill(buildChar.character.saves.conSaveProf, buildChar.character.con)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                      <Icon icon={formatProf(buildChar.character.saves.conSaveProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Int Save:</PropTitle>\n                      {calcSkill(buildChar.character.saves.intSaveProf, buildChar.character.int)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                      <Icon icon={formatProf(buildChar.character.saves.intSaveProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Wis Save:</PropTitle>\n                      {calcSkill(buildChar.character.saves.wisSaveProf, buildChar.character.wis)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                      <Icon icon={formatProf(buildChar.character.saves.wisSaveProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Cha Save:</PropTitle>\n                      {calcSkill(buildChar.character.saves.chaSaveProf, buildChar.character.cha)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                      <Icon icon={formatProf(buildChar.character.saves.chaSaveProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                </PropWrapper>\n                <PropWrapper>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Acrobatics:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.acrobaticsProf,\n                        buildChar.character.str\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.acrobaticsProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Animal Handling:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.animalHandlingProf,\n                        buildChar.character.wis\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.animalHandlingProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Arcana:</PropTitle>\n                      {calcSkill(buildChar.character.skills.arcanaProf, buildChar.character.int)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.arcanaProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Athletics:</PropTitle>\n                      {calcSkill(buildChar.character.skills.athleticsProf, buildChar.character.dex)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.athleticsProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Deception:</PropTitle>\n                      {calcSkill(buildChar.character.skills.deceptionProf, buildChar.character.cha)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.deceptionProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>History:</PropTitle>\n                      {calcSkill(buildChar.character.skills.historyProf, buildChar.character.int)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.historyProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Insight:</PropTitle>\n                      {calcSkill(buildChar.character.skills.insightProf, buildChar.character.wis)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.insightProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Intimidation:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.intimidationProf,\n                        buildChar.character.cha\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.intimidationProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Investigation:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.investigationProf,\n                        buildChar.character.int\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.investigationProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Medicine:</PropTitle>\n                      {calcSkill(buildChar.character.skills.medicineProf, buildChar.character.wis)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.medicineProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Nature:</PropTitle>\n                      {calcSkill(buildChar.character.skills.natureProf, buildChar.character.int)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.natureProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Perception:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.perceptionProf,\n                        buildChar.character.wis\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.perceptionProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Performance:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.performanceProf,\n                        buildChar.character.cha\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.performanceProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Persuasion:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.persuasionProf,\n                        buildChar.character.cha\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.persuasionProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Religion:</PropTitle>\n                      {calcSkill(buildChar.character.skills.religionProf, buildChar.character.int)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.religionProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Sleight Of Hand:</PropTitle>\n                      {calcSkill(\n                        buildChar.character.skills.sleightOfHandProf,\n                        buildChar.character.dex\n                      )}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.sleightOfHandProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Stealth:</PropTitle>\n                      {calcSkill(buildChar.character.skills.stealthProf, buildChar.character.dex)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.stealthProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <PropWithProf>\n                    <PropText>\n                      <PropTitle>Survival:</PropTitle>\n                      {calcSkill(buildChar.character.skills.survivalProf, buildChar.character.wis)}\n                    </PropText>\n                    <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                      <Icon icon={formatProf(buildChar.character.skills.survivalProf)} />\n                    </PropProf>\n                  </PropWithProf>\n                  <TextField\n                    value={buildChar.character.actions}\n                    label=\"Actions\"\n                    onChange={(actions) => onEdit({ ...buildChar.character, actions: actions })}\n                  />\n                </PropWrapper>\n              </>\n            )}\n            {activeTab === \"Spells\" && (\n              <>\n                <NumberField\n                  value={buildChar.character.castingHit}\n                  label=\"Casting Hit\"\n                  onChange={(castingHit) =>\n                    onEdit({ ...buildChar.character, castingHit: castingHit })\n                  }\n                />\n                <NumberField\n                  value={buildChar.character.castingDC}\n                  label=\"Casting DC\"\n                  onChange={(castingDC) => onEdit({ ...buildChar.character, castingDC: castingDC })}\n                />\n                {buildChar.character.spells.map((spell: string, index: number) => {\n                  return (\n                    <Container key={index}>\n                      <AutoStringField\n                        optionTable={\"spells\"}\n                        value={spell}\n                        label=\"Spell\"\n                        onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeSpell(spell)} />\n                    </Container>\n                  );\n                })}\n                <TextButton text={\"Add new Spell\"} icon={faPlus} onClick={() => addNewSpell()} />\n              </>\n            )}\n            {activeTab === \"Items\" && (\n              <>\n                {buildChar.character.items.map(\n                  (\n                    item: {\n                      origin: string;\n                      attuned: boolean;\n                      prof: boolean;\n                      attribute: string;\n                    },\n                    index: number\n                  ) => {\n                    return (\n                      <Container key={index}>\n                        <AutoStringField\n                          optionTable={[\"items\", \"gears\"]}\n                          value={item.origin}\n                          label=\"Item\"\n                          onChange={(newItem) => onChangeItem(newItem, index)}\n                        />\n                        <CheckField\n                          value={!!item.attuned}\n                          label=\"Attunment\"\n                          onChange={(attunment) =>\n                            onChangeItemAttribute(\n                              {\n                                ...item,\n                                attuned: attunment,\n                              },\n                              index\n                            )\n                          }\n                        />\n                        <CheckField\n                          value={!!item.prof}\n                          label=\"Prof\"\n                          onChange={(prof) => onChangeItemAttribute({ ...item, prof: prof }, index)}\n                        />\n                        <EnumField\n                          options={[\n                            { value: \"str\", label: \"Str\" },\n                            { value: \"dex\", label: \"Dex\" },\n                            { value: \"con\", label: \"Con\" },\n                            { value: \"int\", label: \"Int\" },\n                            { value: \"wis\", label: \"Wis\" },\n                            { value: \"cha\", label: \"Cha\" },\n                          ]}\n                          value={{\n                            value: item.attribute,\n                            label: item.attribute.charAt(0).toUpperCase() + item.attribute.slice(1),\n                          }}\n                          label=\"Attribute\"\n                          onChange={(type) =>\n                            onChangeItemAttribute({ ...item, attribute: type }, index)\n                          }\n                        />\n                        <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                      </Container>\n                    );\n                  }\n                )}\n                <TextButton text={\"Add new Item\"} icon={faPlus} onClick={() => addNewItem()} />\n              </>\n            )}\n            {activeTab === \"Monster\" && (\n              <>\n                {buildChar.character.monsters.map((monster: string, index: number) => {\n                  return (\n                    <Container key={index}>\n                      <AutoStringField\n                        optionTable={\"monsters\"}\n                        value={monster}\n                        label=\"Monster\"\n                        onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n                    </Container>\n                  );\n                })}\n                <TextButton\n                  text={\"Add new Monster\"}\n                  icon={faPlus}\n                  onClick={() => addNewMonster()}\n                />\n              </>\n            )}\n          </CharView>\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst SelectionTitle = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faSlidersH,\n  faList,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  char: Char;\n  isNew: boolean;\n}\n\nconst CharDetail = ({ char, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [modMode, setModMode] = useState<boolean>(true);\n\n  const [charObj, editChar] = useState<Char>(char);\n\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${char.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"chars\", char.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        {!editMode && (\n          <EditToggle mode={(!modMode).toString()}>\n            <ToggleLeft onClick={() => setModMode(true)}>\n              <FontAwesomeIcon icon={faSlidersH} />\n            </ToggleLeft>\n            <ToggleRight onClick={() => setModMode(false)}>\n              <FontAwesomeIcon icon={faList} />\n            </ToggleRight>\n          </EditToggle>\n        )}\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateChar(\"chars\", charObj)} icon={faSave} />\n            <IconButton onClick={() => deleteChar()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView character={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} modifications={modMode} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined && (\n        <CharDetail char={char} isNew={char.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined && (\n        <CharDetail char={char} isNew={char.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../data/classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Class from \"../../../data/classes/Class\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"classes\", filters, \"DnDTome_filtered_classes.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default ClassSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Class from \"../../../data/classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses] = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ClassContainer\n          dataLength={classes.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n        </ClassContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextField from \"../../../form_elements/TextField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: FeatureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Class from \"../../../../data/classes/Class\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  classe: Class;\n  isNew: boolean;\n}\n\nconst ClassDetail = ({ classe, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${classe.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"classes\", classe.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateClass(\"classes\", classObj)} icon={faSave} />\n            <IconButton onClick={() => deleteClass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck =\n    arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { reciveByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) =>\n                  onChangeEnemy(newMonster, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangeEnemyField(\"currentHp\", currentHp, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangeEnemyField(\"initBonus\", initBonus, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, enemy, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Monster\"}\n            icon={faPlus}\n            onClick={() => addNewEnemy()}\n          />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) =>\n                  onChangePlayer(newPlayer, player, index)\n                }\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangePlayerField(\"currentHp\", currentHp, player, index)\n                }\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangePlayerField(\"initBonus\", initBonus, player, index)\n                }\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, player, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Character\"}\n            icon={faPlus}\n            onClick={() => addNewPlayer()}\n          />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loading, isLoading] = useState<boolean>(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n  }, [encounter]);\n\n  useEffect(() => {\n    let newPlayers = [...encounter.enemies, ...encounter.players];\n    if (encounter.isPlaying) {\n      newPlayers = newPlayers.sort((a, b) => (a.init < b.init ? 1 : -1));\n    }\n    setPlayers(newPlayers);\n    isLoading(false);\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number,\n    oldPlayer: Player\n  ) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (players[nextInit].currentHp <= 0) {\n      if ((nextInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % players.length;\n      counter++;\n      if (counter > players.length) {\n        break;\n      }\n    }\n    if (counter > players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton\n                text={\"Next\"}\n                icon={faStepForward}\n                onClick={() => nextPlayer()}\n              />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {players.map((player: Player, index: number) => {\n                return (\n                  <Row\n                    current={\n                      encounter.currentInit === index && encounter.isPlaying\n                    }\n                    isDead={player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={player.init}\n                        onChange={(init) =>\n                          onChangePlayerField(\"init\", init, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>\n                      {player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                      {!player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={player.currentHp}\n                        max={player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{player.hp}</Prop>\n                    <Prop>{player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterDetail = ({ encounter }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateEncounter(\"encounters\", encounterObj)} icon={faSave} />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView encounter={encounterObj} onEdit={(value) => editAndSaveEncounter(value)} />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItem(db.encounters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToEncounter;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(\n    db.encounters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToEncounter;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../data/encounter/Encounter\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDragon, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterTile = ({ encounter }: $Props) => {\n  return (\n    <Tile to={\"/encounter-detail/id/\" + encounter.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faUser} />\n            {encounter.players.length}\n          </Prop>\n          <Prop>\n            <Icon icon={faDragon} />\n            {encounter.enemies.length}\n          </Prop>\n          {encounter.isPlaying && (\n            <>\n              <Prop>Aktiv playing</Prop>\n              <Prop>\n                <PropTitle>Round: </PropTitle>\n                {encounter.roundCounter}\n              </Prop>\n            </>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default EncounterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../../data/encounter/Encounter\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst EncounterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"encounters\", filters, \"DnDTome_filtered_encounters.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default EncounterSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../data/encounter/Encounter\";\nimport Filter from \"../../../data/Filter\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nimport AppWrapper from \"../../AppWrapper\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport EncounterTile from \"./EncounterTile\";\nimport EncounterSearchBar from \"./EncounterSearchBar\";\n\nconst EncounterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEncounters, setAllEncounters] = useState<Encounter[]>([]);\n  const [encounters, setEncounters] = useState<Encounter[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"encounters\", filters, (results: any[]) => {\n      setAllEncounters(results);\n      setEncounters(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (encounters.length === allEncounters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEncounters((s) =>\n      s.concat(allEncounters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <EncounterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <EncounterContainer\n        dataLength={encounters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {encounters!.map((encounter: Encounter, index: number) => {\n          return <EncounterTile key={index} encounter={encounter}></EncounterTile>;\n        })}\n      </EncounterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default EncounterOverview;\n\nconst EncounterContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../data/Gear\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Gear from \"../../../../data/Gear\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  gear: Gear;\n  isNew: boolean;\n}\n\nconst GearDetail = ({ gear, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${gear.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"gears\", gear.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateGear(\"gears\", gearObj)} icon={faSave} />\n            <IconButton onClick={() => deleteGear()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Gear from \"../../../data/Gear\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"gears\", filters, \"DnDTome_filtered_gears.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={cost}\n          sort={sort}\n          field={\"cost\"}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setCost(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={weight}\n          sort={sort}\n          field={\"weight\"}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setWeight(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={damage}\n          sort={sort}\n          field={\"damage\"}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDamage(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={properties}\n          sort={sort}\n          field={\"properties\"}\n          label=\"Properties\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setProperties(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Types\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default GearSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Gear from \"../../../data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <GearContainer\n          dataLength={gears.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {gears!.map((gear: Gear, index: number) => {\n            return <GearTile key={index} gear={gear}></GearTile>;\n          })}\n        </GearContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../data/Item\";\nimport Gear from \"../../../../data/Gear\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${item.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../data/Item\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Item from \"../../../../data/Item\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  item: Item;\n  isNew: boolean;\n}\n\nconst ItemDetail = ({ item, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj, item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${item.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"items\", item.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateItem(\"items\", itemObj)} icon={faSave} />\n            <IconButton onClick={() => deleteItem()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined && (\n        <ItemDetail item={item} isNew={item.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined && (\n        <ItemDetail item={item} isNew={item.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import IEntity from \"./IEntity\";\n\nexport default class Item implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport CheckField from \"../../form_elements/CheckField\";\nimport Item from \"../../../data/Item\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<{ value: string; label: string }[]>([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>([]);\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"items\", filters, \"DnDTome_filtered_items.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Types\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <MultipleSelectField\n          options={rarityList}\n          label=\"Rarities\"\n          onChange={(rarities: string[]) => setRarity(rarities)}\n        />\n        <MultipleSelectField\n          options={baseList}\n          label=\"Bases\"\n          onChange={(bases: string[]) => setBase(bases)}\n        />\n        <CheckField\n          value={!!attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default ItemSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Item from \"../../../data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ItemContainer\n          dataLength={items.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {items!.map((item: Item, index: number) => {\n            return <ItemTile key={index} item={item}></ItemTile>;\n          })}\n        </ItemContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport FileField from \"../../../form_elements/FileField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BookView from \"./BookView\";\nimport BookEditView from \"./BookEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  book: Book;\n  isNew: boolean;\n}\n\nconst BookDetail = ({ book, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [bookObj, editBook] = useState<Book>(book);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteBook = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (bookObj !== book) {\n      setUnsavedChanges(true);\n    }\n  }, [bookObj, book]);\n\n  const updateBook = (tableName: string, bookObj: Book) => {\n    updateWithCallback(tableName, bookObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${book.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"books\", book.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateBook(\"books\", bookObj)} icon={faSave} />\n            <IconButton onClick={() => deleteBook()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <BookEditView book={bookObj} onEdit={(value) => editBook(value)} />\n      ) : (\n        <BookView book={bookObj} />\n      )}\n    </>\n  );\n};\n\nexport default BookDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { id: string };\n\nconst IdToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItem(db.books, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToBook;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { name: string };\n\nconst NameToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItemByAttr(\n    db.books,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToBook;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../../data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{book.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              {book.pages}\n            </RowProp>\n            <RowProp>\n              <FontAwesomeIcon icon={faTags} />\n              {book.tags &&\n                book.tags.map((tag: string, index: number) => (\n                  <Tag key={index}>{tag}</Tag>\n                ))}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../../services/DatabaseService\";\nimport Filter from \"../../../data/Filter\";\nimport Book from \"../../../data/Book\";\n\nimport { faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst LibrarySearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={tags}\n          sort={sort}\n          field={\"tags\"}\n          label=\"Tags\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setTags(name);\n            setSort(sort);\n          }}\n        />\n        <NumberField value={pages} label=\"Pages\" onChange={(pages: number) => setPages(pages)} />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n    </>\n  );\n};\n\nexport default LibrarySearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport Book from \"../../../data/Book\";\nimport Filter from \"../../../data/Filter\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nimport AppWrapper from \"../../AppWrapper\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport BookTile from \"./BookTile\";\nimport LibrarySearchBar from \"./LibrarySearchBar\";\n\nconst Library = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allBooks, setAllBooks] = useState<Book[]>([]);\n  const [books, setBooks] = useState<Book[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"books\", filters, (results: any[]) => {\n      setAllBooks(results);\n      setBooks(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (books.length === allBooks.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setBooks((s) =>\n      s.concat(allBooks.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <LibrarySearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={books.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {books!.map((book: Book, index: number) => {\n            return <BookTile key={index} book={book}></BookTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default Library;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Monster from \"../../../../data/Monster\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  monster: Monster;\n  isNew: boolean;\n}\n\nconst MonsterDetail = ({ monster, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj, monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${monster.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"monsters\", monster.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateMonster(\"monsters\", monsterObj)} icon={faSave} />\n            <IconButton onClick={() => deleteMonster()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faLink,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"monsters\", filters, \"DnDTome_filtered_monsters.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Type\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <MultipleSelectField\n          options={subtypeList}\n          label=\"Subtype\"\n          onChange={(subtypes: string[]) => setSubType(subtypes)}\n        />\n        <StringSearchField\n          value={alignment}\n          sort={sort}\n          field={\"alignment\"}\n          label=\"Alignment\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setAlignment(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={speed}\n          sort={sort}\n          field={\"speed\"}\n          label=\"Speed\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSpeed(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={skills}\n          sort={sort}\n          field={\"skills\"}\n          label=\"Skills\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSkills(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={senses}\n          sort={sort}\n          field={\"senses\"}\n          label=\"Senses\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSenses(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={lang}\n          sort={sort}\n          field={\"lang\"}\n          label=\"Languages\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setLang(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgVulnerabilitie}\n          sort={sort}\n          field={\"dmgVulnerabilitie\"}\n          label=\"Vulnerabilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgVulnerabilitie(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgResistance}\n          sort={sort}\n          field={\"dmgResistance\"}\n          label=\"Resistances\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgResistance(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgImmunities}\n          sort={sort}\n          field={\"dmgImmunities\"}\n          label=\"Immunities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgImmunities(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={conImmunities}\n          sort={sort}\n          field={\"conImmunities\"}\n          label=\"Con. Immun.\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setConImmunities(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={ablt}\n          sort={sort}\n          field={\"ablt\"}\n          label=\"Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={sAblt}\n          sort={sort}\n          field={\"sAblt\"}\n          label=\"Spezial Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={lAblt}\n          sort={sort}\n          field={\"lAblt\"}\n          label=\"Legendary Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setLAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default MonsterSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Monster from \"../../../data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <MonsterContainer\n          dataLength={monsters.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {monsters!.map((monster: Monster, index: number) => {\n            return <MonsterTile key={index} monster={monster}></MonsterTile>;\n          })}\n        </MonsterContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcView = ({ npc }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{npc.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={npc.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${npc.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={npc} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Npc from \"../../../../data/campaign/Npc\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n  onEdit: (value: Npc) => void;\n}\n\nconst NpcEditView = ({ npc, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={npc.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...npc, name: name })}\n        />\n\n        <StringField\n          value={npc.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...npc, pic: pic })}\n        />\n        <StringField\n          value={npc.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...npc, sources: sources })}\n        />\n        <TextField\n          value={npc.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...npc, description: description })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NpcView from \"./NpcView\";\nimport NpcEditView from \"./NpcEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  npc: Npc;\n  isNew: boolean;\n}\n\nconst NpcDetail = ({ npc, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [npcObj, editNpc] = useState<Npc>(npc);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteNpc = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (npcObj !== npc) {\n      setUnsavedChanges(true);\n    }\n  }, [npcObj, npc]);\n\n  const updateNpc = (tableName: string, npcObj: Npc) => {\n    updateWithCallback(tableName, npcObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${npc.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"npcs\", npc.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateNpc(\"npcs\", npcObj)} icon={faSave} />\n            <IconButton onClick={() => deleteNpc()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <NpcEditView npc={npcObj} onEdit={(value) => editNpc(value)} />\n      ) : (\n        <NpcView npc={npcObj} />\n      )}\n    </>\n  );\n};\n\nexport default NpcDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport NpcDetail from \"../NpcDetail\";\n\ntype TParams = { id: string };\n\nconst IdToNpc = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [npc, loading, error] = useItem(db.npcs, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && npc !== undefined && (\n        <NpcDetail npc={npc} isNew={npc.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToNpc;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport NpcDetail from \"../NpcDetail\";\n\ntype TParams = { name: string };\n\nconst NameToNpc = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [npc, loading, error] = useItemByAttr(\n    db.npcs,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && npc !== undefined && (\n        <NpcDetail npc={npc} isNew={npc.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToNpc;\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  char: Char | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    char?: Char | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.char = char;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return arg && nameCheck && picCheck && descriptionCheck && traitsCheck && sourcesCheck;\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Npc from \"../../../data/campaign/Npc\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NpcSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewNpc = () => {\n    let newNpc = new Npc();\n    delete newNpc.id;\n    createNewWithId(\"npcs\", newNpc, (id) => {\n      history.push(`/npc-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"npcs\", filters, \"DnDTome_filtered_npcs.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewNpc()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default NpcSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport NpcTile from \"./NpcTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport NpcSearchBar from \"./NpcSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst NpcOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allNpcs, setAllNpcs] = useState<Npc[]>([]);\n  const [npcs, setNpcs] = useState<Npc[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"npcs\", filters, (results: any[]) => {\n      setAllNpcs(results);\n      setNpcs(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (npcs.length === allNpcs.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setNpcs((s) =>\n      s.concat(allNpcs.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <NpcSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <NpcContainer\n          dataLength={npcs.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {npcs!.map((npc: Npc, index: number) => {\n            return <NpcTile key={index} npc={npc}></NpcTile>;\n          })}\n        </NpcContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default NpcOverview;\n\nconst NpcContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  quest: Quest;\n}\n\nconst QuestView = ({ quest }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (quest !== undefined) {\n      if (quest.pic === \"\" || quest.pic === null) {\n        return \"\";\n      }\n      return quest.pic;\n    }\n    return \"\";\n  }, [quest]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{quest.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{quest.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={quest.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${quest.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={quest} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Quest from \"../../../../data/campaign/Quest\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  quest: Quest;\n  onEdit: (value: Quest) => void;\n}\n\nconst QuestEditView = ({ quest, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={quest.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...quest, name: name })}\n        />\n\n        <StringField\n          value={quest.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...quest, pic: pic })}\n        />\n        <StringField\n          value={quest.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...quest, sources: sources })}\n        />\n        <TextField\n          value={quest.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...quest, description: description })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport QuestView from \"./QuestView\";\nimport QuestEditView from \"./QuestEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  quest: Quest;\n  isNew: boolean;\n}\n\nconst QuestDetail = ({ quest, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [questObj, editQuest] = useState<Quest>(quest);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteQuest = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (questObj !== quest) {\n      setUnsavedChanges(true);\n    }\n  }, [questObj, quest]);\n\n  const updateQuest = (tableName: string, questObj: Quest) => {\n    updateWithCallback(tableName, questObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${quest.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"quests\", quest.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateQuest(\"quests\", questObj)} icon={faSave} />\n            <IconButton onClick={() => deleteQuest()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <QuestEditView quest={questObj} onEdit={(value) => editQuest(value)} />\n      ) : (\n        <QuestView quest={questObj} />\n      )}\n    </>\n  );\n};\n\nexport default QuestDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport QuestDetail from \"../QuestDetail\";\n\ntype TParams = { id: string };\n\nconst IdToQuest = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [quest, loading, error] = useItem(db.quests, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && quest !== undefined && (\n        <QuestDetail quest={quest} isNew={quest.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToQuest;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport QuestDetail from \"../QuestDetail\";\n\ntype TParams = { name: string };\n\nconst NameToQuest = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [quest, loading, error] = useItemByAttr(\n    db.quests,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && quest !== undefined && (\n        <QuestDetail quest={quest} isNew={quest.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToQuest;\n","import IEntity from \"../IEntity\";\n\n//quests:\"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\nexport default class Quest implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  locations: Location[];\n  origin: { name: string; type: string };\n  rewards: { name: string; type: string }[];\n  followQuest: Quest | undefined;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    locations?: Location[],\n    origin?: { name: string; type: string },\n    rewards?: { name: string; type: string }[],\n    followQuest?: Quest,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.locations = locations || [];\n    this.origin = origin || { name: \"\", type: \"\" };\n    this.rewards = rewards || [];\n    this.followQuest = followQuest;\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isQuest(arg: any): arg is Quest {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationsCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const rewardsCheck = arg.rewards !== undefined && Array.isArray(arg.rewards);\n  const originCheck =\n    arg.origin !== undefined && arg.origin.name !== undefined && arg.origin.type !== undefined;\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    locationsCheck &&\n    rewardsCheck &&\n    originCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findQuestFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Quest from \"../../../data/campaign/Quest\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst QuestSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewQuest = () => {\n    let newQuest = new Quest();\n    delete newQuest.id;\n    createNewWithId(\"quests\", newQuest, (id) => {\n      history.push(`/quest-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"quests\", filters, \"DnDTome_filtered_quests.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewQuest()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default QuestSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Quest from \"../../../data/campaign/Quest\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport QuestTile from \"./QuestTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport QuestSearchBar from \"./QuestSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst QuestOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allQuests, setAllQuests] = useState<Quest[]>([]);\n  const [quests, setQuests] = useState<Quest[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"quests\", filters, (results: any[]) => {\n      setAllQuests(results);\n      setQuests(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (quests.length === allQuests.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setQuests((s) =>\n      s.concat(allQuests.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <QuestSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <QuestContainer\n          dataLength={quests.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {quests!.map((quest: Quest, index: number) => {\n            return <QuestTile key={index} quest={quest}></QuestTile>;\n          })}\n        </QuestContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default QuestOverview;\n\nconst QuestContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../services/DatabaseService\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View key={index}>\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/races/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Race from \"../../../../data/races/Race\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  race: Race;\n  isNew: boolean;\n}\n\nconst RaceDetail = ({ race, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj, race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${race.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"races\", race.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateRace(\"races\", raceObj)} icon={faSave} />\n            <IconButton onClick={() => deleteRace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../data/races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Race from \"../../../data/races/Race\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"races\", filters, \"DnDTome_filtered_races.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={abilityScores}\n          sort={sort}\n          field={\"abilityScores\"}\n          label=\"Ability Scores\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => setSources(sources)}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default RaceSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Race from \"../../../data/races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <RaceContainer\n          dataLength={races.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {races!.map((race: Race, index: number) => {\n            return <RaceTile key={index} race={race}></RaceTile>;\n          })}\n        </RaceContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\",\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\",\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items, Description,...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}, Description ${index},...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport RandomTableView from \"./RandomTableView\";\nimport RandomTableEditView from \"./RandomTableEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  isNew: boolean;\n}\n\nconst RandomTableDetail = ({ randomTable, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [randomTableObj, editRandomTable] = useState<RandomTable>(randomTable);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRandomTable = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (randomTableObj !== randomTable) {\n      setUnsavedChanges(true);\n    }\n  }, [randomTableObj, randomTable]);\n\n  const updateRandomTable = (tableName: string, randomTableObj: RandomTable) => {\n    updateWithCallback(tableName, randomTableObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${randomTable.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"randomTables\", randomTable.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRandomTable(\"randomTables\", randomTableObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteRandomTable()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RandomTableEditView\n          randomTable={randomTableObj}\n          onEdit={(value) => editRandomTable(value)}\n        />\n      ) : (\n        <RandomTableView randomTable={randomTableObj} />\n      )}\n    </>\n  );\n};\n\nexport default RandomTableDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport RandomTableDetail from \"../RandomTableDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRandomTable = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [randomTable, loading, error] = useItem(db.randomTables, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && randomTable !== undefined && (\n        <RandomTableDetail randomTable={randomTable} isNew={randomTable.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRandomTable;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport RandomTableDetail from \"../RandomTableDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRandomTable = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [randomTable, loading, error] = useItemByAttr(\n    db.randomTables,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && randomTable !== undefined && (\n        <RandomTableDetail randomTable={randomTable} isNew={randomTable.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRandomTable;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../data/RandomTable\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableTile = ({ randomTable }: $Props) => {\n  return (\n    <Tile to={\"/randomTable-detail/id/\" + randomTable.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <PropWrapper>\n          <Name>\n            <b>{randomTable.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              Rows: {randomTable.rows.length}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RandomTableTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  color: ${({ theme }) => theme.tile.headerColor};\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport Filter from \"../../../data/Filter\";\nimport RandomTable from \"../../../data/RandomTable\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RandomTableSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable();\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"randomTables\", filters, \"DnDTome_filtered_randomTables.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewRandomTable()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default RandomTableSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../data/RandomTable\";\nimport Filter from \"../../../data/Filter\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nimport AppWrapper from \"../../AppWrapper\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport RandomTableTile from \"./RandomTableTile\";\nimport RandomTableSearchBar from \"./RandomTableSearchBar\";\n\nconst RandomTableOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRandomTables, setAllRandomTables] = useState<RandomTable[]>([]);\n  const [randomTables, setRandomTables] = useState<RandomTable[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"randomTables\", filters, (results: any[]) => {\n      setAllRandomTables(results);\n      setRandomTables(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (randomTables.length === allRandomTables.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRandomTables((s) =>\n      s.concat(allRandomTables.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RandomTableSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={randomTables.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {randomTables!.map((randomTable: RandomTable, index: number) => {\n            return <RandomTableTile key={index} randomTable={randomTable}></RandomTableTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RandomTableOverview;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState } from \"react\";\nimport Selection from \"../../../../data/Selection\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionView = ({ selection }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${selection.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={selection} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {selection.selectionOptions.map(\n        (\n          trait: {\n            entityName: string;\n            entityText: string;\n            level: number;\n          },\n          index: number\n        ) => {\n          return (\n            <View key={index}>\n              <PropWrapper>\n                <Prop>\n                  <PropTitle>Name:</PropTitle>\n                  {trait.entityName}\n                </Prop>\n                <Prop>\n                  <PropTitle>Level:</PropTitle>\n                  {trait.level}\n                </Prop>\n                <Text>\n                  <FormatedText text={trait.entityText} />\n                </Text>\n              </PropWrapper>\n            </View>\n          );\n        }\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 5px 2px 5px 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Selection from \"../../../../data/Selection\";\n\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  selection: Selection;\n  onEdit: (value: Selection) => void;\n}\n\nconst SelectionEditView = ({ selection, onEdit }: $Props) => {\n  const onSelectionChange = (\n    oldSelection: { entityName: string; entityText: string; level: number },\n    field: string,\n    value: string | number\n  ) => {\n    let selections = selection.selectionOptions.map(\n      (selection: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      }) => {\n        if (selection === oldSelection) {\n          return {\n            ...selection,\n            [field]: value,\n          };\n        } else {\n          return selection;\n        }\n      }\n    );\n    onEdit({ ...selection, selectionOptions: selections });\n  };\n\n  const addNewSelection = () => {\n    onEdit({\n      ...selection,\n      selectionOptions: [\n        ...selection.selectionOptions,\n        { entityName: \"\", entityText: \"\", level: 0 },\n      ],\n    });\n  };\n\n  const removeSelection = (oldSelection: {\n    entityName: string;\n    entityText: string;\n    level: number;\n  }) => {\n    let selections = selection.selectionOptions;\n    const index: number = selections.indexOf(oldSelection);\n    if (index !== -1) {\n      selections.splice(index, 1);\n      onEdit({ ...selection, selectionOptions: selections });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={selection.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...selection, name: name })}\n        />\n        {selection.selectionOptions.map(\n          (\n            selection: {\n              entityName: string;\n              entityText: string;\n              level: number;\n            },\n            index: number\n          ) => {\n            return (\n              <SelectionWrapper key={index}>\n                <SelectionName\n                  value={selection.entityName}\n                  label=\"Name\"\n                  onChange={(name) =>\n                    onSelectionChange(selection, \"entityName\", name)\n                  }\n                />\n                <SelectionLevel\n                  value={selection.level}\n                  label=\"Level\"\n                  onChange={(level) =>\n                    onSelectionChange(selection, \"level\", level)\n                  }\n                />\n                <IconButton\n                  icon={faTrash}\n                  onClick={() => removeSelection(selection)}\n                />\n                <SelectionText\n                value={selection.entityText}\n                label=\"Text\"\n                onChange={(text) => onSelectionChange(selection, \"entityText\", text)}\n              />\n              </SelectionWrapper>\n            );\n          }\n        )}\n        <SelectionWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewSelection()} />\n        </SelectionWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SelectionWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst SelectionName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst SelectionLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst SelectionText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SelectionView from \"./SelectionView\";\nimport SelectionEditView from \"./SelectionEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Selection from \"../../../../data/Selection\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  selection: Selection;\n  isNew: boolean;\n}\n\nconst SelectionDetail = ({ selection, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [selectionObj, editSelection] = useState<Selection>(selection);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSelection = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (selectionObj !== selection) {\n      setUnsavedChanges(true);\n    }\n  }, [selectionObj, selection]);\n\n  const updateSelection = (tableName: string, selectionObj: Selection) => {\n    updateWithCallback(tableName, selectionObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${selection.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"selections\", selection.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateSelection(\"selections\", selectionObj)} icon={faSave} />\n            <IconButton onClick={() => deleteSelection()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SelectionEditView selection={selectionObj} onEdit={(value) => editSelection(value)} />\n      ) : (\n        <SelectionView selection={selectionObj} />\n      )}\n    </>\n  );\n};\n\nexport default SelectionDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SelectionDetail from \"../SelectionDetail\";\n\n\ntype TParams = { id: string };\n\nconst IdToSelection = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [selection, loading, error] = useItem(db.selections, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && selection !== undefined && (\n        <SelectionDetail selection={selection} isNew={selection.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSelection;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SelectionDetail from \"../SelectionDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSelection = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [selection, loading, error] = useItemByAttr(\n    db.selections,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && selection !== undefined && (\n        <SelectionDetail selection={selection} isNew={selection.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSelection;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Selection from \"../../../data/Selection\";\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionTile = ({ selection }: $Props) => {\n  return (\n    <Tile to={\"/selection-detail/id/\" + selection.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <WideProp>Options: {selection.selectionOptions.length}</WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SelectionTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n","export default interface IEntity {\n    id?: number;\n    name: string;\n}\n\nexport function isIEntity(arg: any): arg is IEntity {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  \n    return (\n      arg &&\n      nameCheck \n    );\n  }","import IEntity, { isIEntity } from \"./IEntity\";\n\nexport default class Selection implements IEntity {\n  id?: number;\n  name: string;\n  selectionOptions: { entityName: string; entityText: string; level: number }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    selectionOptions?: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.selectionOptions = selectionOptions || [];\n  }\n}\n\nexport function isSelection(arg: any): arg is Selection {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n\n  return arg && nameCheck && selectionOptionsCheck;\n}\n\nexport function findSelectionFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  selectionOptionsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n  return {\n    nameCheck: nameCheck,\n    selectionOptionsCheck: selectionOptionsCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Selection from \"../../../data/Selection\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SelectionSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"selections\", filters, \"DnDTome_filtered_selections.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewSelection()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default SelectionSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Selection from \"../../../data/Selection\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SelectionTile from \"./SelectionTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SelectionSearchBar from \"./SelectionSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst SelectionOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSelections, setAllSelections] = useState<Selection[]>([]);\n  const [selections, setSelections] = useState<Selection[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"selections\", filters, (results: any[]) => {\n      setAllSelections(results);\n      setSelections(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (selections.length === allSelections.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSelections((s) =>\n      s.concat(allSelections.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SelectionSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <SelectionContainer\n          dataLength={selections.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {selections!.map((selection: Selection, index: number) => {\n            return <SelectionTile key={index} selection={selection}></SelectionTile>;\n          })}\n        </SelectionContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SelectionOverview;\n\nconst SelectionContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../data/Spell\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${spell.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../data/Spell\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Spell from \"../../../../data/Spell\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  spell: Spell;\n  isNew: boolean;\n}\n\nconst SpellDetail = ({ spell, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj, spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${spell.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"spells\", spell.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateSpell(\"spells\", spellObj)} icon={faSave} />\n            <IconButton onClick={() => deleteSpell()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport CheckField from \"../../form_elements/CheckField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Spell from \"../../../data/Spell\";\nimport { FixedBar, FieldGroup, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<{ value: string; label: string }[]>([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<{ value: string; label: string }[]>([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"spells\", filters, \"DnDTome_filtered_spells.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={schoolList}\n          label=\"School\"\n          onChange={(schools: string[]) => setSchool(schools)}\n        />\n        <FieldGroup>\n          <MultipleSelectField\n            options={levelList}\n            label=\"Level\"\n            onChange={(levels: string[]) =>\n              setLevel(\n                levels.map((level) => {\n                  return +level;\n                })\n              )\n            }\n          />\n          <CheckField\n            value={!!ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n          />\n        </FieldGroup>\n        <StringSearchField\n          value={time}\n          sort={sort}\n          field={\"time\"}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time: string, sort: { name: string; label: string; sort: number }) => {\n            setTime(time);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={range}\n          sort={sort}\n          field={\"range\"}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setRange(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={duration}\n          sort={sort}\n          field={\"duration\"}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDuration(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={components}\n          sort={sort}\n          field={\"components\"}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setComponents(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={classes}\n          sort={sort}\n          field={\"classes\"}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setClasses(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={text}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setText(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} rotation={90} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default SpellSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../data/Filter\";\nimport Spell from \"../../../data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div\n        id=\"scrollable\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <SpellContainer\n          dataLength={spells.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {spells!.map((spell: Spell, index: number) => {\n            return <SpellTile key={index} spell={spell}></SpellTile>;\n          })}\n        </SpellContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclass.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclass} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclass.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: FeatureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclass.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  subclass: Subclass;\n  isNew: boolean;\n}\n\nconst SubclassDetail = ({ subclass, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj, subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subclass.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subclasses\", subclass.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateSubclass(\"subclasses\", subclassObj)} icon={faSave} />\n            <IconButton onClick={() => deleteSubclass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../data/races/Subrace\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  subrace: Subrace;\n  isNew: boolean;\n}\n\nconst SubraceDetail = ({ subrace, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj, subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subrace.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subraces\", subrace.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateSubclass(\"subraces\", subraceObj)} icon={faSave} />\n            <IconButton onClick={() => deleteSubrace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport FormatedText from \"../general_elements/FormatedText\";\nimport TabBar from \"../general_elements/TabBar\";\n\nconst Help = () => {\n  const [activeTab, setTab] = useState<string>(\"Create\");\n\n  return (\n    <AppWrapper>\n      <General>\n        <TabBar\n          children={[\"Create\", \"Import\", \"Export\", \"Text Formating\", \"Modifiers\"]}\n          onChange={(tab: string) => setTab(tab)}\n          activeTab={activeTab}\n        />\n        {activeTab === \"Create\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create Entitys</SelectionTitle>\n              <SectionText>\n                To create a new Spell for example go to Spells and hit \"Add Spell\" in the top\n                middle.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create Sub-Entitys</SelectionTitle>\n              <SectionText>\n                For subclasses/subraces you need to visit a class/race and click the little circled\n                + in the subclass/subrace section of the class/race.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Import\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to import Entitiys via .json files</SelectionTitle>\n              <SectionText>\n                Go to options and select a file in the top left file select dialog titled \"Import\".\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import Entitiys via the send functionallity</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to recive. Add the ID of the sender to the filed and\n                accept sended entities.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import 5eTools files</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to \"Other Import\" and select the file dialog suited for\n                the entity you want to import.\n              </SectionText>\n              <SectionText>Your entity is not listed there?</SectionText>\n              <SectionText>Those will be updated and added gradually.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import from other sources</SelectionTitle>\n              <SectionText>\n                As of now only dndtome and 5eTools .json files are supported.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Export\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to export Entitiys to .json files</SelectionTitle>\n              <SectionText>\n                Go to options and click the \"export\"-Button located in the top right section titled\n                \"Export\". This will export your hole collection to one big file! (Excluding your pdf\n                library)\n              </SectionText>\n              <SectionText>\n                Or go to options and navigate to the entities you want to send for example \"Spells\".\n                There you can export all your spells to one file.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to send Entitiys via the send functionallity</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to the entities you want to send for example \"Spells\".\n                Click the \"Send all Spells\"-Button and copy the ID.\n              </SectionText>\n              <SectionText>\n                Or go to the entities overview and choose a single entity for example a spell called\n                \"Heal\". Click the \"Send Heal\"-Button and copy the ID.\n              </SectionText>\n              <SectionText>You can now send the ID to the reciver.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export 5eTools files</SelectionTitle>\n              <SectionText>Not supported as of now.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export to other sources</SelectionTitle>\n              <SectionText>As of now you can only export to dndtome .json files.</SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Text Formating\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create a hyper-link</SelectionTitle>\n              <SectionText>You can add a hyper-link in every textarea.</SectionText>\n              <SectionText>\n                To do so write: [[spell.Heal Me]] to link to the spell with the name \"Heal Me\".\n              </SectionText>\n              <SectionText>\n                Result: <FormatedText text={\"[[spell.Heal Me]]\"} />\n              </SectionText>\n              <SectionText>This works for all entities.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table</SelectionTitle>\n              <SectionText>You can add a table in every textarea.</SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"Cell1\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||Header1|Header2|Header3|...||||Cell1|Cell2|Cell3|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table with links in it</SelectionTitle>\n              <SectionText>\n                You can add a link to every cell of a table in every textarea.\n              </SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"[[spell.Heal Me]]\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||Header1|Header2|Header|...||||[[spell.Heal Me]]|Cell2|Cell3|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Modifiers\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>What are modifiers?</SelectionTitle>\n              <SectionText>\n                Modifiers enable you to give class-, subclass-, race-, subracefeatures and magic\n                items (for now) spezial modifiers that will directly modify the character using\n                those things.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Equal modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'='value'}}\"} to a feature.</SectionText>\n              <SectionText>\n                For example: {\"{{ac=15}}\"} or {'{{alignment=\"Real Evil\"}'}\n              </SectionText>\n              <SectionText>\n                You can even alter deeper values like: {\"{{saves.chaSaveProf=1}}\"}\n              </SectionText>\n              <SectionText>\n                Complex example: {\"{{ac=10+(([dex]-10)/2)+(([con]-10)/2)}}\"} where{\" \"}\n                {\"(([dex]-10)/2)\"} gives you the bonus for the stat.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Add modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'+'value'}}\"} to a feature.</SectionText>\n              <SectionText>\n                For example: {\"{{ac+3}}\"} or {'{{profs+\"Thiefs tools\"}'}\n              </SectionText>\n              <SectionText>Deep example: {\"{{skills.natureProf+1}}\"}</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Substract modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'-'value'}}\"} to a feature.</SectionText>\n              <SectionText>For example: {\"{{ac-3}}\"}</SectionText>\n              <SectionText>Deep example: {\"{{money.gold-100}}\"}</SectionText>\n              <SectionText>No option for removing something from a text yet!</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Add modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'.add='value'}}\"} to a feature.</SectionText>\n              <SectionText>For example: {'{{spells.add=\"Acid Splash\"}}'}</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Character fields that can be accessed</SelectionTitle>\n              <SectionText>\n                name: text\n                <br /> player: text\n                <br /> pic: text\n                <br /> background: text\n                <br /> ac: number\n                <br /> hp: number\n                <br /> currentHp: number\n                <br /> init: number\n                <br /> speed: text\n                <br /> str: number\n                <br /> dex: number\n                <br /> con: number\n                <br /> int: number\n                <br /> wis: number\n                <br /> cha: number\n                <br /> actions: text\n                <br /> profsLangs: text\n                <br /> senses: text\n                <br /> alignment: text\n                <br /> inspiration: number\n                <br /> castingHit: number\n                <br /> castingDC: number\n                <br /> money: Money\n                <br /> skills: Skills\n                <br /> saves: Saves\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Money fields that can be accessed</SelectionTitle>\n              <SectionText>\n                copper: number\n                <br /> silver: number\n                <br /> electrum: number\n                <br /> gold: number\n                <br /> platinum: number\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Saves fields that can be accessed</SelectionTitle>\n              <SectionText>\n                strSaveProf: number\n                <br /> dexSaveProf: number\n                <br /> conSaveProf: number\n                <br /> intSaveProf: number\n                <br /> wisSaveProf: number\n                <br /> chaSaveProf: number\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Skills fields that can be accessed</SelectionTitle>\n              <SectionText>\n                acrobaticsProf: number\n                <br /> animalHandlingProf: number\n                <br /> arcanaProf: number\n                <br /> athleticsProf: number\n                <br /> deceptionProf: number\n                <br /> historyProf: number\n                <br /> insightProf: number\n                <br /> intimidationProf: number\n                <br /> investigationProf: number\n                <br /> medicineProf: number\n                <br /> natureProf: number\n                <br /> perceptionProf: number\n                <br /> performanceProf: number\n                <br /> persuasionProf: number\n                <br /> religionProf: number\n                <br /> sleightOfHandProf: number\n                <br /> stealthProf: number\n                <br /> survivalProf: number\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Fields you can add something to</SelectionTitle>\n              <SectionText>\n                monsters\n                <br /> spells\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n      </General>\n    </AppWrapper>\n  );\n};\n\nexport default Help;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst HelpSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Book from \"../../data/Book\";\nimport Selection from \"../../data/Selection\";\nimport Class from \"../../data/classes/Class\";\nimport Subclass from \"../../data/classes/Subclass\";\nimport Encounter from \"../../data/encounter/Encounter\";\nimport Gear from \"../../data/Gear\";\nimport Item from \"../../data/Item\";\nimport Monster from \"../../data/Monster\";\nimport Race from \"../../data/races/Race\";\nimport Subrace from \"../../data/races/Subrace\";\nimport Spell from \"../../data/Spell\";\nimport {\n  createNewWithId,\n  reciveAllPromise,\n  reciveCount,\n} from \"../../services/DatabaseService\";\n\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiBookmarklet,\n  GiSwordClash,\n} from \"react-icons/gi\";\nimport {\n  faChartPie,\n  faCog,\n  faDragon,\n  faIdCard,\n  faMeteor,\n  faPlusCircle,\n  faQuestionCircle,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AppWrapper from \"../AppWrapper\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport RandomTable from \"../../data/RandomTable\";\n\nconst Home = () => {\n  let history = useHistory();\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [bookAmount, setBookAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n  const [tableAmount, setTableAmount] = useState<number>(0);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"books\", (result: number) => {\n        setBookAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveCount(\"randomTables\", (result: number) => {\n        setTableAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable();\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <General>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faMeteor} /> Spells\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${spellAmount} spells in your collection. `}\n            {spellAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to spells\"}\n              onClick={() => history.push(`/spell-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSpell()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiCrystalWand /> Magic Items\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${itemAmount} magic items in your collection. `}\n            {itemAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to items\"}\n              onClick={() => history.push(`/item-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewItem()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBackpack /> Gears\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${gearAmount} gears in your collection. `}\n            {gearAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to gears\"}\n              onClick={() => history.push(`/gear-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewGear()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiWomanElfFace /> Races\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${raceAmount} races in your collection. `}\n            {raceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to races\"}\n              onClick={() => history.push(`/race-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subraces</SelectionTitle>\n          <SectionText>\n            {`You have ${subraceAmount} subraces in your collection. `}\n            {subraceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubrace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiPlagueDoctorProfile /> Classes\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${classAmount} classes in your collection. `}\n            {classAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to classes\"}\n              onClick={() => history.push(`/class-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewClass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subclass</SelectionTitle>\n          <SectionText>\n            {`You have ${subclassAmount} subclass in your collection. `}\n            {subclassAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubclass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <BiSelectMultiple /> Selection\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${selectionAmount} selections in your collection. `}\n            {selectionAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to selections\"}\n              onClick={() => history.push(`/selection-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSelection()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faIdCard} /> Characters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${charAmount} characters in your collection. `}\n            {charAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to characters\"}\n              onClick={() => history.push(`/char-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => history.push(`/char-lab`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faDragon} /> Monsters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${monsterAmount} monsters in your collection. `}\n            {monsterAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to monsters\"}\n              onClick={() => history.push(`/monster-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewMonster()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiSwordClash /> Encounters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${encounterAmount} encounters in your collection. `}\n            {encounterAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to encounters\"}\n              onClick={() => history.push(`/encounter-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewEncounter()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faTable} /> Random Tables\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${tableAmount} random tables in your collection. `}\n            {tableAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to Tables\"}\n              onClick={() => history.push(`/randomTable-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRandomTable()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBookmarklet /> Library\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${bookAmount} pdf's in your collection. `}\n            {bookAmount <= 0 && `Try adding one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to library\"}\n              onClick={() => history.push(`/library`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Add\"}\n              onClick={() => createNewBook()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faChartPie} /> Statistics\n          </SelectionTitle>\n          <SectionText>For more Statistics on your collection...</SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to statistics\"}\n              onClick={() => history.push(`/statistics`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faCog} /> Options\n          </SelectionTitle>\n          <SectionText>\n            To import/export or to make other adjustments to your collection...\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to options\"}\n              onClick={() => history.push(`/options`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faQuestionCircle} /> Help\n          </SelectionTitle>\n          <SectionText>\n            Help on where to find what and how to add tables or hyperlinks\n            inside of text fields.\n          </SectionText>\n          <ButtonBar>\n            <TextButton text={\"Help\"} onClick={() => history.push(`/help`)} />\n          </ButtonBar>\n        </HomeSection>\n      </General>\n    </AppWrapper>\n  );\n};\n\nexport default Home;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  align-content: stretch;\n`;\n\nconst HomeSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  max-height: 20px;\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n\nconst ButtonBar = styled(SectionText)`\n  align-self: flex-end;\n  max-height: 50px;\n`;\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Char, { isChar } from \"../data/chars/Char\";\nimport Class, { isClass, findClassFormattError } from \"../data/classes/Class\";\nimport Subclass, { isSubclass, formattSubclassFromattError } from \"../data/classes/Subclass\";\nimport Encounter, { isEncounter } from \"../data/encounter/Encounter\";\nimport Gear, { isGear, findGearFormattError } from \"../data/Gear\";\nimport IEntity from \"../data/IEntity\";\nimport Item, { isItem, findItemFromattError } from \"../data/Item\";\nimport Monster, { isMonster, findMonsterFormattError } from \"../data/Monster\";\nimport Race, { isRace, findRaceFormattError } from \"../data/races/Race\";\nimport Subrace, { isSubrace, findSubraceFormattError } from \"../data/races/Subrace\";\nimport Selection, { isSelection, findSelectionFormattError } from \"../data/Selection\";\nimport Spell, { isSpell, findSpellFormattError } from \"../data/Spell\";\n\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file.name, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  let failCount = 0;\n  let failedObj: string[] = [];\n  let promList: Promise<any>[] = [];\n\n  if (Array.isArray(json)) {\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, fileName));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, fileName));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, fileName));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, fileName));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, fileName));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, fileName));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, fileName));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, fileName));\n      } else if (isEncounter(obj)) {\n        promList.push(saveNew(\"encounters\", obj as Encounter, fileName));\n      } else if (isSelection(obj)) {\n        promList.push(saveNew(\"selections\", obj as Selection, fileName));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, fileName));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  } else {\n    if (isClass(json)) {\n      promList.push(saveNew(\"classes\", json as Class, fileName));\n    } else if (isSubclass(json)) {\n      promList.push(saveNew(\"subclasses\", json as Subclass, fileName));\n    } else if (isRace(json)) {\n      promList.push(saveNew(\"races\", json as Race, fileName));\n    } else if (isSubrace(json)) {\n      promList.push(saveNew(\"subraces\", json as Subrace, fileName));\n    } else if (isMonster(json)) {\n      promList.push(saveNew(\"monsters\", json as Monster, fileName));\n    } else if (isSpell(json)) {\n      promList.push(saveNew(\"spells\", json as Spell, fileName));\n    } else if (isGear(json)) {\n      promList.push(saveNew(\"gears\", json as Gear, fileName));\n    } else if (isItem(json)) {\n      promList.push(saveNew(\"items\", json as Item, fileName));\n    } else if (isEncounter(json)) {\n      promList.push(saveNew(\"encounters\", json as Encounter, fileName));\n    } else if (isSelection(json)) {\n      promList.push(saveNew(\"selections\", json as Selection, fileName));\n    } else if (isChar(json)) {\n      saveNew(\"chars\", json as Char, fileName);\n    } else {\n      failCount++;\n      failedObj.push(\n        scanForFormatErrors(json)\n          .replaceAll(\"true\", \"success!\")\n          .replaceAll(\"false\", \"fail!\")\n      );\n    }\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n  const selectionFormatErrors = findSelectionFormattError(obj);\n  let selectionFailCount: number = 0;\n  for (const value of Object.entries(selectionFormatErrors)) {\n    if (!value[1]) selectionFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= selectionFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= selectionFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= selectionFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= selectionFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= selectionFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= selectionFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= selectionFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= selectionFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  if (\n    selectionFailCount <= itemFailCount &&\n    selectionFailCount <= gearFailCount &&\n    selectionFailCount <= monsterFailCount &&\n    selectionFailCount <= raceFailCount &&\n    selectionFailCount <= subraceFailCount &&\n    selectionFailCount <= classFailCount &&\n    selectionFailCount <= subclassFailCount &&\n    selectionFailCount <= spellFailCount\n  ) {\n    errors.push({ selection: selectionFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  let tableList: Promise<IEntity[]>[] = [];\n  tableList.push(reciveAllPromise(\"spells\"));\n  tableList.push(reciveAllPromise(\"items\"));\n  tableList.push(reciveAllPromise(\"gears\"));\n  tableList.push(reciveAllPromise(\"monsters\"));\n  tableList.push(reciveAllPromise(\"races\"));\n  tableList.push(reciveAllPromise(\"subraces\"));\n  tableList.push(reciveAllPromise(\"classes\"));\n  tableList.push(reciveAllPromise(\"subclasses\"));\n  tableList.push(reciveAllPromise(\"chars\"));\n  tableList.push(reciveAllPromise(\"encounters\"));\n  tableList.push(reciveAllPromise(\"selections\"));\n  const results = await Promise.all(tableList);\n  let all: IEntity[] = [];\n  results.forEach((list: IEntity[]) => {\n    list.forEach((entity: IEntity) => {\n      all.push(entity);\n    });\n  });\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    hoverColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  header: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    headerColor: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"darkgrey\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"#F3F5F8\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    headerColor: \"black\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#fff\",\n    backgroundColor: \"#F55C5C\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"#191D38\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#1A1F3B\",\n  },\n  main: {\n    backgroundColor: \"#191D38\",\n    color: \"\",\n    highlight: \"#F55C5C\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#191D38\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#1F2340\",\n    backgroundColorLink: \"#E45D68\",\n    headerColor: \"#CACBDB\",\n    color: \"lightslategray\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Want to support me?</SelectionTitle>\n        <ExternalLink\n          href=\"https://www.patreon.com/bePatron?u=25310394\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"patreon\"\n        >\n          <FontAwesomeIcon icon={faPatreon} /> Become a patron\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Found some bugs? Or have some feedback?</SelectionTitle>\n        <ExternalLink\n          href=\"https://discord.gg/2KB3tzG\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"discord\"\n        >\n          <FontAwesomeIcon icon={faDiscord} /> Join the discord\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 38px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 36px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"DnDTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst GearsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Gear?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Gear?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"gears\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all gears`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"gears\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GearsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ItemsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Items?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"items\", \"DnDTome_items.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Items?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"items\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all items`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"items\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ItemsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst MonstersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Monsters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Monsters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"monsters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all monsters`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"monsters\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default MonstersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendRaces, setSendRaces] = useState<boolean>(false);\n  const [sendSubraces, setSendSubraces] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"DnDTome_races.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subraces?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subraces?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subraces\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendRaces && (\n          <TextButton\n            text={`Send all races`}\n            icon={faPaperPlane}\n            onClick={() => setSendRaces(true)}\n          />\n        )}\n        {!!sendRaces && <P2PSender data={\"races\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubraces && (\n          <TextButton\n            text={`Send all subraces`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubraces(true)}\n          />\n        )}\n        {!!sendSubraces && <P2PSender data={\"subraces\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ClassesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendClasses, setSendClasses] = useState<boolean>(false);\n  const [sendSubclasses, setSendSubclasses] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Classes?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"classes\", \"DnDTome_classes.json\")\n            }\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subclasses?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Classes?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"classes\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subclasses?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subclasses\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendClasses && (\n          <TextButton\n            text={`Send all classes`}\n            icon={faPaperPlane}\n            onClick={() => setSendClasses(true)}\n          />\n        )}\n        {!!sendClasses && <P2PSender data={\"classes\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubclasses && (\n          <TextButton\n            text={`Send all subclasses`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubclasses(true)}\n          />\n        )}\n        {!!sendSubclasses && <P2PSender data={\"subclasses\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ClassesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CharsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Chars?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"chars\", \"DnDTome_chars.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Chars?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"chars\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all chars`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"chars\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CharsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EncountersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Encounters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Encounters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"encounters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EncountersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SelectionsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Selections?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"selections\", \"DnDTome_selections.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Selections?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"selections\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all selections`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"selections\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SelectionsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class Boni implements IEntity {\n  name: string;\n  value: string;\n  isCurrency: boolean;\n  constructor(name: string, value: string, isCurrency: boolean) {\n    this.name = name;\n    this.value = value;\n    this.isCurrency = isCurrency;\n  }\n}\n\nexport function isBoni(arg: any): arg is Boni {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const valueCheck = arg.value !== undefined && typeof arg.value == \"string\";\n  const isCurrencyCheck = arg.isCurrency !== undefined && typeof arg.isCurrency == \"boolean\";\n  return arg && nameCheck && valueCheck && isCurrencyCheck;\n}\n","import Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport Feature from \"../data/classes/Feature\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\nimport { saveNew } from \"./DatabaseService\";\n\nexport const import5eToolsClassesFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.class.forEach((obj: any) => {\n            const name = obj.name;\n            const sources = obj.source;\n            const hitdice = obj.hd ? \"d\" + obj.hd.faces : \"\";\n\n            let proficiencies = \"\";\n            if (obj.startingProficiencies !== undefined) {\n              if (obj.startingProficiencies.armor !== undefined) {\n                proficiencies = \"Armor: \";\n                obj.startingProficiencies.armor?.forEach((armor: string) => {\n                  proficiencies += armor + \", \";\n                });\n              }\n              if (obj.startingProficiencies.weapons !== undefined) {\n                proficiencies += \"\\nWeapons: \";\n                obj.startingProficiencies.weapons?.forEach((wpn: string) => {\n                  proficiencies += wpn + \", \";\n                });\n              }\n              if (obj.startingProficiencies.skills !== undefined) {\n                proficiencies += \"\\nSkills: \";\n                obj.startingProficiencies.skills[0]?.choose.from.forEach((skill: string) => {\n                  proficiencies += skill + \", \";\n                });\n              }\n              proficiencies = proficiencies\n                .replaceAll(\"},\", \"\\n\")\n                .replaceAll(\"[\", \"\")\n                .replaceAll(\"]\", \"\")\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@\", \"\")\n                .replaceAll(\"{\", \"\")\n                .trim();\n            }\n\n            let equipment = \"\";\n            if (obj.startingEquipment) {\n              obj.startingEquipment.default?.forEach((eqp: string) => {\n                equipment += eqp + \", \";\n              });\n              equipment = equipment\n                .replaceAll(\"},\", \"\\n\")\n                .replaceAll(\"[\", \"\")\n                .replaceAll(\"]\", \"\")\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@\", \"\")\n                .replaceAll(\"{\", \"\")\n                .trim();\n            }\n\n            let featureSets: FeatureSet[] = [];\n            if (obj.classTableGroups !== undefined) {\n              obj.classTableGroups.forEach((col: any) => {\n                if (col.title !== undefined && col.title.includes(\"Slots\")) {\n                  col.rows.forEach((row: number[], rowIndex: number) => {\n                    if (featureSets[rowIndex] === undefined) {\n                      featureSets.push(new FeatureSet(rowIndex + 1, 0, [], [], []));\n                    }\n                    featureSets[rowIndex].spellslots = row;\n                  });\n                } else {\n                  col.colLabels.forEach((label: string, colIndex: number) => {\n                    let clearLabel = label\n                      .replaceAll(\"},\", \"\\n\")\n                      .replaceAll(\"[\", \"\")\n                      .replaceAll(\"]\", \"\")\n                      .replaceAll(\"}\", \"\")\n                      .replaceAll(\"{@\", \"\")\n                      .replaceAll(\"{\", \"\")\n                      .replaceAll(\"filter\", \"\")\n                      .split(\"|\")[0]\n                      .trim();\n                    col.rows.forEach((row: any, rowIndex: number) => {\n                      if (featureSets[rowIndex] === undefined) {\n                        featureSets.push(new FeatureSet(rowIndex + 1, 0, [], [], []));\n                      }\n                      let bonis: Boni[] | undefined = featureSets[rowIndex].bonis;\n                      if (bonis === undefined) bonis = [];\n                      bonis.push(new Boni(clearLabel, row[colIndex], false));\n                      featureSets[rowIndex].bonis = bonis;\n                    });\n                  });\n                }\n              });\n            }\n\n            if (obj.classFeatures !== undefined) {\n              obj.classFeatures.forEach((feature: any) => {\n                let featureRaw: string = \"\";\n                if (typeof feature != \"string\") {\n                  featureRaw = feature.classFeature;\n                } else {\n                  featureRaw = feature;\n                }\n                const featureParts: string[] = featureRaw.split(\"|\");\n\n                let text = \"\";\n                json.classFeature.forEach((objFeature: any) => {\n                  if (objFeature.name === featureParts[0] && objFeature.source === sources) {\n                    text = recurdsiveTextAdder(objFeature.entries, text);\n                  }\n                });\n                text = text\n                  .replaceAll(\"},\", \"\\n\")\n                  .replaceAll(\"[\", \"\")\n                  .replaceAll(\"]\", \"\")\n                  .replaceAll(\"}\", \"\")\n                  .replaceAll(\"{@\", \"\")\n                  .replaceAll(\"{\", \"\")\n                  .trim();\n                if (featureSets[+featureParts[3] - 1] === undefined) {\n                  featureSets.push(\n                    new FeatureSet(\n                      +featureParts[3],\n                      0,\n                      [new Feature(featureParts[0], text, [], undefined)],\n                      [],\n                      []\n                    )\n                  );\n                } else {\n                  featureSets[+featureParts[3] - 1].features.push(\n                    new Feature(featureParts[0], text, [], undefined)\n                  );\n                }\n              });\n            }\n\n            let newClass = new Class(\n              0,\n              name,\n              featureSets,\n              hitdice,\n              proficiencies,\n              equipment,\n              file.name,\n              sources,\n              \"\"\n            );\n            promList.push(saveNew(\"classes\", newClass, file.name));\n\n            if (obj.subclasses !== undefined) {\n              obj.subclasses.forEach((subclass: any) => {\n                let features: FeatureSet[] = [];\n                if (subclass.subclassFeatures !== undefined) {\n                  subclass.subclassFeatures.forEach((feature: any) => {\n                    let featureRaw: string = \"\";\n                    if (typeof feature != \"string\") {\n                      featureRaw = feature.classFeature;\n                    } else {\n                      featureRaw = feature;\n                    }\n                    const featureParts: string[] = featureRaw.split(\"|\");\n\n                    let text = \"\";\n                    json.subclassFeature.forEach((objFeature: any) => {\n                      if (\n                        objFeature.subclassShortName === featureParts[3] &&\n                        objFeature.subclassSource === subclass.source\n                      ) {\n                        text = recurdsiveTextAdder(objFeature.entries, text);\n                      }\n                    });\n                    text = text\n                      .replaceAll(\"},\", \"\\n\")\n                      .replaceAll(\"[\", \"\")\n                      .replaceAll(\"]\", \"\")\n                      .replaceAll(\"}\", \"\")\n                      .replaceAll(\"{@\", \"\")\n                      .replaceAll(\"{\", \"\")\n                      .trim();\n\n                    let filteredFeatures = features.filter(\n                      (featureSet) => featureSet.level === +featureParts[5]\n                    );\n                    if (filteredFeatures.length === 0) {\n                      features.push(new FeatureSet(+featureParts[5], 0, [], [], []));\n                    }\n\n                    features\n                      .filter((featureSet) => featureSet.level === +featureParts[5])\n                      .forEach((feat) => {\n                        feat.features.push(new Feature(featureParts[0], text, [], undefined));\n                      });\n                  });\n                }\n\n                let newSubclass = new Subclass(\n                  0,\n                  subclass.name,\n                  name,\n                  features,\n                  file.name,\n                  subclass.source\n                );\n                promList.push(saveNew(\"subclasses\", newSubclass, file.name));\n              });\n            }\n          });\n          await Promise.all(promList);\n          callback(json.class.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst recurdsiveTextAdder = (entries: any[], text: string): string => {\n  let newText: string = text;\n  if (Array.isArray(entries)) {\n    entries?.forEach((entry: any) => {\n      if (typeof entry == \"string\") {\n        newText += entry + \"\\n\";\n      } else if (entry.entries !== undefined) {\n        newText += entry.name + \"\\n\";\n        newText = recurdsiveTextAdder(entry.entries, newText);\n      } else if (entry.items !== undefined) {\n        entry.items.forEach((item: string) => {\n          newText += \"• \" + item + \"\\n\";\n        });\n      } else {\n        for (const value of Object.entries(entry)) {\n          newText += value[1] + \"\\n\";\n        }\n      }\n    });\n  } else {\n    if (typeof entries == \"string\") {\n      newText += entries + \"\\n\";\n    } else {\n      for (const value of Object.entries(entries)) {\n        newText += value[1] + \"\\n\";\n      }\n    }\n  }\n\n  return newText + \"\\n\";\n};\n\nexport const import5eToolsRacesFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.race.forEach((obj: any) => {\n            if (obj._copy === undefined && obj.source !== \"DMG\") {\n              const name = obj.name;\n              const sources = obj.source;\n\n              let speed = \"\";\n              if (obj.speed !== undefined) {\n                if (typeof obj.speed == \"number\") {\n                  speed += \"walk \" + obj.speed + \"ft.\";\n                } else if (typeof obj.speed == \"number\") {\n                  speed = obj.speed;\n                } else {\n                  for (const [key, value] of Object.entries(obj.speed)) {\n                    if (typeof value === \"number\") {\n                      speed += key + \" \" + value + \"ft, \";\n                    } else if (typeof value === \"boolean\") {\n                    } else {\n                      speed += key + \" \";\n                      for (const value2 of Object.entries(value as Object)) {\n                        if (typeof value2[1] === \"number\") {\n                          speed += value2[1] + \"ft, \";\n                        } else if (typeof value2[1] === \"string\") {\n                          speed += value2[1];\n                        }\n                      }\n                      speed += \", \";\n                    }\n                  }\n                }\n                speed = speed.trim();\n              }\n\n              let abilityScores = \"\";\n              if (obj.ability !== undefined)\n                obj.ability.forEach((scores: any) => {\n                  for (const [key, value] of Object.entries(scores as Object)) {\n                    if (typeof value == \"number\") {\n                      if (value >= 0) abilityScores += key + \" +\" + value + \", \";\n                      abilityScores += key + \" \" + value + \", \";\n                    }\n                  }\n                });\n              abilityScores = abilityScores.trim();\n\n              let age = \"\";\n              let alignment = \"\";\n              let size = \"\";\n              let lang = \"\";\n              let traits: Trait[] = [];\n              if (obj.entries !== undefined) {\n                obj.entries.forEach((entry: any) => {\n                  if (entry.name === \"Age\") {\n                    age += entry.entries[0];\n                  } else if (entry.name === \"Alignment\") {\n                    alignment += entry.entries[0];\n                  } else if (entry.name === \"Size\") {\n                    size += entry.entries[0];\n                  } else if (entry.name === \"Languages\") {\n                    lang += entry.entries[0];\n                  } else if (Array.isArray(entry.entries)) {\n                    if (typeof entry.entries[0] == \"string\") {\n                      let convertText = entry.entries[0]\n                        .replaceAll(\"},\", \"\\n\")\n                        .replaceAll(\"[\", \"\")\n                        .replaceAll(\"]\", \"\")\n                        .replaceAll(\"}\", \"\")\n                        .replaceAll(\"{@\", \"\")\n                        .replaceAll(\"{\", \"\");\n                      convertText = convertText.trim();\n                      traits.push(new Trait(entry.name, convertText, 1));\n                    } else {\n                      traits.push(new Trait(entry.name, \"\", 1));\n                    }\n                  }\n                });\n              }\n\n              if (obj.subraces !== undefined) {\n                obj.subraces.forEach((subrace: any) => {\n                  const subname = subrace.name;\n                  const subtype = name;\n\n                  let subabilityScores = \"\";\n                  if (subrace.ability !== undefined)\n                    subrace.ability.forEach((scores: any) => {\n                      for (const [key, value] of Object.entries(scores as Object)) {\n                        if (typeof value == \"number\") {\n                          if (value >= 0) abilityScores += key + \" +\" + value + \", \";\n                          subabilityScores += key + \" \" + value + \", \";\n                        }\n                      }\n                    });\n                  subabilityScores = subabilityScores.trim();\n\n                  let subtraits: Trait[] = [];\n                  if (subrace.entries !== undefined) {\n                    obj.entries.forEach((entry: any) => {\n                      if (Array.isArray(entry.entries)) {\n                        let convertText = entry.entries[0]\n                          .replaceAll(\"},\", \"\\n\")\n                          .replaceAll(\"[\", \"\")\n                          .replaceAll(\"]\", \"\")\n                          .replaceAll(\"}\", \"\")\n                          .replaceAll(\"{@\", \"\")\n                          .replaceAll(\"{\", \"\");\n                        convertText = convertText.trim();\n                        subtraits.push(new Trait(entry.name, convertText, 1));\n                      }\n                    });\n                  }\n\n                  let newSubrace = new Subrace(\n                    subname,\n                    0,\n                    subtype,\n                    file.name,\n                    subabilityScores,\n                    subtraits,\n                    sources\n                  );\n                  promList.push(saveNew(\"subraces\", newSubrace, file.name));\n                });\n              }\n\n              let newRace = new Race(\n                name,\n                0,\n                file.name,\n                \"\",\n                abilityScores,\n                age,\n                alignment,\n                size,\n                speed,\n                lang,\n                traits,\n                sources\n              );\n              promList.push(saveNew(\"races\", newRace, file.name));\n            }\n          });\n          await Promise.all(promList);\n          callback(json.race.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const import5eToolsSpellsFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.spell.forEach((obj: any) => {\n            let classes = \"\";\n            if (obj.classes !== undefined && obj.classes.fromClassList !== undefined) {\n              obj.classes.fromClassList.forEach((classe: { name: string; source: string }) => {\n                classes += classe.name + \", \";\n              });\n            }\n\n            let school = \"\";\n            if (obj.school === \"V\") school = \"Evocation\";\n            if (obj.school === \"D\") school = \"Divination\";\n            if (obj.school === \"N\") school = \"Necromancy\";\n            if (obj.school === \"T\") school = \"Transmutation\";\n            if (obj.school === \"I\") school = \"Illusion\";\n            if (obj.school === \"C\") school = \"Conjuration\";\n            if (obj.school === \"A\") school = \"Abjuration\";\n            if (obj.school === \"E\") school = \"Enchantment\";\n\n            let time = \"\";\n            if (obj.time !== undefined) {\n              time =\n                obj.time[0].number +\n                \" \" +\n                obj.time[0].unit +\n                \" \" +\n                (obj.time[0].condition ? obj.time[0].condition : \"\");\n            }\n\n            let range = \"\";\n            if (obj.range !== undefined) {\n              if (obj.range.type === \"point\") {\n                range =\n                  (obj.range.distance.amount ? obj.range.distance.amount : \"\") +\n                  \" \" +\n                  obj.range.distance.type;\n              } else if (obj.range.type === \"special\") {\n                range = obj.range.type;\n              } else {\n                range =\n                  (obj.range.distance.amount ? obj.range.distance.amount : \"\") +\n                  \" \" +\n                  obj.range.distance.type +\n                  \" \" +\n                  obj.range.type;\n              }\n            }\n            range = range.trim();\n\n            let components = \"\";\n            if (obj.components !== undefined) {\n              components = (obj.components.v ? \"V, \" : \"\") + (obj.components.s ? \"S, \" : \"\");\n              if (obj.components.m !== undefined) {\n                if (obj.components.m.text !== undefined) {\n                  components = \"M (\" + obj.components.m.text + \")\";\n                } else {\n                  components = \"M (\" + obj.components.m + \")\";\n                }\n              }\n            }\n\n            let duration = \"\";\n            if (obj.duration !== undefined) {\n              let concentration = obj.duration[0].concentration;\n              duration =\n                (concentration ? \"Concentration, \" : \"\") +\n                obj.duration[0].type +\n                \" \" +\n                (obj.duration[0].duration !== undefined\n                  ? obj.duration[0].duration.type + \" \" + obj.duration[0].duration.amount\n                  : \"\");\n            }\n\n            let text = \"\";\n            obj.entries.forEach((textPart: string | any) => {\n              if (typeof textPart === \"string\") {\n                text += textPart + \"\\n\";\n              } else {\n                if (textPart.name !== undefined && textPart.entries !== undefined) {\n                  text += \"\\n\" + textPart.name + \". \";\n                  textPart.entries.forEach((entryTextPart: string) => {\n                    text += entryTextPart + \"\\n\";\n                  });\n                } else if (textPart.items !== undefined) {\n                  textPart.items.forEach((listItem: string) => {\n                    text += \"• \" + listItem + \"\\n\";\n                  });\n                } else if (textPart.type !== undefined && textPart.type === \"table\") {\n                  text += \"||table||\\n\";\n                  if (textPart.colLabels !== undefined) {\n                    text += \"||\";\n                    textPart.colLabels.forEach((listItem: string) => {\n                      text += listItem + \"|\";\n                    });\n                    text += \"|\\n\";\n                  }\n                  textPart.rows.forEach((rows: string[]) => {\n                    text += \"||\";\n                    rows.forEach((cel: string) => {\n                      text += cel + \"|\";\n                    });\n                    text += \"|\\n\";\n                  });\n                  text += \"||table||\\n\";\n                } else {\n                  let convertText = JSON.stringify(textPart);\n                  convertText = convertText\n                    .replaceAll(\"},\", \"\\n\")\n                    .replaceAll(\"[\", \"\")\n                    .replaceAll(\"]\", \"\")\n                    .replaceAll(\"}\", \"\")\n                    .replaceAll(\"{@\", \"\")\n                    .replaceAll(\"{\", \"\");\n                  convertText = convertText.trim();\n                  text += convertText;\n                }\n              }\n            });\n            text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n            text = text.trim();\n\n            let newSpell = new Spell(\n              obj.name,\n              classes,\n              obj.source,\n              obj.level,\n              school,\n              time,\n              range,\n              components,\n              duration,\n              obj.meta && obj.meta.ritual ? 1 : 0,\n              text,\n              0,\n              file.name,\n              \"\"\n            );\n            promList.push(saveNew(\"spells\", newSpell, file.name));\n          });\n          await Promise.all(promList);\n          callback(json.spell.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const import5eToolsMonstersFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.monster.forEach((obj: any) => {\n            if (obj._copy === undefined) {\n              let type = \"\";\n              let subtype = \"\";\n              if (typeof obj.type === \"string\") {\n                type = obj.type;\n              } else {\n                type = obj.type.type;\n                if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n              }\n\n              let cr = 0;\n              if (obj.cr !== undefined) {\n                if (typeof obj.cr === \"string\") {\n                  if (obj.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr;\n                  }\n                } else {\n                  if (obj.cr.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr.cr;\n                  }\n                }\n              }\n\n              let alignment = \"\";\n              if (obj.alignment !== undefined) {\n                obj.alignment.forEach((align: string) => {\n                  if (align === \"L\") alignment += \"lawfull \";\n                  if (align === \"N\") alignment += \"neutral \";\n                  if (align === \"C\") alignment += \"chaotic \";\n                  if (align === \"G\") alignment += \"good \";\n                  if (align === \"E\") alignment += \"evil \";\n                });\n              }\n              alignment = alignment.trim();\n\n              let size = \"\";\n              if (obj.size !== undefined) {\n                if (obj.size === \"L\") size += \"large \";\n                else if (obj.size === \"H\") size += \"huge \";\n                else if (obj.size === \"T\") size += \"tiny \";\n                else if (obj.size === \"M\") size += \"medium \";\n                else if (obj.size === \"S\") size += \"small \";\n                else if (obj.size === \"G\") size += \"gargantuan \";\n              }\n              size = size.trim();\n\n              let ac = 0;\n              if (typeof obj.ac[0] === \"number\") {\n                ac = obj.ac[0];\n              } else {\n                ac = obj.ac[0].ac;\n              }\n\n              let speed = \"\";\n              for (const [key, value] of Object.entries(obj.speed)) {\n                if (typeof value === \"number\") {\n                  speed += key + \" \" + value + \"ft, \";\n                } else if (typeof value === \"boolean\") {\n                } else {\n                  speed += key + \" \";\n                  for (const value2 of Object.entries(value as Object)) {\n                    if (typeof value2[1] === \"number\") {\n                      speed += value2[1] + \"ft, \";\n                    } else if (typeof value2[1] === \"string\") {\n                      speed += value2[1];\n                    }\n                  }\n                  speed += \", \";\n                }\n              }\n              speed.trim();\n\n              let saves = \"\";\n              if (obj.save !== undefined)\n                for (const [key, value] of Object.entries(obj.save)) {\n                  saves += key + \" \" + value + \", \";\n                }\n              saves.trim();\n\n              let skills = \"\";\n              if (obj.skill !== undefined)\n                for (const [key, value] of Object.entries(obj.skill)) {\n                  skills += key + \" \" + value + \", \";\n                }\n              skills.trim();\n\n              let senses = \"\";\n              obj.senses &&\n                obj.senses.forEach((sense: string) => {\n                  senses += sense + \", \";\n                });\n              senses.trim();\n\n              let langs = \"\";\n              obj.languages &&\n                obj.languages.forEach((lang: string) => {\n                  langs += lang + \", \";\n                });\n              langs.trim();\n\n              let vulnerabilities = \"\";\n              obj.vulnerable &&\n                obj.vulnerable.forEach((vul: string) => {\n                  vulnerabilities += vul + \", \";\n                });\n              vulnerabilities.trim();\n\n              let resistencies = \"\";\n              obj.resist &&\n                obj.resist.forEach((res: string) => {\n                  resistencies += res + \", \";\n                });\n              resistencies.trim();\n\n              let immunities = \"\";\n              obj.immune &&\n                obj.immune.forEach((imu: string) => {\n                  immunities += imu + \", \";\n                });\n              immunities.trim();\n\n              let conImmunities = \"\";\n              obj.conditionImmune &&\n                obj.conditionImmune.forEach((imu: string) => {\n                  conImmunities += imu + \", \";\n                });\n              conImmunities.trim();\n\n              let traits = \"\";\n              obj.trait &&\n                obj.trait.forEach((tra: { name: string; entries: string[] }) => {\n                  traits += tra.name + \". \\n\";\n                  if (tra.entries !== undefined) {\n                    tra.entries.forEach((entry: string) => {\n                      traits += entry + \" \\n\";\n                    });\n                    traits += \"\\n\";\n                  }\n                });\n              traits = traits\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              traits = traits.trim();\n\n              let actions = \"\";\n              obj.action &&\n                obj.action.forEach((tra: { name: string; entries: string[] }) => {\n                  actions += tra.name + \". \\n\";\n                  if (tra.entries !== undefined) {\n                    tra.entries.forEach((entry: string) => {\n                      actions += entry + \" \\n\";\n                    });\n                    actions += \" \\n\";\n                  }\n                });\n              actions = actions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              actions = actions.trim();\n\n              let lactions = \"\";\n              obj.legendary &&\n                obj.legendary.forEach((tra: { name: string; entries: string[] }) => {\n                  lactions += tra.name + \". \\n\";\n                  if (tra.entries !== undefined) {\n                    tra.entries.forEach((entry: string) => {\n                      lactions += entry + \" \\n\";\n                    });\n                    lactions += \" \\n\";\n                  }\n                });\n              lactions = lactions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              lactions = lactions.trim();\n\n              let newMonster = new Monster(\n                0,\n                obj.name,\n                obj.source,\n                \"\",\n                size,\n                type,\n                subtype,\n                alignment,\n                ac,\n                obj.hp.average,\n                speed,\n                cr,\n                obj.str,\n                obj.dex,\n                obj.con,\n                obj.int,\n                obj.wis,\n                obj.cha,\n                saves,\n                skills,\n                senses,\n                langs,\n                vulnerabilities,\n                resistencies,\n                immunities,\n                conImmunities,\n                traits,\n                actions,\n                lactions\n              );\n              promList.push(saveNew(\"monsters\", newMonster, file.name));\n            }\n          });\n          await Promise.all(promList);\n          callback(json.monster.length);\n        }\n      };\n      fileReader.readAsText(file);\n      console.log(\"Done\");\n    });\n  }\n};\n\nexport const import5eToolsItemsFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n\n          let items: any[] = [];\n          if (json.item !== undefined) items = json.item;\n          if (json.baseitem !== undefined) items = json.baseitem;\n\n          items.forEach((obj: any) => {\n            if (obj.rarity !== undefined) {\n              if (obj.rarity === \"none\" || obj.rarity === \"unknown\") {\n                let newGear: Gear = parseGear(obj, file.name);\n                promList.push(saveNew(\"gears\", newGear, file.name));\n              } else {\n                let newItem: Item = parseItem(obj, file.name);\n                promList.push(saveNew(\"items\", newItem, file.name));\n              }\n            }\n          });\n          await Promise.all(promList);\n          callback(items.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst parseGear = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((textPart: string | any) => {\n      if (typeof textPart === \"string\") {\n        text += textPart + \"\\n\";\n      } else {\n        if (textPart.name !== undefined && textPart.entries !== undefined) {\n          text += \"\\n\" + textPart.name + \". \";\n          textPart.entries.forEach((entryTextPart: string) => {\n            text += entryTextPart + \"\\n\";\n          });\n        } else if (textPart.items !== undefined) {\n          textPart.items.forEach((listItem: string) => {\n            text += \"• \" + listItem + \"\\n\";\n          });\n        } else if (textPart.type !== undefined && textPart.type === \"table\") {\n          text += \"||table||\\n\";\n          if (textPart.colLabels !== undefined) {\n            text += \"||\";\n            textPart.colLabels.forEach((listItem: string) => {\n              text += listItem + \"|\";\n            });\n            text += \"|\\n\";\n          }\n          textPart.rows.forEach((rows: string[]) => {\n            text += \"||\";\n            rows.forEach((cel: string) => {\n              text += cel + \"|\";\n            });\n            text += \"|\\n\";\n          });\n          text += \"||table||\\n\";\n        } else {\n          let convertText = JSON.stringify(textPart);\n          convertText = convertText\n            .replaceAll(\"},\", \"\\n\")\n            .replaceAll(\"[\", \"\")\n            .replaceAll(\"]\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll(\"{@\", \"\")\n            .replaceAll(\"{\", \"\");\n          convertText = convertText.trim();\n          text += convertText;\n        }\n      }\n    });\n    text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n  }\n  const description = text.trim();\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    type = obj.type;\n  }\n\n  let damage = \"\";\n  if (obj.dmg1 !== undefined) {\n    damage += obj.dmg1;\n    if (obj.dmgType !== undefined) {\n      if (obj.dmgType === \"S\") damage += \" slashing damage\";\n      else if (obj.dmgType === \"P\") damage += \" piercing damage\";\n      else if (obj.dmgType === \"B\") damage += \" bludgeoning damage\";\n      else if (obj.dmgType === \"R\") damage += \" radiant damage\";\n    }\n  }\n\n  let properties = \"\";\n  if (obj.range !== undefined) {\n    properties += \"ranged (\" + obj.range + \"), \";\n  }\n  if (obj.property !== undefined) {\n    obj.property.forEach((prop: string) => {\n      if (prop === \"L\") properties += \"light, \";\n      else if (prop === \"AF\") properties += \"radiant damage, \";\n      else if (prop === \"RLD\") properties += \"loading, \";\n      else if (prop === \"2H\") properties += \"two-handed, \";\n      else if (prop === \"F\") properties += \"finesse, \";\n      else if (prop === \"H\") properties += \"heavy, \";\n      else if (prop === \"R\") properties += \"reach, \";\n      else if (prop === \"T\") properties += \"thrown, \";\n      else if (prop === \"V\") properties += \"versatile, \";\n    });\n  }\n  properties = properties.trim();\n\n  let newGear = new Gear(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    obj.value,\n    damage,\n    obj.weight,\n    properties,\n    type,\n    fileName\n  );\n  return newGear;\n};\n\nconst parseItem = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((textPart: string | any) => {\n      if (typeof textPart === \"string\") {\n        text += textPart + \"\\n\";\n      } else {\n        if (textPart.name !== undefined && textPart.entries !== undefined) {\n          text += \"\\n\" + textPart.name + \". \";\n          textPart.entries.forEach((entryTextPart: string) => {\n            text += entryTextPart + \"\\n\";\n          });\n        } else if (textPart.items !== undefined) {\n          textPart.items.forEach((listItem: string) => {\n            text += \"• \" + listItem + \"\\n\";\n          });\n        } else if (textPart.type !== undefined && textPart.type === \"table\") {\n          text += \"||table||\\n\";\n          if (textPart.colLabels !== undefined) {\n            text += \"||\";\n            textPart.colLabels.forEach((listItem: string) => {\n              text += listItem + \"|\";\n            });\n            text += \"|\\n\";\n          }\n          textPart.rows.forEach((rows: string[]) => {\n            text += \"||\";\n            rows.forEach((cel: string) => {\n              text += cel + \"|\";\n            });\n            text += \"|\\n\";\n          });\n          text += \"||table||\\n\";\n        } else {\n          let convertText = JSON.stringify(textPart);\n          convertText = convertText\n            .replaceAll(\"},\", \"\\n\")\n            .replaceAll(\"[\", \"\")\n            .replaceAll(\"]\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll(\"{@\", \"\")\n            .replaceAll(\"{\", \"\");\n          convertText = convertText.trim();\n          text += convertText;\n        }\n      }\n    });\n    text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n  }\n  const description = text.trim();\n\n  let magicBonus = 0;\n  if (obj.bonusSpellAttack !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusSpellAttack.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusWeapon !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusWeapon.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusAc !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusAc.replaceAll(\"+\", \"\"));\n  }\n\n  let attunment = 0;\n  if (obj.reqAttune !== undefined) {\n    attunment = obj.reqAttune ? 1 : 0;\n  }\n\n  let base = \"\";\n  let type = \"\";\n  if (obj.baseItem !== undefined) {\n    let baseParts: string[] = obj.baseItem.split(\"|\");\n    base = baseParts[0];\n    type = baseParts[0];\n  }\n\n  let newItem = new Item(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    obj.rarity,\n    magicBonus,\n    attunment,\n    base,\n    type,\n    fileName\n  );\n  return newItem;\n};\n","import { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  import5eToolsClassesFiles,\n  import5eToolsItemsFiles,\n  import5eToolsMonstersFiles,\n  import5eToolsRacesFiles,\n  import5eToolsSpellsFiles,\n} from \"../../services/5eToolService\";\nimport FileField from \"../form_elements/FileField\";\n\ninterface $Props {\n  isLoading: (loading: boolean) => void;\n  isReload: (loading: boolean) => void;\n  setMessage: (msg: string) => void;\n  setAlert: (loading: boolean) => void;\n}\n\nconst OtherImportOptions = ({ isLoading, isReload, setMessage, setAlert }: $Props) => {\n  const trigger5eToolsSpellImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsSpellsFiles(fileList, (max: number) => {\n      isReload(true);\n      isLoading(false);\n\n      setMessage(max + \" imported successfully!\");\n      setAlert(true);\n\n      setTimeout(() => {\n        setAlert(false);\n      }, 5000);\n    });\n  };\n\n  const trigger5eToolsMonsterImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsMonstersFiles(fileList, (max: number) => {\n      isReload(true);\n      isLoading(false);\n\n      setMessage(max + \" imported successfully!\");\n      setAlert(true);\n\n      setTimeout(() => {\n        setAlert(false);\n      }, 5000);\n    });\n  };\n\n  const trigger5eToolsRacesImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsRacesFiles(fileList, (max: number) => {\n      isReload(true);\n      isLoading(false);\n\n      setMessage(max + \" imported successfully!\");\n      setAlert(true);\n\n      setTimeout(() => {\n        setAlert(false);\n      }, 5000);\n    });\n  };\n\n  const trigger5eToolsClassesImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsClassesFiles(fileList, (max: number) => {\n      isReload(true);\n      isLoading(false);\n\n      setMessage(max + \" imported successfully!\");\n      setAlert(true);\n\n      setTimeout(() => {\n        setAlert(false);\n      }, 5000);\n    });\n  };\n\n  const trigger5eToolsItemsImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsItemsFiles(fileList, (max: number) => {\n      isReload(true);\n      isLoading(false);\n\n      setMessage(max + \" imported successfully!\");\n      setAlert(true);\n\n      setTimeout(() => {\n        setAlert(false);\n      }, 5000);\n    });\n  };\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools Spells</SelectionTitle>\n        <FileField\n          label=\"\"\n          accept={\".json\"}\n          isMulti={true}\n          icon={faFileImport}\n          onChange={(file) => trigger5eToolsSpellImport(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools Monsters</SelectionTitle>\n        <FileField\n          label=\"\"\n          accept={\".json\"}\n          isMulti={true}\n          icon={faFileImport}\n          onChange={(file) => trigger5eToolsMonsterImport(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools Items/Gear</SelectionTitle>\n        <FileField\n          label=\"\"\n          accept={\".json\"}\n          isMulti={true}\n          icon={faFileImport}\n          onChange={(file) => trigger5eToolsItemsImport(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools Races</SelectionTitle>\n        <FileField\n          label=\"\"\n          accept={\".json\"}\n          isMulti={true}\n          icon={faFileImport}\n          onChange={(file) => trigger5eToolsRacesImport(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools Classes</SelectionTitle>\n        <FileField\n          label=\"\"\n          accept={\".json\"}\n          isMulti={true}\n          icon={faFileImport}\n          onChange={(file) => trigger5eToolsClassesImport(file)}\n        />\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default OtherImportOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { importFiles, exportAll } from \"../../services/OptionService\";\nimport { deleteAll, reciveCount, reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\nimport { isChar } from \"../../data/chars/Char\";\nimport { isClass } from \"../../data/classes/Class\";\nimport { isSubclass } from \"../../data/classes/Subclass\";\nimport { isEncounter } from \"../../data/encounter/Encounter\";\nimport { isGear } from \"../../data/Gear\";\nimport { isItem } from \"../../data/Item\";\nimport { isMonster } from \"../../data/Monster\";\nimport { isRace } from \"../../data/races/Race\";\nimport { isSubrace } from \"../../data/races/Subrace\";\nimport { isSpell } from \"../../data/Spell\";\n\nimport { faFileImport, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../Loading\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../general_elements/TabBar\";\nimport FileField from \"../form_elements/FileField\";\nimport IconButton from \"../form_elements/IconButton\";\nimport ClassTile from \"../entities/classes/ClassTile\";\nimport EncounterTile from \"../entities/encounters/EncounterTile\";\nimport CharTile from \"../entities/chars/CharTile\";\nimport GearTile from \"../entities/gear/GearTile\";\nimport ItemTile from \"../entities/item/ItemTile\";\nimport MonsterTile from \"../entities/monster/MonsterTile\";\nimport RaceTile from \"../entities/races/RaceTile\";\nimport SpellTile from \"../entities/spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport GearsOptions from \"./GearsOptions\";\nimport ItemsOptions from \"./ItemsOptions\";\nimport MonstersOptions from \"./MonstersOptions\";\nimport RacesOptions from \"./RacesOptions\";\nimport ClassesOptions from \"./ClassesOptions\";\nimport CharsOptions from \"./CharsOptions\";\nimport EncountersOptions from \"./EncountersOptions\";\nimport SelectionsOptions from \"./SelectionsOptions\";\nimport OtherImportOptions from \"./OtherImportOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(fileList, (failed: number, failedObj: string[], max: number) => {\n      setFailedObjs(failedObj);\n      isReload(true);\n      isLoading(false);\n\n      if (failed > 0) {\n        setMessage(failed + \" of \" + max + \" failed!\");\n      } else {\n        setMessage(max + \" imported successfully!\");\n      }\n      setAlert(true);\n\n      setTimeout(() => {\n        setAlert(false);\n      }, 5000);\n    });\n  };\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isClass(entity)) {\n      return <ClassTile key={index} classe={entity} />;\n    } else if (isSubclass(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isRace(entity)) {\n      return <RaceTile key={index} race={entity} />;\n    } else if (isSubrace(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isMonster(entity)) {\n      return <MonsterTile key={index} monster={entity} />;\n    } else if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else if (isGear(entity)) {\n      return <GearTile key={index} gear={entity} />;\n    } else if (isItem(entity)) {\n      return <ItemTile key={index} item={entity} />;\n    } else if (isEncounter(entity)) {\n      return <EncounterTile key={index} encounter={entity} />;\n    } else if (isChar(entity)) {\n      return <CharTile key={index} char={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton icon={faFileExport} onClick={() => exportAll(\"DnDTome_all.json\")} />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Selections\",\n          \"Chars\",\n          \"Encounters\",\n          \"Other Imports\",\n          \"Recive\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions amount={spellAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Gears\" && (\n        <GearsOptions amount={gearAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Magic Items\" && (\n        <ItemsOptions amount={itemAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Monsters\" && (\n        <MonstersOptions amount={monsterAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions amounts={[raceAmount, subraceAmount]} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Classes\" && (\n        <ClassesOptions\n          amounts={[classAmount, subclassAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Selections\" && (\n        <SelectionsOptions amount={selectionAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Chars\" && (\n        <CharsOptions amount={charAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Encounters\" && (\n        <EncountersOptions amount={encounterAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Other Imports\" && (\n        <OtherImportOptions\n          isLoading={isLoading}\n          isReload={isReload}\n          setMessage={setMessage}\n          setAlert={setAlert}\n        />\n      )}\n      {activeTab === \"Recive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CostRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const costs = await reciveAttributeSelectionPromise(\"gears\", \"cost\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cost of costs) {\n      if (cost !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"cost\",\n          cost.toString()\n        );\n        promList.push({\n          name: cost.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cost Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CostRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius:  10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst DamageRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"damage\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"damage\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Damage Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default DamageRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst GearTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"type\",\n          type as number\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default GearTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst WeightRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const weights = await reciveAttributeSelectionPromise(\"gears\", \"weight\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const weight of weights) {\n      if (weight !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"weight\",\n          weight.toString()\n        );\n        promList.push({\n          name: weight.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Weight Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default WeightRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport { reciveCountPromise } from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AmountOfEntitiesChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeGeneralCountsData();\n  }, []);\n\n  const makeGeneralCountsData = async () => {\n    let promList: { name: string; count: number }[] = [];\n    promList.push({\n      name: \"spells\",\n      count: await reciveCountPromise(\"spells\"),\n    });\n    promList.push({ name: \"gears\", count: await reciveCountPromise(\"gears\") });\n    promList.push({ name: \"items\", count: await reciveCountPromise(\"items\") });\n    promList.push({\n      name: \"monsters\",\n      count: await reciveCountPromise(\"monsters\"),\n    });\n    promList.push({ name: \"races\", count: await reciveCountPromise(\"races\") });\n    promList.push({\n      name: \"subraces\",\n      count: await reciveCountPromise(\"subraces\"),\n    });\n    promList.push({\n      name: \"classes\",\n      count: await reciveCountPromise(\"classes\"),\n    });\n    promList.push({\n      name: \"subclasses\",\n      count: await reciveCountPromise(\"subclasses\"),\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Amount of Entities</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AmountOfEntitiesChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 20em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AttunmentRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const attunments = await reciveAttributeSelectionPromise(\"items\", \"attunment\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const attunment of attunments) {\n      if (attunment !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"attunment\",\n          attunment as number\n        );\n        promList.push({\n          name: attunment.toString() === \"0\" ? \"no attunment\" : \"attunment\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Attunment Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AttunmentRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst BaseRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const bases = await reciveAttributeSelectionPromise(\"items\", \"base\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const base of bases) {\n      if (base !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"base\",\n          base.toString()\n        );\n        promList.push({\n          name: base.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Base Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default BaseRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ItemTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"items\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ItemTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MagicBonusRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const magicBoni = await reciveAttributeSelectionPromise(\n      \"items\",\n      \"magicBonus\"\n    );\n\n    let promList: { name: string; count: number }[] = [];\n    for (const magicBonus of magicBoni) {\n      if (magicBonus !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"magicBonus\",\n          magicBonus as number\n        );\n        promList.push({\n          name: \"+\" + magicBonus.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MagicBonusRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RarityRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\"items\", \"rarity\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"rarity\",\n          rarity.toString()\n        );\n        promList.push({\n          name: rarity.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RarityRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CrRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const crs = await reciveAttributeSelectionPromise(\"monsters\", \"cr\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cr of crs) {\n      if (cr !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"cr\",\n          cr as number\n        );\n        promList.push({\n          name: cr.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cr Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CrRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LegendaryRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\n      \"monsters\",\n      \"lAblt\"\n    );\n\n    let leg = 0;\n    let noleg = 0;\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        leg += count;\n      } else {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        noleg += count;\n      }\n    }\n\n    promList.push({\n      name: \"Legendary\",\n      count: leg,\n    });\n    promList.push({\n      name: \"no Legendary\",\n      count: noleg,\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Legendary Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LegendaryRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MonsterTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"monsters\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MonsterTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ActionsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    let times = await reciveAttributeSelectionPromise(\"spells\", \"time\");\n\n    let newTimes:string[] = [];\n    times.forEach((time) => {\n      if(!time.toString().startsWith(\"1 reaction\")) {\n        newTimes.push(time.toString());\n      }\n    })\n\n    let promList: { name: string; count: number }[] = [];\n    for (const time of newTimes) {\n      if (time !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"time\",\n          time.toString()\n        );\n        promList.push({\n          name: time.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Time Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ActionsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800em;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LevelRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const levels = await reciveAttributeSelectionPromise(\"spells\", \"level\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const level of levels) {\n      if (level !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"level\",\n          level as number\n        );\n        promList.push({\n          name: \"Level \" + level.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Level Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LevelRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RitualRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rituals = await reciveAttributeSelectionPromise(\"spells\", \"ritual\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const ritual of rituals) {\n      if (ritual !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"ritual\",\n          ritual as number\n        );\n        promList.push({\n          name: ritual.toString() === \"0\" ? \"no Ritual\" : \"Ritual\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Ritual Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RitualRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst SchoolsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const schools = await reciveAttributeSelectionPromise(\"spells\", \"school\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const school of schools) {\n      if (school !== \"\")\n        promList.push({\n          name: school.toString(),\n          count: await recivePromiseByAttributeCount(\n            \"spells\",\n            \"school\",\n            school.toString()\n          ),\n        });\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>School Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default SchoolsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../general_elements/TabBar\";\nimport CostRatioChart from \"./gear/CostRatioChart\";\nimport DamageRatioChart from \"./gear/DamageRatioChart\";\nimport GearTypeRatioChart from \"./gear/GearTypeRatioChart\";\nimport WeightRatioChart from \"./gear/WeightRatioChart\";\nimport AmountOfEntitiesChart from \"./general/AmountOfEntitiesChart\";\nimport AttunmentRatioChart from \"./items/AttunmentRatioChart\";\nimport BaseRatioChart from \"./items/BaseRatioChart\";\nimport ItemTypeRatioChart from \"./items/ItemTypeRatioChart\";\nimport MagicBonusRatioChart from \"./items/MagicBonusRatioChart\";\nimport RarityRatioChart from \"./items/RarityRatioChart\";\nimport CrRatioChart from \"./monsters/CrRatioChart\";\nimport LegendaryRatioChart from \"./monsters/LegendaryRatioChart\";\nimport MonsterTypeRatioChart from \"./monsters/MonsterTypeRatioChart\";\nimport ActionsRatioChart from \"./spells/ActionsRatioChart\";\nimport LevelRatioChart from \"./spells/LevelRatioChart\";\nimport RitualRatioChart from \"./spells/RitualRatioChart\";\nimport SchoolsRatioChart from \"./spells/SchoolsRatioChart\";\n\nconst Statistics = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Gears\", \"Magic Items\", \"Monsters\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <OptionTab>\n          <AmountOfEntitiesChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <SchoolsRatioChart />\n          <LevelRatioChart />\n          <RitualRatioChart />\n          <ActionsRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <GearTypeRatioChart />\n          <DamageRatioChart />\n          <CostRatioChart />\n          <WeightRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <RarityRatioChart />\n          <AttunmentRatioChart />\n          <MagicBonusRatioChart />\n          <BaseRatioChart />\n          <ItemTypeRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <LegendaryRatioChart />\n          <MonsterTypeRatioChart />\n          <CrRatioChart />\n        </OptionTab>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default Statistics;\n\nconst OptionTab = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport CampaignOverview from \"./components/entities/campaigns/CampaignOverview\";\nimport IdToCampaign from \"./components/entities/campaigns/details/link_wrapper/IdToCampaign\";\nimport NameToCampaign from \"./components/entities/campaigns/details/link_wrapper/NameToCampaign\";\nimport CharOverview from \"./components/entities/chars/CharOverview\";\nimport IdToChar from \"./components/entities/chars/details/link_wrapper/IdToChar\";\nimport NameToChar from \"./components/entities/chars/details/link_wrapper/NameToChar\";\nimport CharLab from \"./components/entities/chars/lab/CharLab\";\nimport ClassOverview from \"./components/entities/classes/ClassOverview\";\nimport IdToClass from \"./components/entities/classes/details/link_wrapper/IdToClass\";\nimport NameToClass from \"./components/entities/classes/details/link_wrapper/NameToClass\";\nimport IdToEncounter from \"./components/entities/encounters/details/link_wrapper/IdToEncounter\";\nimport NameToEncounter from \"./components/entities/encounters/details/link_wrapper/NameToEncounter\";\nimport EncounterOverview from \"./components/entities/encounters/EncounterOverview\";\nimport IdToGear from \"./components/entities/gear/details/link_wrapper/IdToGear\";\nimport NameToGear from \"./components/entities/gear/details/link_wrapper/NameToGear\";\nimport GearOverview from \"./components/entities/gear/GearOverview\";\nimport IdToItem from \"./components/entities/item/details/link_wrapper/IdToItem\";\nimport NameToItem from \"./components/entities/item/details/link_wrapper/NameToItem\";\nimport ItemOverview from \"./components/entities/item/ItemOverview\";\nimport IdToBook from \"./components/entities/library/details/link_wrapper/IdToBook\";\nimport NameToBook from \"./components/entities/library/details/link_wrapper/NameToBook\";\nimport Library from \"./components/entities/library/Library\";\nimport IdToMonster from \"./components/entities/monster/details/link_wrapper/IdToMonster\";\nimport NameToMonster from \"./components/entities/monster/details/link_wrapper/NameToMonster\";\nimport MonsterOverview from \"./components/entities/monster/MonsterOverview\";\nimport IdToNpc from \"./components/entities/npc/details/link_wrapper/IdToNpc\";\nimport NameToNpc from \"./components/entities/npc/details/link_wrapper/NameToNpc\";\nimport NpcOverview from \"./components/entities/npc/NpcOverview\";\nimport IdToQuest from \"./components/entities/quest/details/link_wrapper/IdToQuest\";\nimport NameToQuest from \"./components/entities/quest/details/link_wrapper/NameToQuest\";\nimport QuestOverview from \"./components/entities/quest/QuestOverview\";\nimport IdToRace from \"./components/entities/races/details/link_wrapper/IdToRace\";\nimport NameToRace from \"./components/entities/races/details/link_wrapper/NameToRace\";\nimport RaceOverview from \"./components/entities/races/RaceOverview\";\nimport IdToRandomTable from \"./components/entities/random_tables/details/link_wrapper/IdToRandomTable\";\nimport NameToRandomTable from \"./components/entities/random_tables/details/link_wrapper/NameToRandomTable\";\nimport RandomTableOverview from \"./components/entities/random_tables/RandomTableOverview\";\nimport IdToSelection from \"./components/entities/selections/details/link-wrapper/IdToSelection\";\nimport NameToSelection from \"./components/entities/selections/details/link-wrapper/NameToSelection\";\nimport SelectionOverview from \"./components/entities/selections/SelectionOverview\";\nimport IdToSpell from \"./components/entities/spells/details/link_wrapper/IdToSpell\";\nimport NameToSpell from \"./components/entities/spells/details/link_wrapper/NameToSpell\";\nimport SpellOverview from \"./components/entities/spells/SpellOverview\";\nimport IdToSubclass from \"./components/entities/subclasses/details/link_wrapper/IdToSubclass\";\nimport NameToSubclass from \"./components/entities/subclasses/details/link_wrapper/NameToSubclass\";\nimport IdToSubrace from \"./components/entities/subraces/details/link_wrapper/IdToSubrace\";\nimport NameToSubrace from \"./components/entities/subraces/details/link_wrapper/NameToSubrace\";\nimport Help from \"./components/help/Help\";\nimport Home from \"./components/home/Home\";\nimport Options from \"./components/options/Options\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport { MyThemeProvider } from \"./components/theme/MyThemeProvider\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route exact path=\"/home\" component={Home}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/encounter-detail/name/:name\" component={NameToEncounter}></Route>\n          <Route path=\"/encounter-detail/id/:id\" component={IdToEncounter}></Route>\n          <Route path=\"/encounter-overview\" component={EncounterOverview}></Route>\n          <Route path=\"/book-detail/name/:name\" component={NameToBook}></Route>\n          <Route path=\"/book-detail/id/:id\" component={IdToBook}></Route>\n          <Route path=\"/selection-detail/name/:name\" component={NameToSelection}></Route>\n          <Route path=\"/selection-detail/id/:id\" component={IdToSelection}></Route>\n          <Route path=\"/selection-overview\" component={SelectionOverview}></Route>\n          <Route path=\"/randomTable-detail/name/:name\" component={NameToRandomTable}></Route>\n          <Route path=\"/randomTable-detail/id/:id\" component={IdToRandomTable}></Route>\n          <Route path=\"/randomTable-overview\" component={RandomTableOverview}></Route>\n          <Route path=\"/campaign-detail/name/:name\" component={NameToCampaign}></Route>\n          <Route path=\"/campaign-detail/id/:id\" component={IdToCampaign}></Route>\n          <Route path=\"/campaign-overview\" component={CampaignOverview}></Route>\n          <Route path=\"/quest-detail/name/:name\" component={NameToQuest}></Route>\n          <Route path=\"/quest-detail/id/:id\" component={IdToQuest}></Route>\n          <Route path=\"/quest-overview\" component={QuestOverview}></Route>\n          <Route path=\"/npc-detail/name/:name\" component={NameToNpc}></Route>\n          <Route path=\"/npc-detail/id/:id\" component={IdToNpc}></Route>\n          <Route path=\"/npc-overview\" component={NpcOverview}></Route>\n          <Route path=\"/statistics\" component={Statistics}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n          <Route path=\"/library\" component={Library}></Route>\n          <Route path=\"/help\" component={Help}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","\nimport BuildChar from \"../data/chars/BuildChar\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Modifier, { ModifierOperator } from \"../data/Modifier\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nconst calcLevel = (char: Char): number => {\n  let level = 0;\n  char.classes.forEach((classe) => {\n    level += classe.level;\n  });\n  return level;\n};\n\nexport const buildCharacter = async (character: Char): Promise<BuildChar> => {\n  console.time(\"t\");\n  let level: number = calcLevel(character);\n  let prof: number = 0;\n  let classes: Class[] = [];\n  let subclasses: Subclass[] = [];\n  let classFeatures: FeatureSet[] = [];\n  let race: Race;\n  let subrace: Subrace;\n  let raceFeatures: Trait[] = [];\n  let gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let spells: Spell[];\n  let monsters: Monster[] = [];\n\n  console.time(\"load\");\n  let classList: Promise<Class>[] = [];\n  let subclassList: Promise<Subclass>[] = [];\n  let itemList: Promise<Item>[] = [];\n  let gearList: Promise<Gear>[] = [];\n  let baseList: Promise<Gear>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n  let spellList: Promise<Spell>[] = [];\n\n  character.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    subclassList.push(recivePromiseByAttribute(\"subclasses\", \"name\", classe.subclasse));\n  });\n  character.items.forEach((item) => {\n    itemList.push(recivePromiseByAttribute(\"items\", \"name\", item.origin));\n    gearList.push(recivePromiseByAttribute(\"gears\", \"name\", item.origin));\n  });\n  character.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  character.spells.forEach((spell: string) => {\n    spellList.push(recivePromiseByAttribute(\"spells\", \"name\", spell));\n  });\n\n  let currentItems = await Promise.all(itemList);\n  currentItems.forEach((item) => {\n    if (item !== undefined) baseList.push(recivePromiseByAttribute(\"gears\", \"name\", item.base));\n  });\n\n  classes = await Promise.all(classList);\n  subclasses = await Promise.all(subclassList);\n  monsters = await Promise.all(monsterList);\n  spells = await Promise.all(spellList);\n  let currentGears = await Promise.all(gearList);\n  let currentBases = await Promise.all(baseList);\n  race = await recivePromiseByAttribute(\"races\", \"name\", character.race.race);\n  subrace = await recivePromiseByAttribute(\"subraces\", \"name\", character.race.subrace);\n\n  classes.forEach((classe: Class) => {\n    let classLevel = 0;\n    character.classes.forEach((charClass) => {\n      if (charClass !== undefined)\n        if (classe.name === charClass.classe) {\n          classLevel = charClass.level;\n        }\n    });\n    classe.featureSets.forEach((featureSet: FeatureSet) => {\n      if (featureSet !== undefined) {\n        if (featureSet.level <= classLevel) {\n          classFeatures.push(featureSet);\n        }\n        if (featureSet.level === level) {\n          prof = featureSet.profBonus;\n        }\n      }\n    });\n    subclasses?.forEach((subclass: Subclass) => {\n      if (subclass !== undefined)\n        if (subclass.type === classe.name) {\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              classFeatures.push(featureSet);\n            }\n          });\n        }\n    });\n  });\n  race.traits.forEach((trait: Trait) => {\n    if (trait !== undefined)\n      if (trait.level <= level) {\n        raceFeatures.push(trait);\n      }\n  });\n  subrace?.traits.forEach((trait: Trait) => {\n    if (trait !== undefined)\n      if (trait.level <= level) {\n        raceFeatures.push(trait);\n      }\n  });\n  character.items.forEach((originItem) => {\n    if (originItem !== undefined) {\n      currentItems.forEach(async (item: Item) => {\n        if (item !== undefined)\n          if (originItem.origin === item.name) {\n            if (item.base !== \"\") {\n              currentBases.forEach((base: Gear) => {\n                if (base !== undefined && base.name === item.base) {\n                  items.push({ ...originItem, item: item, base: base });\n                }\n              });\n            } else {\n              items.push({ ...originItem, item: item, base: undefined });\n            }\n          }\n      });\n      currentGears.forEach((gear: Gear) => {\n        if (gear !== undefined)\n          if (originItem.origin === gear.name) {\n            gears.push({ ...originItem, gear: gear });\n          }\n      });\n    }\n  });\n  console.timeEnd(\"load\");\n\n  console.time(\"modifier\");\n  let modifiers: Modifier[] = [];\n  items.forEach((item) => {\n    modifiers = modifiers.concat(\n      extractModifier(item.item.description, \"Magic Item: \" + item.origin)\n    );\n  });\n  raceFeatures.forEach((trait) => {\n    modifiers = modifiers.concat(extractModifier(trait.text, \"Race Feature: \" + trait.name));\n  });\n  classFeatures.forEach((featureSet) => {\n    featureSet.features.forEach((feature) => {\n      modifiers = modifiers.concat(extractModifier(feature.text, \"Class Feature: \" + feature.name));\n    });\n  });\n  console.timeEnd(\"modifier\");\n\n  console.timeEnd(\"t\");\n  return new BuildChar(\n    character,\n    level,\n    prof,\n    classes,\n    subclasses,\n    classFeatures,\n    race,\n    subrace,\n    raceFeatures,\n    gears,\n    items,\n    spells,\n    monsters,\n    modifiers\n  );\n};\n\nconst cut = (str: string, cutStart: number, cutEnd: number) => {\n  return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n};\n\nconst extractTarget = (target: string): string | string[] => {\n  if (target.includes(\".\")) {\n    return target.split(\".\");\n  }\n  return target;\n};\n\nconst extractModifier = (text: string, origin: string): Modifier[] => {\n  let newModifiers: Modifier[] = [];\n\n  while (text.includes(\"{{\")) {\n    const cutStart = text.indexOf(\"{{\");\n    const cutEnd = text.indexOf(\"}}\");\n    const rawModifier = text.substring(cutStart + 2, cutEnd);\n    text = cut(text, cutStart, cutEnd + 1);\n\n    if (rawModifier.includes(\"=\")) {\n      const split = rawModifier.split(\"=\");\n\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.EQUAL,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"+\")) {\n      const split = rawModifier.split(\"+\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.ADD,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"-\")) {\n      const split = rawModifier.split(\"-\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.SUBSTRACT,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    }\n  }\n  return newModifiers;\n};\n\nexport const applyMods = async (char: BuildChar, modifiers: boolean): Promise<BuildChar> => {\n  if (modifiers) {\n    let newChar = char;\n    let modPromises: Promise<boolean>[] = [];\n    char.modifiers.forEach((mod: Modifier) => {\n      if (typeof mod.target == \"string\") {\n        const target: string = mod.target;\n        if (mod.operator === ModifierOperator.EQUAL) {\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [target]: replacePlaceholder(char, mod.value),\n                },\n              };\n              resolve(true);\n            })\n          );\n        } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [target]: char.character[target] + mod.value,\n                },\n              };\n              resolve(true);\n            })\n          );\n        } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n          const value: number = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [target]: (char.character[target] as number) + value,\n                },\n              };\n              resolve(true);\n            })\n          );\n        } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n          const value: number = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [target]: (char.character[target] as number) - value,\n                },\n              };\n              resolve(true);\n            })\n          );\n        }\n      } else if (Array.isArray(mod.target)) {\n        if (mod.target[1] === \"add\" && typeof mod.value == \"string\") {\n          const value: string = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              recivePromiseByAttribute(mod.target[0], \"name\", value.replaceAll('\"', \"\")).then(\n                (entity) => {\n                  newChar = { ...newChar, [mod.target[0]]: [...newChar[mod.target[0]], entity] };\n                  resolve(true);\n                }\n              );\n            })\n          );\n        } else if (mod.operator === ModifierOperator.EQUAL) {\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [mod.target[0]]: {\n                    ...newChar.character[mod.target[0]],\n                    [mod.target[1]]: replacePlaceholder(char, mod.value),\n                  },\n                },\n              };\n              resolve(true);\n            })\n          );\n        } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [mod.target[0]]: {\n                    ...newChar.character[mod.target[0]],\n                    [mod.target[1]]: char.character[mod.target[0]][mod.target[1]] + mod.value,\n                  },\n                },\n              };\n              resolve(true);\n            })\n          );\n        } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n          const value: number = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [mod.target[0]]: {\n                    ...newChar.character[mod.target[0]],\n                    [mod.target[1]]:\n                      (char.character[mod.target[0]][mod.target[1]] as number) + value,\n                  },\n                },\n              };\n              resolve(true);\n            })\n          );\n        } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n          const value: number = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              newChar = {\n                ...newChar,\n                character: {\n                  ...newChar.character,\n                  [mod.target[0]]: {\n                    ...newChar.character[mod.target[0]],\n                    [mod.target[1]]:\n                      (char.character[mod.target[0]][mod.target[1]] as number) - value,\n                  },\n                },\n              };\n              resolve(true);\n            })\n          );\n        }\n      }\n    });\n    await Promise.all(modPromises);\n    console.log(newChar);\n    return newChar;\n  } else {\n    return { ...char, character: char.oldCharacter };\n  }\n};\n\nexport const replacePlaceholder = (char: BuildChar, text: string | number) => {\n  if (typeof text == \"string\" && text.includes(\"[\") && text.includes(\"]\")) {\n    text = text.replaceAll('\"', \"\");\n    while (text.includes(\"[\") && text.includes(\"]\")) {\n      const cutStart = text.indexOf(\"[\");\n      const cutEnd = text.indexOf(\"]\");\n      const rawPlaceholder = text.substring(cutStart + 1, cutEnd);\n      text = text.replace(text.substring(cutStart, cutEnd + 1), char.oldCharacter[rawPlaceholder]);\n    }\n    return Math.floor(eval(text));\n  }\n  return text;\n};\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n"],"sourceRoot":""}