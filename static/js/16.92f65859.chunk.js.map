{"version":3,"sources":["services/PeerIdService.tsx","../node_modules/peerjs/dist sync","components/general_elements/board/Board.tsx","components/p2p/P2PEncounter.tsx","components/entities/encounters/details/EncounterRoom.tsx","components/form_elements/NumberField.tsx"],"names":["generateBrokerId","min","max","password","characters","i","length","Math","floor","random","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Board","img","players","showName","dimension","currentPlayerNumber","onChangePlayers","onChangeDimension","useState","board","setBoard","dragItem","setDragItem","makeDrag","useCallback","player","makeDrop","makeRow","row","list","j","width","push","PlayerSlot","key","cord","size","zoom","updatePlayers","makeBoard","height","BoardRow","useEffect","console","log","BoardWrapper","BoardBar","value","label","step","onChange","BoardContainer","BoardLayer","MapLayer","src","drag","name","dragOver","preventDefault","defineSize","isMonster","entity","Slot","onDrop","changedPlayer","newPlayers","map","drop","onDragOver","playerIcon","index","undefined","Image","pic","isDead","currentHp","isCurrent","Empty","styled","div","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","padding","fontSize","theme","main","highlight","P2PEncounter","encounter","isHost","onEdit","peerId","setId","peer","setPeer","error","setError","connections","setConn","isChanged","setChanged","brokerId","newPeer","Peer","host","secure","on","conn","con","errorData","data","filter","connect","forEach","send","minWidth","float","Icon","icon","faExclamationCircle","FontAwesomeIcon","EncounterRoom","history","useHistory","newEnemies","enemies","getMap","mapBase64","CenterWrapper","View","mode","Name","PropWrapper","PropElm","PropTitle","roundCounter","Table","buildPlayer","Row","current","currentInit","isPlaying","PropField","init","Prop","PlayerImage","MainLink","onClick","table","tile","color","props","backgroundColor","tr","td","span","backgroundColorLink","NumberField","transform","Field","LabelText","Input","type","target","input"],"mappings":"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","file":"static/js/16.92f65859.chunk.js","sourcesContent":["const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 336;","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BuildPlayer from \"../../../data/encounter/BuildPlayer\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: BuildPlayer[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: BuildPlayer[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  showName,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<BuildPlayer>();\n\n  const makeDrag = useCallback((player: BuildPlayer) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): BuildPlayer | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            showName={showName}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, showName, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: BuildPlayer[];\n  makeDrop: () => BuildPlayer | undefined;\n  makeDrag: (player: BuildPlayer) => void;\n  updatePlayers: (players: BuildPlayer[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: BuildPlayer[] = players.map((player: BuildPlayer) => {\n      if (player === changedPlayer) {\n        return { ...player, player: { ...player.player, cord: cord } };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: BuildPlayer) => {\n    console.log(\"drag\", player.player.name, player.player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: BuildPlayer): number => {\n      if (player.player.isMonster) {\n        const monster = player.entity as Monster;\n        switch (monster.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: BuildPlayer, index: number) => {\n        if (\n          (playerIcon.player.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.player.cord !== undefined &&\n            playerIcon.player.cord[0] === cord[0] &&\n            playerIcon.player.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.entity.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.player.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: BuildPlayer;\n  drag: (e: any, player: BuildPlayer) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, showName, player, isDead, isCurrent }: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n    };\n\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {showName ? player.entity.name : \"???\"}\n      </ImageElm>\n    );\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n`;\n\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BuildEncounter from \"../../data/encounter/BuildEncounter\";\n\ninterface $Props {\n  encounter?: BuildEncounter;\n  isHost: boolean;\n  onEdit: (value: BuildEncounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        console.log(conn);\n        setConn((con) => [...con, conn]);\n\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(data);\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(data);\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(encounter);\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(encounter);\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport BuildEncounter from \"../../../../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../../../../data/encounter/BuildPlayer\";\nimport Player from \"../../../../data/encounter/Player\";\nimport Board from \"../../../general_elements/board/Board\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\n\nconst EncounterRoom = () => {\n  let history = useHistory();\n  const [encounter, onEdit] = useState<BuildEncounter>();\n\n  const onChangePlayers = useCallback(\n    (players: BuildPlayer[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter?.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: BuildPlayer) => {\n            if (!player.player.isMonster) {\n              newPlayers.push(player.player);\n            }\n          });\n          let newEnemies: Player[] = [];\n          players.forEach((player: BuildPlayer) => {\n            if (player.player.isMonster) {\n              newEnemies.push(player.player);\n            }\n          });\n\n          onEdit({\n            ...encounter,\n            encounter: { ...encounter.encounter, players: newPlayers, enemies: newEnemies },\n          });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.encounter.mapBase64 !== \"\" &&\n        encounter.encounter.mapBase64 !== null &&\n        encounter.encounter.mapBase64 !== undefined\n      ) {\n        return encounter.encounter.mapBase64;\n      } else if (\n        encounter.encounter.map !== \"\" &&\n        encounter.encounter.map !== null &&\n        encounter.encounter.map !== undefined\n      ) {\n        return encounter.encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  return (\n    <>\n      <P2PEncounter encounter={encounter} onEdit={onEdit} isHost={false} />\n      <CenterWrapper>\n        <View mode={0}>\n          <Name>\n            <b>{encounter?.encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.encounter?.roundCounter}\n            </PropElm>\n          </PropWrapper>\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {encounter &&\n                encounter.players.map((buildPlayer: BuildPlayer, index: number) => {\n                  return (\n                    <Row\n                      current={\n                        encounter.encounter.currentInit === index && encounter.encounter.isPlaying\n                      }\n                      isDead={buildPlayer.player.currentHp <= 0}\n                      key={index}\n                    >\n                      <PropField>{buildPlayer.player.init}</PropField>\n                      <Prop>\n                        {buildPlayer.entity.pic !== \"\" && buildPlayer.entity.pic !== undefined ? (\n                          <PlayerImage player={buildPlayer}></PlayerImage>\n                        ) : (\n                          <></>\n                        )}\n                        {buildPlayer.player.isMonster && (\n                          <MainLink\n                            onClick={() =>\n                              history.push(`/monster-detail/name/${buildPlayer.player.name}`)\n                            }\n                          >\n                            {\"???\"}\n                          </MainLink>\n                        )}\n                        {!buildPlayer.player.isMonster && (\n                          <MainLink\n                            onClick={() =>\n                              history.push(`/char-detail/name/${buildPlayer.player.name}`)\n                            }\n                          >\n                            {buildPlayer.player.name}\n                          </MainLink>\n                        )}\n                      </Prop>\n                    </Row>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </View>\n        {encounter && getMap() !== \"\" && (\n          <Board\n            onChangePlayers={onChangePlayers}\n            players={encounter.players}\n            showName={false}\n            dimension={\n              encounter.encounter.dimension !== undefined\n                ? encounter.encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            currentPlayerNumber={encounter.encounter.currentInit}\n            onChangeDimension={() => {}}\n            img={getMap()}\n          ></Board>\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterRoom;\n\ninterface $PlayerImageProps {\n  player: BuildPlayer;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.entity.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 400px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}