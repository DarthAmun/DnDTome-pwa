{"version":3,"sources":["data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","data/chars/ClassSet.tsx","data/Monster.tsx","components/form_elements/FileField.tsx","components/general_elements/Dialog.tsx","components/form_elements/AutoStringField.tsx","data/campaign/Npc.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/encounter/Encounter.tsx","hooks/DexieHooks.tsx","data/encounter/Player.tsx","data/encounter/BuildEncounter.tsx","data/encounter/BuildPlayer.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/form_elements/NumberField.tsx","components/form_elements/ImageField.tsx"],"names":["Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","this","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","picBase64","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","arg","nameCheck","undefined","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","isClassSet","ClassSet","classe","level","subclasse","classeCheck","levelCheck","subclasseCheck","Monster","sources","size","type","subtype","cr","savingThrows","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","FileField","label","accept","isMulti","icon","transform","onChange","Field","LabelText","Icon","Input","e","target","files","multiple","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","onClick","DamageDialog","damageText","damageClick","healText","healClick","useState","dmg","setDmg","value","style","float","AutoStringField","optionTable","filters","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","Promise","all","o","concat","useEffect","reciveAllFiltered","data","length","onSearch","searchTerm","newOptions","filter","option","includes","slice","Options","map","opt","index","Option","key","Npc","char","monster","traits","description","isNpc","traitsCheck","descriptionCheck","BackButton","action","Back","buttons","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Encounter","enemies","players","isPlaying","currentInit","roundCounter","mapBase64","dimension","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","mapBase64Check","currentInitCheck","roundCounterCheck","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Player","tempHp","initBonus","tag","cord","BuildEncounter","encounter","characters","difficulty","calcExp","easy","medium","hard","deadly","BuildPlayer","entity","buildEncounter","console","time","characterList","enemyList","buildPlayer","enemy","timeEnd","sort","b","aDex","bDex","localeCompare","calcDifficulty","recivePromiseByAttribute","newPlayer","crExpTable","exp","expTable","enemyExp","crExp","EncounterEditView","onEdit","setDifficulty","expArray","setExpArray","onChangeEnemyField","field","newEnemy","oldEnemy","i","onChangeEnemy","found","results","classSet","onChangePlayerField","oldPlayer","onChangePlayer","CenterWrapper","View","StringField","newMap","FieldGroup","onFinished","base64","IconButton","faTrash","PropWrapper","Prop","PropTitle","CharView","Container","newMonster","NumberField","newEnemyList","splice","removeEnemy","TextButton","faPlus","addNewEnemy","newPlayerList","removePlayer","addNewPlayer","span","backgroundColorLink","TinyNumberField","max","showMax","Max","Board","img","currentPlayerNumber","onChangePlayers","onChangeDimension","board","setBoard","dragItem","setDragItem","makeDrag","makeDrop","makeRow","row","list","j","updatePlayers","makeBoard","BoardRow","log","BoardWrapper","BoardBar","step","BoardContainer","BoardLayer","MapLayer","src","PlayerSlot","drag","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isDead","isCurrent","Empty","Image","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","EncounterView","dmView","history","useHistory","damageDialog","setDamageDialog","damageDialogIndex","setDamageDialogIndex","loadedEncounter","setLoadedEncounter","loading","isLoading","newField","finishEncounter","newEnemies","getMap","Name","PropElm","faPlayCircle","roll","rollDie","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","Row","current","PropField","MainLink","PropRight","DamageButton","faSkullCrossbones","faHandHoldingHeart","button","disabled","PlayerImage","tr","td","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","result","setTimeout","editAndSaveEncounter","TopBar","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","ImageImportField","Files","faFileImport","file","fileList","from","reader","FileReader","onload","event","readAsDataURL","changeFile"],"mappings":"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","file":"static/js/5.0258d93d.chunk.js","sourcesContent":["export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  picBase64: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    picBase64?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = options\n          .filter((option) => {\n            return option.name.includes(searchTerm);\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\nimport Monster from \"../Monster\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  picBase64: string;\n  char: Char | undefined;\n  monster: Monster | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    picBase64?: string,\n    char?: Char | undefined,\n    monster?: Monster | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.char = char || undefined;\n    this.monster = monster || undefined;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    descriptionCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  mapBase64: string;\n  dimension: { width: number; height: number; size: number; zoom: number };\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    mapBase64?: string,\n    dimension?: { width: number; height: number; size: number; zoom: number }\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.mapBase64 = mapBase64 || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const mapBase64Check = arg.mapBase64 !== undefined && typeof arg.mapBase64 == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    mapBase64Check &&\n    currentInitCheck &&\n    roundCounterCheck\n  );\n}\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  isNpc: boolean;\n  level: number;\n  cord: number[];\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    isNpc?: boolean,\n    level?: number,\n    cord?: number[]\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.isNpc = isNpc || false;\n    this.level = level || 0;\n    this.cord = cord || [0, 0];\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import BuildPlayer from \"./BuildPlayer\";\nimport Encounter from \"./Encounter\";\n\nexport default class BuildEncounter {\n  encounter: Encounter;\n  characters: BuildPlayer[];\n  enemies: BuildPlayer[];\n  players: BuildPlayer[];\n  difficulty: {\n    difficulty: string;\n    calcExp: {\n      easy: number;\n      medium: number;\n      hard: number;\n      deadly: number;\n    };\n  };\n\n  constructor(\n    encounter?: Encounter,\n    characters?: BuildPlayer[],\n    enemies?: BuildPlayer[],\n    players?: BuildPlayer[],\n    difficulty?: {\n      difficulty: string;\n      calcExp: {\n        easy: number;\n        medium: number;\n        hard: number;\n        deadly: number;\n      };\n    }\n  ) {\n    this.encounter = encounter || new Encounter();\n    this.characters = characters || [];\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.difficulty = difficulty || {\n      difficulty: \"\",\n      calcExp: {\n        easy: 0,\n        medium: 0,\n        hard: 0,\n        deadly: 0,\n      },\n    };\n  }\n}\n","import Npc from \"../campaign/Npc\";\nimport Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Player from \"./Player\";\n\nexport default class BuildPlayer {\n  player: Player;\n  entity: Char | Monster | Npc;\n\n  constructor(player?: Player, entity?: Char | Monster | Npc) {\n    this.player = player || new Player();\n    this.entity = entity || new Monster();\n  }\n}\n","import { isNpc } from \"../data/campaign/Npc\";\nimport { isChar } from \"../data/chars/Char\";\nimport BuildEncounter from \"../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../data/encounter/BuildPlayer\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\nimport { isMonster } from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildEncounter = async (encounter: Encounter): Promise<BuildEncounter> => {\n  console.time(\"t\");\n  let characters: BuildPlayer[];\n  let enemies: BuildPlayer[];\n\n  console.time(\"load\");\n  let characterList: Promise<BuildPlayer>[] = [];\n  let enemyList: Promise<BuildPlayer>[] = [];\n\n  encounter.players.forEach((player: Player) => {\n    characterList.push(buildPlayer(player));\n  });\n  encounter.enemies.forEach((enemy: Player) => {\n    enemyList.push(buildPlayer(enemy));\n  });\n  characters = await Promise.all(characterList);\n  enemies = await Promise.all(enemyList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  enemies = enemies.filter((enemy) => enemy !== undefined);\n  let players = [...characters, ...enemies];\n  if (encounter.isPlaying) {\n    players = players.sort((a: BuildPlayer, b: BuildPlayer) => {\n      if (a.player.init === b.player.init) {\n        let aDex: number = 0;\n        let bDex: number = 0;\n        if (isNpc(a.entity) && a.entity.char !== undefined) aDex = a.entity.char.dex;\n        else if (isNpc(a.entity) && a.entity.monster !== undefined) aDex = a.entity.monster.dex;\n        else if (isMonster(a.entity) || isChar(a.entity)) aDex = a.entity.dex;\n        if (isNpc(b.entity) && b.entity.char !== undefined) bDex = b.entity.char.dex;\n        else if (isNpc(b.entity) && b.entity.monster !== undefined) bDex = b.entity.monster.dex;\n        else if (isMonster(b.entity) || isChar(b.entity)) bDex = b.entity.dex;\n\n        if (bDex === aDex) return a.player.name.localeCompare(b.player.name);\n        return bDex - aDex;\n      }\n      return b.player.init - a.player.init;\n    });\n  }\n\n  const difficulty = calcDifficulty(encounter);\n\n  console.timeEnd(\"t\");\n  return new BuildEncounter(encounter, characters, enemies, players, difficulty);\n};\n\nexport const buildPlayer = async (player: Player): Promise<BuildPlayer> => {\n  let newPlayer: any;\n\n  if (player.isNpc) newPlayer = await recivePromiseByAttribute(\"npcs\", \"name\", player.name);\n  else if (player.isMonster)\n    newPlayer = await recivePromiseByAttribute(\"monsters\", \"name\", player.name);\n  else newPlayer = await recivePromiseByAttribute(\"chars\", \"name\", player.name);\n\n  return new BuildPlayer(player, newPlayer);\n};\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isNpc } from \"../../../../data/campaign/Npc\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { recivePromiseByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport ImageImportField from \"../../../form_elements/ImageField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = [...encounter.enemies];\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = async (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = [...encounter.enemies];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newEnemy));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: results[0].cr,\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: level,\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isMonster: true,\n          isNpc: true,\n          level: results[0].monster.cr,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isMonster: false,\n          isNpc: true,\n          level: level,\n        };\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy, isNpc: true };\n      }\n      onEdit({ ...encounter, enemies: enemies });\n    } else {\n      enemies[i] = { ...oldEnemy, name: newEnemy };\n      onEdit({ ...encounter, enemies: enemies });\n    }\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = [...encounter.players];\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = async (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = [...encounter.players];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newPlayer));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: results[0].cr,\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: level,\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isMonster: true,\n          isNpc: true,\n          level: results[0].monster.cr,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isMonster: false,\n          isNpc: true,\n          level: level,\n        };\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer, isNpc: true };\n      }\n      onEdit({ ...encounter, players: players });\n    } else {\n      players[i] = { ...oldPlayer, name: newPlayer };\n      onEdit({ ...encounter, players: players });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <StringField\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n        <FieldGroup>\n          <ImageImportField\n            label=\"Map\"\n            onFinished={(base64) => onEdit({ ...encounter, mapBase64: base64 })}\n          />\n          <IconButton icon={faTrash} onClick={() => onEdit({ ...encounter, mapBase64: \"\" })} />\n        </FieldGroup>\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangePlayerField(\"level\", level, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 2 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n\n  @media (max-width: 576px) {\n    flex-wrap: wrap;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BuildPlayer from \"../../../data/encounter/BuildPlayer\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: BuildPlayer[];\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: BuildPlayer[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<BuildPlayer>();\n\n  const makeDrag = useCallback((player: BuildPlayer) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): BuildPlayer | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  currentPlayerNumber: number;\n  players: BuildPlayer[];\n  makeDrop: () => BuildPlayer | undefined;\n  makeDrag: (player: BuildPlayer) => void;\n  updatePlayers: (players: BuildPlayer[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: BuildPlayer[] = players.map((player: BuildPlayer) => {\n      if (player === changedPlayer) {\n        return { ...player, player: { ...player.player, cord: cord } };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: BuildPlayer) => {\n    console.log(\"drag\", player.player.name, player.player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: BuildPlayer): number => {\n      if (player.player.isMonster) {\n        const monster = player.entity as Monster;\n        switch (monster.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: BuildPlayer, index: number) => {\n        if (\n          (playerIcon.player.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.player.cord !== undefined &&\n            playerIcon.player.cord[0] === cord[0] &&\n            playerIcon.player.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              dragOver={dragOver}\n              pic={playerIcon.entity.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.player.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: BuildPlayer;\n  drag: (e: any, player: BuildPlayer) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, player, isDead, isCurrent }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: size - 6 + \"px\",\n    width: size - 6 + \"px\",\n    opacity: isDead ? \"0.5\" : \"1\",\n    border: isCurrent ? \"\" : \"none\",\n  };\n\n  if (pic !== \"\") {\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n`;\n\nconst Empty = styled.div``;\n","import {\n  faHandHoldingHeart,\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GiBroadsword, GiHeartBottle } from \"react-icons/gi\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport BuildEncounter from \"../../../../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../../../../data/encounter/BuildPlayer\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { buildEncounter } from \"../../../../services/EncounterService\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport { DamageDialog } from \"../../../general_elements/Dialog\";\nimport { LoadingSpinner } from \"../../../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [damageDialog, setDamageDialog] = useState<boolean>(false);\n  const [damageDialogIndex, setDamageDialogIndex] = useState<number>(0);\n  const [loadedEncounter, setLoadedEncounter] = useState<BuildEncounter>(new BuildEncounter());\n  const [loading, isLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    buildEncounter(encounter).then((buildEncounter) => {\n      setLoadedEncounter(buildEncounter);\n      isLoading(false);\n    });\n  }, [encounter, setLoadedEncounter]);\n\n  const onChangePlayerField = (field: string, newField: string | number, oldPlayer: Player) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = loadedEncounter.encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = loadedEncounter.encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killPlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const revicePlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 1, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % loadedEncounter.players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % loadedEncounter.players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (loadedEncounter.players[nextInit].player.currentHp <= 0) {\n      if ((nextInit + 1) % loadedEncounter.players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % loadedEncounter.players.length;\n      counter++;\n      if (counter > loadedEncounter.players.length) {\n        break;\n      }\n    }\n    if (counter > loadedEncounter.players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  const onChangeDimension = useCallback(\n    (dimension: { width: number; height: number; size: number; zoom: number }) => {\n      onEdit({ ...loadedEncounter.encounter, dimension: dimension });\n    },\n    [loadedEncounter.encounter, onEdit]\n  );\n\n  const onChangePlayers = useCallback(\n    (players: BuildPlayer[]) => {\n      if (players !== loadedEncounter.players) {\n        let newPlayers: Player[] = [];\n        players.forEach((player: BuildPlayer) => {\n          if (!player.player.isMonster) {\n            newPlayers.push(player.player);\n          }\n        });\n        let newEnemies: Player[] = [];\n        players.forEach((player: BuildPlayer) => {\n          if (player.player.isMonster) {\n            newEnemies.push(player.player);\n          }\n        });\n\n        onEdit({ ...loadedEncounter.encounter, players: newPlayers, enemies: newEnemies });\n      }\n    },\n    [loadedEncounter.encounter, loadedEncounter.players, onEdit]\n  );\n\n  const showDamageDialog = (i: number) => {\n    setDamageDialogIndex(i);\n    setDamageDialog(true);\n  };\n\n  const getMap = useCallback(() => {\n    if (loadedEncounter.encounter !== undefined) {\n      if (\n        loadedEncounter.encounter.mapBase64 !== \"\" &&\n        loadedEncounter.encounter.mapBase64 !== null &&\n        loadedEncounter.encounter.mapBase64 !== undefined\n      ) {\n        return loadedEncounter.encounter.mapBase64;\n      } else if (\n        loadedEncounter.encounter.map !== \"\" &&\n        loadedEncounter.encounter.map !== null &&\n        loadedEncounter.encounter.map !== undefined\n      ) {\n        return loadedEncounter.encounter.map;\n      }\n    }\n    return \"\";\n  }, [loadedEncounter.encounter]);\n\n  return (\n    <CenterWrapper>\n      {damageDialog && (\n        <DamageDialog\n          name={loadedEncounter.players[damageDialogIndex].player.name}\n          damageText={\"Damage\"}\n          damageClick={(currentHp) => {\n            onChangePlayerField(\n              \"currentHp\",\n              loadedEncounter.players[damageDialogIndex].player.currentHp - currentHp,\n              loadedEncounter.players[damageDialogIndex].player\n            );\n            setDamageDialog(false);\n          }}\n          healText={\"Heal\"}\n          healClick={(currentHp) => {\n            onChangePlayerField(\n              \"currentHp\",\n              loadedEncounter.players[damageDialogIndex].player.currentHp + currentHp >\n                loadedEncounter.players[damageDialogIndex].player.hp\n                ? loadedEncounter.players[damageDialogIndex].player.hp\n                : loadedEncounter.players[damageDialogIndex].player.currentHp + currentHp,\n              loadedEncounter.players[damageDialogIndex].player\n            );\n            setDamageDialog(false);\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDamageDialog(false);\n          }}\n        />\n      )}\n      <View mode={dmView ? 1 : 0}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          {dmView && (\n            <PropElm>\n              <PropTitle>Difficulty: </PropTitle>\n              {loadedEncounter.difficulty.difficulty}\n            </PropElm>\n          )}\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                {dmView && <th>Current Hp</th>}\n                {dmView && <th>AC</th>}\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {loadedEncounter.players.map((buildPlayer: BuildPlayer, index: number) => {\n                return (\n                  <Row\n                    current={encounter.currentInit === index && encounter.isPlaying}\n                    isDead={buildPlayer.player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={buildPlayer.player.init}\n                        onChange={(init) => onChangePlayerField(\"init\", init, buildPlayer.player)}\n                      />\n                    </PropField>\n                    <Prop>\n                      {buildPlayer.entity.pic !== \"\" && buildPlayer.entity.pic !== undefined ? (\n                        <PlayerImage player={buildPlayer}></PlayerImage>\n                      ) : (\n                        <></>\n                      )}\n                      {buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {dmView ? buildPlayer.player.name : \"???\"}\n                        </MainLink>\n                      )}\n                      {!buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {buildPlayer.player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropRight>\n                      <DamageButton onClick={() => showDamageDialog(index)}>\n                        <GiBroadsword />\n                        <GiHeartBottle />\n                      </DamageButton>\n                      {dmView && `${buildPlayer.player.currentHp} / ${buildPlayer.player.hp}`}\n                    </PropRight>\n                    {dmView && <Prop>{buildPlayer.player.ac}</Prop>}\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {buildPlayer.player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killPlayer(buildPlayer.player)}\n                        />\n                      )}\n                      {buildPlayer.player.currentHp <= 0 && (\n                        <IconButton\n                          icon={faHandHoldingHeart}\n                          onClick={() => revicePlayer(buildPlayer.player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n      {loadedEncounter && getMap() !== \"\" && (\n        <Board\n          onChangePlayers={onChangePlayers}\n          players={loadedEncounter.players}\n          dimension={\n            encounter.dimension !== undefined\n              ? encounter.dimension\n              : { width: 20, height: 20, size: 20, zoom: 100 }\n          }\n          currentPlayerNumber={loadedEncounter.encounter.currentInit}\n          onChangeDimension={onChangeDimension}\n          img={getMap()}\n        ></Board>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst DamageButton = styled.button`\n  svg {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  font-size: 16px;\n  float: left;\n  padding: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border-radius: 10px;\n  border: none;\n\n  transition: color 0.2s;\n  background: ${({ theme }) => theme.buttons.backgroundColor};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n`;\n\ninterface $PlayerImageProps {\n  player: BuildPlayer;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.entity.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 400px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n`;\n\nconst PropRight = styled(Prop)`\n  text-align: right;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import {\n  faArrowLeft,\n  faClone,\n  faExclamationTriangle,\n  faSave,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport FileField from \"./FileField\";\n\ninterface $Props {\n  label?: string;\n  onFinished: (base64: string) => void;\n}\n\nconst ImageImportField = ({ label, onFinished }: $Props) => {\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        onFinished(event.target.result);\n      };\n      reader.readAsDataURL(files[0]);\n      console.log(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label={label || \"\"}\n          isMulti={false}\n          accept={\"image/png, image/jpeg\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n    </>\n  );\n};\n\nexport default ImageImportField;\n\nconst Files = styled.div`\n  flex: 1 1 auto;\n`;\n"],"sourceRoot":""}