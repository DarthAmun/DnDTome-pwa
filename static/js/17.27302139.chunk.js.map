{"version":3,"sources":["services/PeerIdService.tsx","../node_modules/peerjs/dist sync","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/p2p/P2PEncounter.tsx","components/entities/encounters/details/EncounterRoom.tsx","components/form_elements/NumberField.tsx"],"names":["generateBrokerId","min","max","password","characters","i","length","Math","floor","random","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TinyNumberField","value","showMax","onChange","Field","undefined","Input","type","target","Max","styled","label","theme","tile","color","backgroundColor","input","span","Board","img","players","showName","dimension","currentPlayerNumber","onChangePlayers","onChangeDimension","useState","board","setBoard","dragItem","setDragItem","makeDrag","useCallback","player","makeDrop","makeRow","row","list","j","width","push","PlayerSlot","key","cord","size","zoom","updatePlayers","makeBoard","height","BoardRow","useEffect","console","log","BoardWrapper","BoardBar","step","BoardContainer","BoardLayer","MapLayer","src","drag","name","dragOver","preventDefault","defineSize","isMonster","Slot","onDrop","changedPlayer","newPlayers","map","drop","onDragOver","playerIcon","index","Image","pic","isDead","currentHp","isCurrent","Empty","div","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","padding","fontSize","main","highlight","P2PEncounter","encounter","isHost","onEdit","peerId","setId","peer","setPeer","error","setError","connections","setConn","isChanged","setChanged","brokerId","newPeer","Peer","host","secure","on","conn","con","send","JSON","stringify","errorData","data","parse","filter","connect","forEach","minWidth","float","Icon","icon","faExclamationCircle","FontAwesomeIcon","EncounterRoom","history","useHistory","setPlayers","enemies","isEnemy","getMap","mapBase64","CenterWrapper","View","mode","Name","PropWrapper","PropElm","PropTitle","roundCounter","Table","sort","a","b","init","isPlaying","localeCompare","Row","current","currentInit","PropField","Prop","PlayerImage","MainLink","onClick","table","props","tr","td","backgroundColorLink","NumberField","transform","LabelText"],"mappings":"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","file":"static/js/17.27302139.chunk.js","sourcesContent":["const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 256;","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"../../../data/encounter/Player\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  showName,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<Player>();\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            showName={showName}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, showName, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: Player, index: number) => {\n        if (\n          (playerIcon.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.cord !== undefined &&\n            playerIcon.cord[0] === cord[0] &&\n            playerIcon.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, showName, player, isDead, isCurrent }: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n    };\n\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {showName ? player.name : \"???\"}\n      </ImageElm>\n    );\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n`;\n\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(JSON.parse(data));\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(JSON.parse(data));\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\n\nconst EncounterRoom = () => {\n  let history = useHistory();\n  const [encounter, onEdit] = useState<Encounter>();\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter?.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          if (JSON.stringify(encounter.players) !== JSON.stringify(newPlayers))\n            onEdit({\n              ...encounter,\n              players: newPlayers,\n            });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  return (\n    <>\n      <P2PEncounter encounter={encounter} onEdit={onEdit} isHost={false} />\n      <CenterWrapper>\n        <View mode={0}>\n          <Name>\n            <b>{encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.roundCounter}\n            </PropElm>\n          </PropWrapper>\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {encounter &&\n                players\n                  .sort((a: Player, b: Player) => {\n                    if (b.init === a.init || !encounter.isPlaying) {\n                      return a.name.localeCompare(b.name);\n                    }\n                    return b.init - a.init;\n                  })\n                  .map((player: Player, index: number) => {\n                    return (\n                      <Row\n                        current={encounter.currentInit === index && encounter.isPlaying}\n                        isDead={player.currentHp <= 0}\n                        key={index}\n                      >\n                        <PropField>\n                          <TinyNumberField value={player.init} onChange={() => undefined} />\n                        </PropField>\n                        <Prop>\n                          {player.pic !== \"\" && player.pic !== undefined ? (\n                            <PlayerImage player={player}></PlayerImage>\n                          ) : (\n                            <></>\n                          )}\n                          {player.isMonster && <MainLink>{\"???\"}</MainLink>}\n                          {!player.isMonster && (\n                            <MainLink\n                              onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                            >\n                              {player.name}\n                            </MainLink>\n                          )}\n                        </Prop>\n                      </Row>\n                    );\n                  })}\n            </tbody>\n          </Table>\n        </View>\n        {encounter && getMap() !== \"\" && (\n          <Board\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={false}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={() => {}}\n            img={getMap()}\n          ></Board>\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterRoom;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 400px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}