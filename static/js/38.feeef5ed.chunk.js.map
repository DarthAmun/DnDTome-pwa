{"version":3,"sources":["components/form_elements/FileField.tsx","components/entities/library/details/BookView.tsx","components/entities/library/details/BookEditView.tsx","components/entities/library/details/BookDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","hooks/DexieHooks.tsx","components/entities/library/details/link_wrapper/NameToBook.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/general_elements/Dialog.tsx","components/form_elements/NumberField.tsx"],"names":["FileField","label","accept","isMulti","icon","transform","onChange","Field","LabelText","Icon","Input","e","target","files","type","multiple","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","pdfjs","GlobalWorkerOptions","workerSrc","version","BookView","book","useState","base","setBase","numPages","setNumPages","pageNumber","setPageNumber","useEffect","reader","FileReader","readAsDataURL","data","onloadend","base64data","result","toString","changePage","offset","prevPageNumber","CenterWrapper","View","DocumentWrapper","TextButton","onClick","text","disabled","faArrowRight","faArrowLeft","file","onLoadSuccess","onItemClick","itemPageNumber","loading","LocalLoadingSpinner","Name","name","navigator","appVersion","indexOf","window","msSaveBlob","url","URL","createObjectURL","open","showPdf","faExternalLinkAlt","filename","msSaveOrOpenBlob","pdfURL","a","document","createElement","download","href","body","appendChild","click","removeChild","downloadFile","faFileDownload","TagWrapper","tags","map","tag","index","Tag","key","faTag","span","backgroundColorLink","BookEditView","onEdit","StringField","value","faFileImport","fileList","Array","from","length","triggerImportFiles","cover","faImage","NumberField","pages","faLink","TagView","oldTag","onTagChange","IconButton","faTrash","splice","removeTag","faPlus","BookDetail","isNew","editMode","setMode","bookObj","editBook","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","id","goBack","abortText","abortClick","TopBar","BackButton","action","mode","title","tableName","updateWithCallback","setTimeout","updateBook","faSave","Message","floatLeft","SimpleButton","left","DisabledSimpleButton","buttons","height","button","hoverColor","placeholder","useItem","table","effect","setEffect","reducer","useCallback","state","undefined","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equals","first","NameToBook","match","db","MyAppDatabase","books","params","Back","ToggleLeft","ToggleRight","EditToggle","props","DialogWrapper","ButtonBar","max"],"mappings":"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","file":"static/js/38.feeef5ed.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport FileField from \"../../../form_elements/FileField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BookView from \"./BookView\";\nimport BookEditView from \"./BookEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  book: Book;\n  isNew: boolean;\n}\n\nconst BookDetail = ({ book, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [bookObj, editBook] = useState<Book>(book);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteBook = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (bookObj !== book) {\n      setUnsavedChanges(true);\n    }\n  }, [bookObj, book]);\n\n  const updateBook = (tableName: string, bookObj: Book) => {\n    updateWithCallback(tableName, bookObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${book.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"books\", book.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateBook(\"books\", bookObj)} icon={faSave} />\n            <IconButton onClick={() => deleteBook()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <BookEditView book={bookObj} onEdit={(value) => editBook(value)} />\n      ) : (\n        <BookView book={bookObj} />\n      )}\n    </>\n  );\n};\n\nexport default BookDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { name: string };\n\nconst NameToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItemByAttr(\n    db.books,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default NameToBook;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}