{"version":3,"sources":["data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/CheckField.tsx","data/chars/ClassSet.tsx","data/races/Race.tsx","components/form_elements/DataSelectField.tsx","data/races/Subrace.tsx","data/chars/BuildChar.tsx","components/form_elements/EnumField.tsx","components/form_elements/AutoStringField.tsx","data/Modifier.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","services/CharacterService.tsx","data/races/Trait.tsx"],"names":["Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","this","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","picBase64","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","arg","nameCheck","undefined","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","isClassSet","CheckField","value","label","icon","transform","onChange","Field","LabelText","Icon","Input","type","defaultChecked","e","target","checked","Checkmark","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","buttons","ClassSet","classe","level","subclasse","classeCheck","levelCheck","subclasseCheck","Race","filename","abilityScores","age","size","lang","traits","sources","isRace","abilityScoresCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","traitsCheck","isTrait","sourcesCheck","DataSelectField","optionTable","filters","useState","optionsTable","options","setOptions","findAllItems","useCallback","a","entityList","forEach","table","push","reciveAllFilteredPromise","Promise","all","entities","entity","o","concat","useEffect","length","handleChange","option","StyledSelect","isMulti","classNamePrefix","Select","Subrace","isSubrace","typeCheck","BuildChar","character","prof","subclasses","classFeatures","raceFeatures","gears","modifiers","oldCharacter","EnumField","AutoStringField","filteredOptions","setFilteredOptions","itemList","reciveAllFiltered","data","onSearch","searchTerm","newOptions","filter","includes","slice","Options","map","opt","index","Option","key","onClick","ModifierOperator","_defineProperties","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","Modifier","operator","origin","Constructor","protoProps","staticProps","op","ADD","SUBSTRACT","EQUAL","tar","prototype","CharLabGeneral","char","completed","CenterWrapper","CharView","StringField","IconButton","faCheckCircle","disabled","CharLabClass","setClasses","changeClassLevel","oldClassSet","classSet","changeClass","changeClassSubclass","subclass","fieldName","sort","results","PropWrapper","NumberField","faTrash","oldClass","newClassList","removeClass","TextButton","text","faPlus","addNewClass","Text","PropTitle","FormatedText","proficiencies","equipment","span","backgroundColorLink","CharLabRace","setRace","setSubrace","trait","TraitWrapper","TraitName","TraitLevel","TraitText","CharLabAbilities","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","calcProf","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","CharLabEquipment","onChangeItem","newItem","onChangeItemAttribute","item","Container","attuned","attunment","attribute","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","CharLab","history","useHistory","activeTab","setTab","newChar","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","recalcClasses","bonis","fullClassList","classList","recivePromiseByAttribute","class","featureSet","featureSets","boni","isCurrency","max","spellslots","slots","updatedBonis","newBoni","updatedOldBonis","old","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","TabBar","children","tab","View","nextTab","Prop","faEdit","then","saveWithCallback","result","LinkCheck","loading","setLoading","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","webhook","useWebhook","json","setJson","formatedText","setFormatedText","newText","formatDiscordText","substring","newJson","username","content","JSON","stringify","cut","cutStart","cutEnd","substr","rollDiscord","command","rollCommand","rolls","sendMessage","newCommand","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","entityParts","link","Link","formatTable","textPart","newTable","tableEnd","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","style","float","padding","faDiscord","sendEmbedMessage","th","td","step","Bar","child","Tab","isActive","calcLevel","ceil","buildCharacter","console","time","subclassList","gearList","baseList","monsterList","spellList","monster","spell","currentItems","base","currentGears","currentBases","classLevel","charClass","features","originItem","toLowerCase","gear","timeEnd","extractModifier","description","feature","extractTarget","newModifiers","rawModifier","applyMods","b","mod","replacePlaceholder","modPromises","resolve","reject","rawPlaceholder","replace","eval","Trait","textCheck"],"mappings":"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","file":"static/js/14.52fb9fb7.chunk.js","sourcesContent":["export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n  picBase64: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    picBase64?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined && Array.isArray(arg.traits) && isTrait(arg.traits[0]);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined && Array.isArray(arg.traits) && isTrait(arg.traits[0]);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\nimport Filter from \"../../data/Filter\";\nimport IEntity from \"../../data/IEntity\";\nimport { reciveAllFilteredPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst DataSelectField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string[]>(optionTable);\n  const [options, setOptions] = useState<\n    {\n      value: string;\n      label: string;\n    }[]\n  >([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let entityList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        entityList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(entityList);\n      results.forEach((entities: IEntity[]) => {\n        entities.forEach((entity: IEntity) => {\n          setOptions((o) =>\n            o.concat({\n              value: entity.name,\n              label: entity.name,\n            })\n          );\n        });\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionsTable !== undefined && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default DataSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import Class from \"../classes/Class\";\nimport FeatureSet from \"../classes/FeatureSet\";\nimport Subclass from \"../classes/Subclass\";\nimport Gear from \"../Gear\";\nimport Item from \"../Item\";\nimport Modifier from \"../Modifier\";\nimport Monster from \"../Monster\";\nimport Race from \"../races/Race\";\nimport Subrace from \"../races/Subrace\";\nimport Trait from \"../races/Trait\";\nimport Spell from \"../Spell\";\nimport Char from \"./Char\";\n\nexport default class BuildChar {\n  character: Char;\n  oldCharacter: Char;\n  level: number;\n  prof: number;\n  classes: Class[];\n  subclasses: Subclass[];\n  classFeatures: FeatureSet[];\n  race: Race;\n  subrace: Subrace;\n  raceFeatures: Trait[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  spells: Spell[];\n  monsters: Monster[];\n  modifiers: Modifier[];\n\n  constructor(\n    character?: Char,\n    level?: number,\n    prof?: number,\n    classes?: Class[],\n    subclasses?: Subclass[],\n    classFeatures?: FeatureSet[],\n    race?: Race,\n    subrace?: Subrace,\n    raceFeatures?: Trait[],\n    gears?: {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    items?: {\n      item: Item;\n      base: Gear | undefined;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    spells?: Spell[],\n    monsters?: Monster[],\n    modifiers?: Modifier[]\n  ) {\n    this.character = character || new Char();\n    this.oldCharacter = character || new Char();\n    this.level = level || 0;\n    this.prof = prof || 0;\n    this.classes = classes || [];\n    this.subclasses = subclasses || [];\n    this.classFeatures = classFeatures || [];\n    this.race = race || new Race();\n    this.subrace = subrace || new Subrace();\n    this.raceFeatures = raceFeatures || [];\n    this.gears = gears || [];\n    this.items = items || [];\n    this.spells = spells || [];\n    this.monsters = monsters || [];\n    this.modifiers = modifiers || [];\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = options\n          .filter((option) => {\n            return option.name.includes(searchTerm);\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","export enum ModifierOperator {\n  EQUAL,\n  ADD,\n  SUBSTRACT,\n}\n\nexport default class Modifier {\n  target: string | string[];\n  operator: ModifierOperator;\n  value: string | number;\n  origin: string;\n\n  constructor(\n    target: string | string[],\n    operator: ModifierOperator,\n    value: string | number,\n    origin: string\n  ) {\n    this.target = target;\n    this.operator = operator;\n    this.value = value;\n    this.origin = origin;\n  }\n\n  makeString(): string {\n    let op = \"\";\n    if (this.operator === ModifierOperator.ADD) {\n      op = \"+\";\n    } else if (this.operator === ModifierOperator.SUBSTRACT) {\n      op = \"-\";\n    } else if (this.operator === ModifierOperator.EQUAL) {\n      op = \"=\";\n    }\n\n    let tar = \"\";\n    if (Array.isArray(this.target)) {\n      tar = `${this.target[0]}.${this.target[1]}`;\n    } else {\n      tar = this.target;\n    }\n\n    return `${tar} ${op} ${this.value}`;\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <DataSelectField\n          optionTable={[\"campaigns\"]}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n              <DataSelectField\n                optionTable={[\"classes\"]}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <DataSelectField\n                optionTable={[\"subclasses\"]}\n                filters={[{ fieldName: \"type\", value: classSet.classe, sort: 0 }]}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <DataSelectField\n            optionTable={[\"races\"]}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) => onChange({ ...char, race: { ...char.race, race: race } })}\n          />\n          <DataSelectField\n            optionTable={[\"subraces\"]}\n            filters={[{ fieldName: \"type\", value: char.race.race, sort: 0 }]}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) => onChange({ ...char, race: { ...char.race, subrace: subrace } })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport { calcProf } from \"../../../../services/CharacterService\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * calcProf(char) + formatScore(stat);\n    },\n    [formatScore, char]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter((item) => item.origin !== oldItem.origin);\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) => onChangeItemAttribute({ ...item, prof: prof }, index)}\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label: item.attribute.charAt(0).toUpperCase() + item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) => onChangeItemAttribute({ ...item, attribute: type }, index)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton text={\"Add new Item\"} icon={faPlus} onClick={() => addNewItem()} />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes?.forEach((classe) => {\n      classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    });\n    const results = await Promise.all(classList);\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet !== undefined) {\n        if (featureSet.bonis) {\n          featureSet.bonis?.forEach((boni: Boni) => {\n            if (boni.isCurrency) {\n              bonis = [\n                ...bonis,\n                {\n                  origin: boni.name,\n                  value: +boni.value,\n                  max: +boni.value,\n                },\n              ];\n            }\n          });\n        }\n        if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n          spellSlots = [\n            ...spellSlots,\n            {\n              origin: classe.class.name,\n              slots: featureSet.spellslots,\n              max: featureSet.spellslots,\n            },\n          ];\n        }\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis?.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots?.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Class\", \"Race\", \"Abilities\", \"Equipment\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass char={newChar} onChange={updateChar} completed={updateClass} />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace char={newChar} onChange={updateChar} completed={updateRace} />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setAbilities(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setEquipment(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text, rolls } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20\" + rolls + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text, rolls } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \" \" + rolls + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string, index: number): JSX.Element => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={\"TextPart\" + index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                if (linkParts[1].includes(\"|\")) {\n                  const entityParts = linkParts[1].split(\"|\");\n                  const link: string =\n                    \"/\" +\n                    linkEntity +\n                    \"-detail/name/\" +\n                    entityParts[0] +\n                    \"?source=\" +\n                    entityParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={entityParts[0]} /> {entityParts[0]} (\n                        {entityParts[1]})\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                } else {\n                  const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                }\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else if (text.length > 0) {\n          return <TextPart key={\"TextPart\" + index}>{text}</TextPart>;\n        }\n      }\n      return <></>;\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string): JSX.Element[] => {\n      if (textPart.includes(\"||tableStart||\")) {\n        let newTable: JSX.Element[] = [];\n        const table: string[] = text.split(\"||tableStart||\");\n\n        table.forEach((textPart: string, index: number) => {\n          if (textPart.includes(\"||tableEnd||\")) {\n            const tableEnd = textPart.split(\"||tableEnd||\");\n            const tableRows: string[] = tableEnd[0].split(\"||\");\n            let isHead = true;\n            newTable.push(\n              <table key={\"table\" + index}>\n                <tbody key={\"tbody\" + index}>\n                  {tableRows.map((row: string, index: number) => {\n                    if (row.includes(\"|\")) {\n                      if (isHead) {\n                        isHead = false;\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                            })}\n                          </tr>\n                        );\n                      } else {\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableProp key={index}>{formatLink(cell, index)}</TableProp>;\n                            })}\n                          </tr>\n                        );\n                      }\n                    } else {\n                      return <></>;\n                    }\n                  })}\n                </tbody>\n              </table>\n            );\n            newTable.push(formatLink(tableEnd[1], index));\n          } else {\n            newTable.push(formatLink(table[0], index));\n          }\n        });\n        return newTable;\n      }\n      return [formatLink(textPart, 0)];\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div`\n  line-height: 20px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  margin: 1px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import BuildChar from \"../data/chars/BuildChar\";\nimport Char from \"../data/chars/Char\";\nimport ClassSet from \"../data/chars/ClassSet\";\nimport Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Modifier, { ModifierOperator } from \"../data/Modifier\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const recalcClasses = async (char: Char) => {\n  let bonis: { origin: string; value: number; max: number }[] = [];\n  let spellSlots: {\n    origin: string;\n    slots: number[];\n    max: number[];\n  }[] = [];\n  let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n  let classList: Promise<Class>[] = [];\n\n  char.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n  });\n  const results = await Promise.all(classList);\n  results.forEach((classe: Class) => {\n    char.classes.forEach((classSet) => {\n      if (classe.name === classSet.classe) {\n        fullClassList.push({ class: classe, classSet: classSet });\n      }\n    });\n  });\n\n  fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n    let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n    if (featureSet.bonis) {\n      featureSet.bonis.forEach((boni: Boni) => {\n        if (boni.isCurrency) {\n          bonis = [\n            ...bonis,\n            {\n              origin: boni.name,\n              value: +boni.value,\n              max: +boni.value,\n            },\n          ];\n        }\n      });\n    }\n    if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n      spellSlots = [\n        ...spellSlots,\n        {\n          origin: classe.class.name,\n          slots: featureSet.spellslots,\n          max: featureSet.spellslots,\n        },\n      ];\n    }\n  });\n\n  if (char.currencyBonis && char.currencyBonis.length > 0) {\n    let updatedBonis = bonis.map((newBoni) => {\n      let updatedOldBonis = char.currencyBonis.map((old) => {\n        if (newBoni.origin === old.origin) {\n          return {\n            origin: newBoni.origin,\n            value: old.value,\n            max: newBoni.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldBonis &&\n        updatedOldBonis.length > 0 &&\n        updatedOldBonis[0] !== undefined &&\n        updatedOldBonis[0] !== null\n      ) {\n        return updatedOldBonis[0];\n      } else {\n        return newBoni;\n      }\n    });\n    if (updatedBonis && updatedBonis.length > 0) {\n      bonis = Array.from(updatedBonis);\n    }\n  }\n\n  if (char.spellSlots && char.spellSlots.length > 0) {\n    let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n      let updatedOldSlots = char.spellSlots.map((old) => {\n        if (newSpellSlots.origin === old.origin) {\n          return {\n            origin: newSpellSlots.origin,\n            slots: old.slots,\n            max: newSpellSlots.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldSlots &&\n        updatedOldSlots.length > 0 &&\n        updatedOldSlots[0] !== undefined &&\n        updatedOldSlots[0] !== null\n      ) {\n        return updatedOldSlots[0];\n      } else {\n        return newSpellSlots;\n      }\n    });\n    if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n      spellSlots = Array.from(updatedSpellSlots);\n    }\n  }\n\n  let updatedChar = {\n    ...char,\n    spellSlots: spellSlots,\n    currencyBonis: bonis,\n  };\n  return updatedChar;\n};\n\nexport const calcLevel = (char: Char): number => {\n  let level = 0;\n  char.classes.forEach((classe) => {\n    level += classe.level;\n  });\n  return level;\n};\n\nexport const calcProf = (char: Char): number => {\n  let level = calcLevel(char);\n  return Math.ceil(level / 4) + 1;\n};\n\nexport const buildCharacter = async (character: Char): Promise<BuildChar> => {\n  console.time(\"build Character\");\n  let level: number = calcLevel(character);\n  let prof: number = calcProf(character);\n  let classes: Class[] = [];\n  let subclasses: Subclass[] = [];\n  let classFeatures: FeatureSet[] = [];\n  let race: Race;\n  let subrace: Subrace;\n  let raceFeatures: Trait[] = [];\n  let gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let spells: Spell[];\n  let monsters: Monster[] = [];\n\n  console.time(\"load\");\n  let classList: Promise<Class>[] = [];\n  let subclassList: Promise<Subclass>[] = [];\n  let itemList: Promise<Item>[] = [];\n  let gearList: Promise<Gear>[] = [];\n  let baseList: Promise<Gear>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n  let spellList: Promise<Spell>[] = [];\n\n  character.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    subclassList.push(recivePromiseByAttribute(\"subclasses\", \"name\", classe.subclasse));\n  });\n  character.items.forEach((item) => {\n    itemList.push(recivePromiseByAttribute(\"items\", \"name\", item.origin));\n    gearList.push(recivePromiseByAttribute(\"gears\", \"name\", item.origin));\n  });\n  character.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  character.spells.forEach((spell: string) => {\n    spellList.push(recivePromiseByAttribute(\"spells\", \"name\", spell));\n  });\n\n  let currentItems = await Promise.all(itemList);\n  currentItems.forEach((item) => {\n    if (item !== undefined) baseList.push(recivePromiseByAttribute(\"gears\", \"name\", item.base));\n  });\n\n  classes = await Promise.all(classList);\n  subclasses = await Promise.all(subclassList);\n  monsters = await Promise.all(monsterList);\n  spells = await Promise.all(spellList);\n  let currentGears = await Promise.all(gearList);\n  let currentBases = await Promise.all(baseList);\n\n  race = await recivePromiseByAttribute(\"races\", \"name\", character.race.race);\n  subrace = await recivePromiseByAttribute(\"subraces\", \"name\", character.race.subrace);\n\n  classes.forEach((classe: Class) => {\n    if (classe !== undefined) {\n      let classLevel = 0;\n      character.classes.forEach((charClass) => {\n        if (charClass !== undefined)\n          if (classe.name === charClass.classe) {\n            classLevel = charClass.level;\n          }\n      });\n      classe.featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet !== undefined) {\n          if (featureSet.level <= classLevel) {\n            classFeatures.push(featureSet);\n          }\n        }\n      });\n      subclasses?.forEach((subclass: Subclass) => {\n        if (subclass !== undefined)\n          if (subclass.type === classe.name) {\n            subclass.features.forEach((featureSet: FeatureSet) => {\n              if (featureSet.level <= classLevel) {\n                classFeatures.push(featureSet);\n              }\n            });\n          }\n      });\n    }\n  });\n  if (race !== undefined) {\n    race.traits.forEach((trait: Trait) => {\n      if (trait !== undefined)\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n    });\n    subrace?.traits.forEach((trait: Trait) => {\n      if (trait !== undefined)\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n    });\n  }\n  character.items.forEach((originItem) => {\n    if (originItem !== undefined) {\n      currentItems.forEach(async (item: Item) => {\n        if (item !== undefined) {\n          if (originItem.origin.toLowerCase() === item.name.toLowerCase()) {\n            if (item.base !== \"\") {\n              currentBases.forEach((base: Gear) => {\n                if (base !== undefined && base.name.toLowerCase() === item.base.toLowerCase()) {\n                  items.push({ ...originItem, item: item, base: base });\n                }\n              });\n            } else {\n              items.push({ ...originItem, item: item, base: undefined });\n            }\n          }\n        }\n      });\n      currentGears.forEach((gear: Gear) => {\n        if (gear !== undefined)\n          if (originItem.origin.toLowerCase() === gear.name.toLowerCase()) {\n            gears.push({ ...originItem, gear: gear });\n          }\n      });\n    }\n  });\n  console.timeEnd(\"load\");\n\n  console.time(\"modifier\");\n  let modifiers: Modifier[] = [];\n  gears.forEach((gear) => {\n    modifiers = modifiers.concat(extractModifier(gear.gear.description, \"Gear: \" + gear.origin));\n  });\n  items.forEach((item) => {\n    modifiers = modifiers.concat(\n      extractModifier(item.item.description, \"Magic Item: \" + item.origin)\n    );\n  });\n  raceFeatures.forEach((trait) => {\n    modifiers = modifiers.concat(extractModifier(trait.text, \"Race Feature: \" + trait.name));\n  });\n  classFeatures.forEach((featureSet) => {\n    featureSet.features.forEach((feature) => {\n      modifiers = modifiers.concat(extractModifier(feature.text, \"Class Feature: \" + feature.name));\n    });\n  });\n  console.timeEnd(\"modifier\");\n\n  items = items.filter((item) => item !== undefined);\n  gears = gears.filter((gear) => gear !== undefined);\n  spells = spells.filter((spell) => spell !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"build Character\");\n  return new BuildChar(\n    character,\n    level,\n    prof,\n    classes,\n    subclasses,\n    classFeatures,\n    race,\n    subrace,\n    raceFeatures,\n    gears,\n    items,\n    spells,\n    monsters,\n    modifiers\n  );\n};\n\nconst cut = (str: string, cutStart: number, cutEnd: number) => {\n  return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n};\n\nconst extractTarget = (target: string): string | string[] => {\n  if (target.includes(\".\")) {\n    return target.split(\".\");\n  }\n  return target;\n};\n\nconst extractModifier = (text: string, origin: string): Modifier[] => {\n  let newModifiers: Modifier[] = [];\n\n  while (text.includes(\"{{\")) {\n    const cutStart = text.indexOf(\"{{\");\n    const cutEnd = text.indexOf(\"}}\");\n    const rawModifier = text.substring(cutStart + 2, cutEnd);\n    text = cut(text, cutStart, cutEnd + 1);\n\n    if (rawModifier.includes(\"=\")) {\n      const split = rawModifier.split(\"=\");\n\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.EQUAL,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"+\")) {\n      const split = rawModifier.split(\"+\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.ADD,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"-\")) {\n      const split = rawModifier.split(\"-\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.SUBSTRACT,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    }\n  }\n  return newModifiers;\n};\n\nexport const applyMods = async (char: BuildChar, modifiers: boolean): Promise<BuildChar> => {\n  if (modifiers) {\n    let newChar = char;\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (typeof mod.target == \"string\") {\n          const target: string = mod.target;\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: replacePlaceholder(newChar, mod.value),\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: newChar.character[target] + mod.value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) + value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) - value,\n              },\n            };\n          }\n        } else if (Array.isArray(mod.target) && mod.target[1] !== \"add\") {\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: replacePlaceholder(newChar, mod.value),\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: newChar.character[mod.target[0]][mod.target[1]] + mod.value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) + value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) - value,\n                },\n              },\n            };\n          }\n        }\n      });\n\n    let modPromises: Promise<boolean>[] = [];\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (mod.target[1] === \"add\" && typeof mod.value == \"string\") {\n          const value: string = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              recivePromiseByAttribute(mod.target[0], \"name\", value.replaceAll('\"', \"\")).then(\n                (entity) => {\n                  newChar = { ...newChar, [mod.target[0]]: [...newChar[mod.target[0]], entity] };\n                  resolve(true);\n                }\n              );\n            })\n          );\n        }\n      });\n    await Promise.all(modPromises);\n    return newChar;\n  } else {\n    return { ...char, character: char.oldCharacter };\n  }\n};\n\nexport const replacePlaceholder = (char: BuildChar, text: string | number) => {\n  if (typeof text == \"string\" && text.includes(\"[\") && text.includes(\"]\")) {\n    text = text.replaceAll('\"', \"\");\n    while (text.includes(\"[\") && text.includes(\"]\")) {\n      const cutStart = text.indexOf(\"[\");\n      const cutEnd = text.indexOf(\"]\");\n      const rawPlaceholder = text.substring(cutStart + 1, cutEnd);\n      text = text.replace(text.substring(cutStart, cutEnd + 1), char.character[rawPlaceholder]);\n    }\n    // eslint-disable-next-line\n    return Math.floor(eval(text));\n  }\n  return text;\n};\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n"],"sourceRoot":""}