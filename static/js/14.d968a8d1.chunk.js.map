{"version":3,"sources":["data/chars/ClassSet.tsx","data/Monster.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","data/encounter/Player.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","services/DiceService.tsx","components/form_elements/TinyNumberField.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/form_elements/NumberField.tsx","components/form_elements/AutoStringField.tsx"],"names":["ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","undefined","levelCheck","subclasseCheck","Monster","id","name","sources","pic","size","type","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","nameCheck","picCheck","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","findMonsterFormattError","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","IconButton","icon","floatLeft","disabled","transform","onClick","SimpleButton","left","Icon","DisabledSimpleButton","styled","div","theme","buttons","color","backgroundColor","height","FontAwesomeIcon","TextButton","text","button","hoverColor","StringField","value","label","placeholder","onChange","Field","LabelText","Input","e","target","tile","main","highlight","input","Player","tempHp","initBonus","tag","crExpTable","exp","expTable","easy","medium","hard","deadly","calcDifficulty","encounter","calcExp","players","forEach","length","enemyExp","enemies","enemy","crExp","difficulty","EncounterEditView","onEdit","useState","setDifficulty","expArray","setExpArray","useEffect","onChangeEnemyField","field","newEnemy","oldEnemy","i","onChangePlayerField","newPlayer","oldPlayer","CenterWrapper","View","PropWrapper","Prop","PropTitle","CharView","map","index","Container","key","AutoStringField","optionTable","newMonster","reciveByAttribute","result","onChangeEnemy","NumberField","faTrash","newEnemyList","splice","removeEnemy","faPlus","push","addNewEnemy","classSet","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","span","backgroundColorLink","rollDie","max","Math","round","random","TinyNumberField","showMax","Max","EncounterView","history","useHistory","loading","isLoading","setPlayers","newPlayers","isPlaying","sort","a","b","newField","finishEncounter","newEnemies","currentInit","roundCounter","Name","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","Row","current","isDead","PropField","MainLink","faSkullCrossbones","table","tr","props","td","EncounterDetail","isNew","editMode","setMode","encounterObj","editEncounter","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","updateWithCallback","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","toString","faExclamationTriangle","faSave","encounterId","remove","Message","editAndSaveEncounter","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","useItem","effect","setEffect","reducer","useCallback","state","data","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equals","first","Back","ToggleLeft","ToggleRight","EditToggle","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllPromise","Promise","all","o","concat","reciveAll","onSearch","searchTerm","newOptions","filter","option","includes","Options","opt","Option"],"mappings":"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","file":"static/js/14.d968a8d1.chunk.js","sourcesContent":["export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck =\n    arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { reciveByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) =>\n                  onChangeEnemy(newMonster, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangeEnemyField(\"currentHp\", currentHp, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangeEnemyField(\"initBonus\", initBonus, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, enemy, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Monster\"}\n            icon={faPlus}\n            onClick={() => addNewEnemy()}\n          />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) =>\n                  onChangePlayer(newPlayer, player, index)\n                }\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangePlayerField(\"currentHp\", currentHp, player, index)\n                }\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangePlayerField(\"initBonus\", initBonus, player, index)\n                }\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, player, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Character\"}\n            icon={faPlus}\n            onClick={() => addNewPlayer()}\n          />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loading, isLoading] = useState<boolean>(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n  }, [encounter]);\n\n  useEffect(() => {\n    let newPlayers = [...encounter.enemies, ...encounter.players];\n    if (encounter.isPlaying) {\n      newPlayers = newPlayers.sort((a, b) => (a.init < b.init ? 1 : -1));\n    }\n    setPlayers(newPlayers);\n    isLoading(false);\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number,\n    oldPlayer: Player\n  ) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (players[nextInit].currentHp <= 0) {\n      if ((nextInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % players.length;\n      counter++;\n      if (counter > players.length) {\n        break;\n      }\n    }\n    if (counter > players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton\n                text={\"Next\"}\n                icon={faStepForward}\n                onClick={() => nextPlayer()}\n              />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {players.map((player: Player, index: number) => {\n                return (\n                  <Row\n                    current={\n                      encounter.currentInit === index && encounter.isPlaying\n                    }\n                    isDead={player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={player.init}\n                        onChange={(init) =>\n                          onChangePlayerField(\"init\", init, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>\n                      {player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                      {!player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={player.currentHp}\n                        max={player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{player.hp}</Prop>\n                    <Prop>{player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateEncounter(\"encounters\", encounterObj)} icon={faSave} />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView encounter={encounterObj} onEdit={(value) => editAndSaveEncounter(value)} />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}