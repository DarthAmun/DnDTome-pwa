{"version":3,"sources":["components/form_elements/NumberField.tsx","components/form_elements/SingleSelectField.tsx","services/PeerIdService.tsx","../node_modules/peerjs/dist sync","components/p2p/P2PEncounter.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterRoom.tsx"],"names":["NumberField","value","max","step","label","icon","transform","onChange","Field","LabelText","Icon","Input","type","e","target","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","SingleSelectField","options","style","handleChange","option","undefined","StyledSelect","isMulti","classNamePrefix","isClearable","Select","buttons","generateBrokerId","min","password","characters","i","length","Math","floor","random","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","id","P2PEncounter","encounter","isHost","onEdit","useState","peerId","setId","peer","setPeer","error","setError","connections","setConn","isChanged","setChanged","useEffect","brokerId","newPeer","Peer","host","secure","on","conn","con","send","JSON","stringify","errorData","data","newData","parse","filter","connect","forEach","minWidth","float","height","faExclamationCircle","TinyNumberField","showMax","Max","span","Board","img","players","showName","dimension","fogBoard","currentPlayerNumber","onChangePlayers","onChangeDimension","onChangeBoard","dragItem","setDragItem","currentFogBoard","setFogBoard","fog","setFog","fogSize","setFogSize","makeDrag","useCallback","player","makeDrop","toggleFog","cord","newBoard","width","newFog","slot","index","makeFog","f","console","log","BoardWrapper","BoardBar","zoom","size","zIndex","onClick","toggle","faFill","BoardContainer","LayerWrapper","Grid","map","PlayerSlot","updatePlayers","MapLayer","src","drag","name","dragOver","preventDefault","defineSize","isMonster","GridCell","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isVisible","Empty","Image","pic","isDead","currentHp","isCurrent","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","Tooltip","faEyeSlash","padding","fontSize","split","EncounterRoom","history","useHistory","setPlayers","initTracker","showInitTracker","enemies","isEnemy","push","getMap","mapBase64","CenterWrapper","View","mode","show","ScrollWrapper","Name","PropWrapper","PropElm","PropTitle","roundCounter","Table","sort","a","b","init","isPlaying","localeCompare","Row","current","currentInit","PropField","Prop","PlayerImage","MainLink","MoveButton","faArrowAltCircleRight","faArrowAltCircleLeft","board","table","props","tr","td","backgroundColorLink"],"mappings":"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","file":"static/js/15.65401d85.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  -moz-appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: {\n    value: string;\n    label: string;\n  }[];\n  value: string;\n  label: string;\n  style?: any;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SingleSelectField = ({ options, value, label, style, icon, transform, onChange }: $Props) => {\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field style={style}>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        isClearable={true}\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default SingleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 200px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 261;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          var newData = JSON.parse(data);\n          // if (encounter !== newData && encounter?.name === newData.name) {\n          if (encounter !== data) {\n            onEdit(newData);\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        var newData = JSON.parse(data);\n        // if (encounter !== newData && encounter?.name === newData.name) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(newData);\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\", height: \"30px\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import { faEyeSlash, faFill } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Slot from \"../../../data/encounter/Slot\";\nimport Player from \"../../../data/encounter/Player\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport SingleSelectField from \"../../form_elements/SingleSelectField\";\n\ninterface $Props {\n  isHost: boolean;\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  fogBoard: Slot[];\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n  onChangeBoard: (fogBoard: Slot[]) => void;\n}\n\nconst Board = ({\n  isHost,\n  img,\n  players,\n  showName,\n  dimension,\n  fogBoard,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n  onChangeBoard,\n}: $Props) => {\n  const [dragItem, setDragItem] = useState<Player>();\n  const [currentFogBoard, setFogBoard] = useState<Slot[]>(fogBoard);\n  const [fog, setFog] = useState<boolean>(false);\n  const [fogSize, setFogSize] = useState<string>(\"dot\");\n\n  useEffect(() => {\n    setFogBoard(fogBoard);\n  }, [fogBoard]);\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const toggleFog = useCallback(\n    (cord: number) => {\n      if (fog) {\n        let newBoard = [...currentFogBoard];\n        if (fogSize === \"cross\") {\n          if (cord - dimension.width >= 0)\n            newBoard[cord - dimension.width].fog = !newBoard[cord - dimension.width].fog;\n          if ((cord - 1) % dimension.width < cord % dimension.width && cord - 1 >= 0)\n            newBoard[cord - 1].fog = !newBoard[cord - 1].fog;\n          newBoard[cord].fog = !newBoard[cord].fog;\n          if ((cord + 1) % dimension.width > cord % dimension.width)\n            newBoard[cord + 1].fog = !newBoard[cord + 1].fog;\n          if (cord + dimension.width < dimension.width * dimension.height)\n            newBoard[cord + dimension.width].fog = !newBoard[cord + dimension.width].fog;\n        } else if (fogSize === \"quarter\") {\n          if (\n            cord - dimension.width - 1 >= 0 &&\n            (cord - dimension.width - 1) % dimension.width < cord % dimension.width\n          )\n            newBoard[cord - dimension.width - 1].fog = !newBoard[cord - dimension.width - 1].fog;\n          if (cord - dimension.width >= 0)\n            newBoard[cord - dimension.width].fog = !newBoard[cord - dimension.width].fog;\n          if (\n            cord - dimension.width + 1 >= 0 &&\n            (cord - dimension.width + 1) % dimension.width > cord % dimension.width\n          )\n            newBoard[cord - dimension.width + 1].fog = !newBoard[cord - dimension.width + 1].fog;\n          if ((cord - 1) % dimension.width < cord % dimension.width && cord - 1 >= 0)\n            newBoard[cord - 1].fog = !newBoard[cord - 1].fog;\n          newBoard[cord].fog = !newBoard[cord].fog;\n          if ((cord + 1) % dimension.width > cord % dimension.width)\n            newBoard[cord + 1].fog = !newBoard[cord + 1].fog;\n          if (\n            cord + dimension.width - 1 < dimension.width * dimension.height &&\n            (cord + dimension.width - 1) % dimension.width < cord % dimension.width\n          )\n            newBoard[cord + dimension.width - 1].fog = !newBoard[cord + dimension.width - 1].fog;\n          if (cord + dimension.width < dimension.width * dimension.height)\n            newBoard[cord + dimension.width].fog = !newBoard[cord + dimension.width].fog;\n          if (\n            cord + dimension.width + 1 < dimension.width * dimension.height + 1 &&\n            (cord + dimension.width + 1) % dimension.width > cord % dimension.width\n          )\n            newBoard[cord + dimension.width + 1].fog = !newBoard[cord + dimension.width + 1].fog;\n        } else if (fogSize === \"full\") {\n          const newFog = !newBoard[cord].fog;\n          [...currentFogBoard].forEach((slot: Slot, index) => {\n            newBoard[index].fog = newFog;\n          });\n        } else {\n          newBoard[cord].fog = !newBoard[cord].fog;\n        }\n        setFogBoard(newBoard);\n      }\n    },\n    [setFogBoard, fog, currentFogBoard, fogSize, dimension]\n  );\n\n  const makeFog = useCallback(() => {\n    setFog((f) => !f);\n    if (fog) {\n      console.log(\"push board\");\n      onChangeBoard(currentFogBoard);\n    }\n  }, [fog, currentFogBoard, onChangeBoard]);\n\n  return (\n    <BoardWrapper>\n      {isHost && (\n        <BoardBar>\n          <NumberField\n            value={dimension.zoom}\n            label=\"Zoom\"\n            step={10}\n            onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n          />\n          <NumberField\n            value={dimension.width}\n            label=\"Horizontal\"\n            onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n          />\n          <NumberField\n            value={dimension.height}\n            label=\"Vertical\"\n            onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n          />\n          <NumberField\n            value={dimension.size}\n            label=\"Size\"\n            onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n          />\n          <SingleSelectField\n            options={[\n              { value: \"dot\", label: \"dot\" },\n              { value: \"cross\", label: \"cross\" },\n              { value: \"quarter\", label: \"quarder\" },\n              { value: \"full\", label: \"full\" },\n            ]}\n            style={{ zIndex: \"600\" }}\n            value={fogSize}\n            label={\"Fog Tool\"}\n            onChange={setFogSize}\n          />\n          <IconButton onClick={makeFog} toggle={fog} icon={faFill} />\n        </BoardBar>\n      )}\n      <BoardContainer>\n        <LayerWrapper zoom={dimension.zoom / 100}>\n          <Grid>\n            {fogBoard?.map((slot: Slot, i: number) => {\n              return (\n                <PlayerSlot\n                  isHost={isHost}\n                  key={i}\n                  cord={i}\n                  showName={showName}\n                  players={players}\n                  size={dimension.size}\n                  zoom={dimension.zoom / 100}\n                  fog={slot.fog}\n                  makeDrop={makeDrop}\n                  makeDrag={makeDrag}\n                  toggleFog={toggleFog}\n                  updatePlayers={onChangePlayers}\n                  currentPlayerNumber={currentPlayerNumber}\n                />\n              );\n            })}\n          </Grid>\n          <MapLayer zoom={dimension.zoom / 100} src={img} />\n        </LayerWrapper>\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  isHost: boolean;\n  size: number;\n  zoom: number;\n  cord: number;\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  fog: boolean;\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  toggleFog: (cord: number) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  isHost,\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  fog,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  toggleFog,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    console.log(\"update Players\");\n    updatePlayers(newPlayers);\n  };\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <GridCell\n      size={size * zoom}\n      fog={fog}\n      onDrop={(e) => drop(e, cord)}\n      isHost={isHost}\n      onDragOver={dragOver}\n      onClick={() => toggleFog(cord)}\n    >\n      {players.map((playerIcon: Player, index: number) => {\n        if ((!playerIcon.isVisible || isHost) && playerIcon.cord === cord)\n          return (\n            <Image\n              key={\"icon\" + index}\n              index={index}\n              drag={drag}\n              player={playerIcon}\n              isHost={isHost}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </GridCell>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  padding: 5px;\n  height: calc(100vh - 140px);\n  width: calc(100vw - 110px);\n\n  @media (max-width: 576px) {\n    width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: no-wrap;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\nconst LayerWrapper = styled.div<ZoomProp>`\n  width: calc(100px * ${({ zoom }) => zoom * 10});\n  position: absolute;\n  left: 0;\n  right: 0;\n`;\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  max-height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: space-between;\n`;\n\nconst Grid = styled.div`\n  z-index: 100;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: flex-start;\n`;\n\ntype SizeProp = {\n  size: number;\n  fog: boolean;\n  isHost: boolean;\n};\nconst GridCell = styled.div<SizeProp>`\n  flex: 1 1;\n  min-width: calc(${({ size }) => size}px + 1px);\n  max-width: calc(${({ size }) => size}px + 1px);\n  min-height: calc(${({ size }) => size}px + 1px);\n  max-height: calc(${({ size }) => size}px + 1px);\n  margin-left: -1px;\n  margin-top: -1px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: relative;\n  box-sizing: border-box;\n  ${({ fog, isHost }) =>\n    fog ? (isHost ? \"background-color: rgba(0,0,0,0.5);\" : \"background-color: rgba(0,0,0,1);\") : \"\"}\n`;\n\ninterface $ImageProps {\n  index: number;\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  isHost: boolean;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({\n  index,\n  dragOver,\n  drag,\n  pic,\n  size,\n  showName,\n  player,\n  isDead,\n  isCurrent,\n  isHost,\n}: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      zIndex: 200,\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {isHost && player.isMonster && <Tooltip>{index}</Tooltip>}\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} style={{ color: \"white\" }} />}\n      </ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} />}\n        {showName ? `${player.name.split(\"|\")[0]} ${index}` : `??? ${index}`}\n      </ImageElm>\n    );\n  }\n};\n\nconst Tooltip = styled.div`\n  display: none;\n  position: absolute;\n  top: -35px;\n  left: 0;\n  right: 0;\n  text-align: center;\n  white-space: nowrap;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  transition: 0.3s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.main.highlight} transparent transparent transparent;\n  }\n`;\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n\n  &:hover ${Tooltip} {\n    display: inline;\n  }\n`;\n\nconst Empty = styled.div``;\n","import { faArrowAltCircleRight, faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\n\nconst EncounterRoom = () => {\n  let history = useHistory();\n  const [encounter, onEdit] = useState<Encounter>();\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [initTracker, showInitTracker] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter?.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          if (JSON.stringify(encounter.players) !== JSON.stringify(newPlayers))\n            onEdit({\n              ...encounter,\n              players: newPlayers,\n            });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  return (\n    <>\n      <P2PEncounter encounter={encounter} onEdit={onEdit} isHost={false} />\n      <CenterWrapper>\n        <View mode={0} show={initTracker}>\n          <ScrollWrapper>\n            <Name>\n              <b>{encounter?.name}</b>\n            </Name>\n            <PropWrapper>\n              <PropElm>\n                <PropTitle>Round: </PropTitle>\n                {encounter?.roundCounter}\n              </PropElm>\n            </PropWrapper>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Init</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {encounter &&\n                  players\n                    .sort((a: Player, b: Player) => {\n                      if (b.init === a.init || !encounter.isPlaying) {\n                        return a.name.localeCompare(b.name);\n                      }\n                      return b.init - a.init;\n                    })\n                    .filter((a) => !a.isVisible)\n                    .map((player: Player, index: number) => {\n                      return (\n                        <Row\n                          current={encounter.currentInit === index && encounter.isPlaying}\n                          isDead={player.currentHp <= 0}\n                          key={index}\n                        >\n                          <PropField>\n                            <TinyNumberField value={player.init} onChange={() => undefined} />\n                          </PropField>\n                          <Prop>\n                            {player.pic !== \"\" && player.pic !== undefined ? (\n                              <PlayerImage player={player}></PlayerImage>\n                            ) : (\n                              <></>\n                            )}\n                            {player.isMonster && <MainLink>{\"???\"}</MainLink>}\n                            {!player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                              >\n                                {player.name}\n                              </MainLink>\n                            )}\n                          </Prop>\n                        </Row>\n                      );\n                    })}\n              </tbody>\n            </Table>\n          </ScrollWrapper>\n          <MoveButton onClick={() => showInitTracker((i) => !i)}>\n            <FontAwesomeIcon icon={initTracker ? faArrowAltCircleRight : faArrowAltCircleLeft} />\n          </MoveButton>\n        </View>\n        {encounter && (\n          <Board\n            isHost={false}\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={false}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            fogBoard={encounter.board}\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={() => {}}\n            onChangeBoard={() => {}}\n            img={getMap()}\n          />\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterRoom;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode: number;\n  show: boolean;\n};\n\nconst View = styled.div<viewType>`\n  position: fixed;\n  top: 120px;\n  ${(props) => {\n    if (!props.show) {\n      return \"left: 100px;\";\n    } else {\n      if (!props.mode) {\n        return \"left: -360px;\";\n      } else {\n        return \"left: -510px;\";\n      }\n    }\n  }}\n  transition: left 0.5s;\n  z-index: 500;\n\n  height: calc(100vh - 140px);\n  overflow-x: visible;\n\n  color: ${({ theme }) => theme.tile.color};\n  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  font-size: 16px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"width: 450px;\";\n    } else {\n      return \"width: 600px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    width: 100%;\n  }\n`;\n\nconst ScrollWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  position: absolute;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  z-index: 500;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n  display: table-cell;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n\nconst MoveButton = styled.div`\n  position: absolute;\n  top: 40vh;\n  right: -40px;\n  z-index: 400;\n\n  height: 40px;\n  width: 40px;\n  text-align: center;\n  line-height: 40px;\n  transform: rotate(45deg);\n  cursor: pointer;\n\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  color: ${({ theme }) => theme.buttons.color};\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n"],"sourceRoot":""}