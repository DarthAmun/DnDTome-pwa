{"version":3,"sources":["data/chars/ClassSet.tsx","data/Monster.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","data/encounter/Encounter.tsx","data/encounter/Player.tsx","data/encounter/BuildEncounter.tsx","data/encounter/BuildPlayer.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","services/DiceService.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/form_elements/NumberField.tsx","components/form_elements/AutoStringField.tsx"],"names":["ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","undefined","levelCheck","subclasseCheck","Monster","id","name","sources","pic","size","type","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","nameCheck","picCheck","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","campaign","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","campaignCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","Encounter","enemies","players","isPlaying","currentInit","roundCounter","map","dimension","width","height","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","currentInitCheck","roundCounterCheck","Player","tempHp","initBonus","tag","cord","BuildEncounter","encounter","characters","difficulty","calcExp","easy","medium","hard","deadly","BuildPlayer","entity","buildEncounter","a","console","time","characterList","enemyList","forEach","push","buildPlayer","enemy","Promise","all","timeEnd","filter","char","sort","b","calcDifficulty","recivePromiseByAttribute","newPlayer","crExpTable","exp","expTable","length","enemyExp","crExp","EncounterEditView","onEdit","useState","setDifficulty","expArray","setExpArray","useEffect","onChangeEnemyField","field","newEnemy","oldEnemy","i","onChangePlayerField","oldPlayer","CenterWrapper","View","StringField","value","label","onChange","AutoStringField","optionTable","newMap","PropWrapper","Prop","PropTitle","CharView","index","Container","key","newMonster","reciveByAttribute","result","onChangeEnemy","NumberField","IconButton","icon","faTrash","onClick","newEnemyList","splice","removeEnemy","TextButton","text","faPlus","addNewEnemy","classSet","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","styled","div","theme","tile","color","backgroundColor","main","highlight","span","backgroundColorLink","rollDie","max","Math","round","random","TinyNumberField","showMax","Field","Input","e","target","Max","input","Board","img","currentPlayerNumber","onChangePlayers","onChangeDimension","dragItem","setDragItem","makeDrag","makeDrop","useCallback","makeRow","row","list","j","updatePlayers","makeBoard","BoardRow","BoardWrapper","BoardBar","BoardContainer","BoardLayer","MapLayer","src","PlayerSlot","drag","log","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isDead","isCurrent","Empty","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","EncounterView","history","useHistory","loadedEncounter","setLoadedEncounter","loading","isLoading","then","newField","finishEncounter","newEnemies","Name","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","Row","current","PropField","MainLink","faSkullCrossbones","PlayerImage","table","tr","props","td","EncounterDetail","isNew","editMode","setMode","encounterObj","editEncounter","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","updateWithCallback","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","toString","Icon","faExclamationTriangle","faSave","encounterId","remove","Message","editAndSaveEncounter","FontAwesomeIcon","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","button","hoverColor","placeholder","LabelText","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","useItem","effect","setEffect","reducer","state","data","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Back","ToggleLeft","ToggleRight","EditToggle","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllPromise","o","concat","reciveAll","onSearch","searchTerm","newOptions","option","includes","Options","opt","Option"],"mappings":"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","file":"static/js/13.a93fbe5a.chunk.js","sourcesContent":["export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  dimension: { width: number; height: number; size: number };\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    dimension?: { width: number; height: number; size: number }\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20 };\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    currentInitCheck &&\n    roundCounterCheck\n  );\n}\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n  cord: number[];\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number,\n    cord?: number[]\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n    this.cord = cord || [0,0];\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import BuildPlayer from \"./BuildPlayer\";\nimport Encounter from \"./Encounter\";\n\nexport default class BuildEncounter {\n  encounter: Encounter;\n  characters: BuildPlayer[];\n  enemies: BuildPlayer[];\n  players: BuildPlayer[];\n  difficulty: {\n    difficulty: string;\n    calcExp: {\n      easy: number;\n      medium: number;\n      hard: number;\n      deadly: number;\n    };\n  };\n\n  constructor(\n    encounter?: Encounter,\n    characters?: BuildPlayer[],\n    enemies?: BuildPlayer[],\n    players?: BuildPlayer[],\n    difficulty?: {\n      difficulty: string;\n      calcExp: {\n        easy: number;\n        medium: number;\n        hard: number;\n        deadly: number;\n      };\n    }\n  ) {\n    this.encounter = encounter || new Encounter();\n    this.characters = characters || [];\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.difficulty = difficulty || {\n      difficulty: \"\",\n      calcExp: {\n        easy: 0,\n        medium: 0,\n        hard: 0,\n        deadly: 0,\n      },\n    };\n  }\n}\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Player from \"./Player\";\n\nexport default class BuildPlayer {\n  player: Player;\n  entity: Char | Monster;\n\n  constructor(player?: Player, entity?: Char | Monster) {\n    this.player = player || new Player();\n    this.entity = entity || new Monster();\n  }\n}\n","import BuildEncounter from \"../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../data/encounter/BuildPlayer\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildEncounter = async (encounter: Encounter): Promise<BuildEncounter> => {\n  console.time(\"t\");\n  let characters: BuildPlayer[];\n  let enemies: BuildPlayer[];\n\n  console.time(\"load\");\n  let characterList: Promise<BuildPlayer>[] = [];\n  let enemyList: Promise<BuildPlayer>[] = [];\n\n  encounter.players.forEach((player: Player) => {\n    characterList.push(buildPlayer(player));\n  });\n  encounter.enemies.forEach((enemy: Player) => {\n    enemyList.push(buildPlayer(enemy));\n  });\n  characters = await Promise.all(characterList);\n  enemies = await Promise.all(enemyList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  enemies = enemies.filter((enemy) => enemy !== undefined);\n  const players = [...characters, ...enemies].sort((a: BuildPlayer, b: BuildPlayer) =>\n    a.player.init < b.player.init ? 1 : -1\n  );\n\n  const difficulty = calcDifficulty(encounter);\n\n  console.timeEnd(\"t\");\n  return new BuildEncounter(encounter, characters, enemies, players, difficulty);\n};\n\nexport const buildPlayer = async (player: Player): Promise<BuildPlayer> => {\n  let newPlayer: any;\n\n  if (player.isMonster) newPlayer = await recivePromiseByAttribute(\"monsters\", \"name\", player.name);\n  else newPlayer = await recivePromiseByAttribute(\"chars\", \"name\", player.name);\n\n  return new BuildPlayer(player, newPlayer);\n};\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { reciveByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"locations\"}\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangePlayerField(\"level\", level, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BuildPlayer from \"../../../data/encounter/BuildPlayer\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: BuildPlayer[];\n  dimension: { width: number; height: number; size: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: BuildPlayer[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [dragItem, setDragItem] = useState<BuildPlayer>();\n\n  const makeDrag = (player: BuildPlayer) => {\n    setDragItem(player);\n  };\n\n  const makeDrop = useCallback((): BuildPlayer | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            players={players}\n            size={dimension.size}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension.width, dimension.size, players, onChangePlayers, currentPlayerNumber, makeDrop]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    return list;\n  }, [dimension, makeRow]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.width}\n          label=\"Width Count\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Height Count\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{makeBoard()}</BoardLayer>\n        <MapLayer src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  cord: number[];\n  currentPlayerNumber: number;\n  players: BuildPlayer[];\n  makeDrop: () => BuildPlayer | undefined;\n  makeDrag: (player: BuildPlayer) => void;\n  updatePlayers: (players: BuildPlayer[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  cord,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: BuildPlayer[] = players.map((player: BuildPlayer) => {\n      if (player === changedPlayer) {\n        return { ...player, player: { ...player.player, cord: cord } };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: BuildPlayer) => {\n    console.log(\"drag\", player.player.name, player.player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback((size: number, player: BuildPlayer): number => {\n    if (player.player.isMonster) {\n      const monster = player.entity as Monster;\n      switch (monster.size) {\n        case \"gargantuan\":\n          return size * 4;\n        case \"huge\":\n          return size * 3;\n        case \"large\":\n          return size * 2;\n      }\n    }\n    return size;\n  }, []);\n\n  return (\n    <Slot size={size} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: BuildPlayer, index: number) => {\n        if (\n          (playerIcon.player.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.player.cord !== undefined &&\n            playerIcon.player.cord[0] === cord[0] &&\n            playerIcon.player.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              dragOver={dragOver}\n              pic={playerIcon.entity.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.player.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1;\n  padding: 5px;\n  margin: 5px;\n  position: relative;\n  max-width: calc(100% - 130px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 auto;\n  position: relative;\n\n  max-width: max-content;\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MapLayer = styled.img`\n  width: auto;\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: BuildPlayer;\n  drag: (e: any, player: BuildPlayer) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, player, isDead, isCurrent }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: size - 6 + \"px\",\n    width: size - 6 + \"px\",\n    opacity: isDead ? \"0.5\" : \"1\",\n    border: isCurrent ? \"\" : \"none\",\n  };\n\n  if (pic !== \"\") {\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n`;\n\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport BuildPlayer from \"../../../../data/encounter/BuildPlayer\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { buildEncounter } from \"../../../../services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport BuildEncounter from \"../../../../data/encounter/BuildEncounter\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loadedEncounter, setLoadedEncounter] = useState<BuildEncounter>(new BuildEncounter());\n  const [loading, isLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    buildEncounter(encounter).then((buildEncounter) => {\n      setLoadedEncounter(buildEncounter);\n      isLoading(false);\n    });\n  }, [encounter, setLoadedEncounter]);\n\n  const onChangePlayerField = (field: string, newField: string | number, oldPlayer: Player) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = loadedEncounter.encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = loadedEncounter.encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % loadedEncounter.players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % loadedEncounter.players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (loadedEncounter.players[nextInit].player.currentHp <= 0) {\n      if ((nextInit + 1) % loadedEncounter.players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % loadedEncounter.players.length;\n      counter++;\n      if (counter > loadedEncounter.players.length) {\n        break;\n      }\n    }\n    if (counter > loadedEncounter.players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  const onChangeDimension = (dimension: { width: number; height: number; size: number }) => {\n    onEdit({ ...loadedEncounter.encounter, dimension: dimension });\n  };\n\n  const onChangePlayers = (players: BuildPlayer[]) => {\n    if (players !== loadedEncounter.players) {\n      let newPlayers: Player[] = [];\n      players.forEach((player: BuildPlayer) => {\n        if (!player.player.isMonster) {\n          newPlayers.push(player.player);\n        }\n      });\n      let newEnemies: Player[] = [];\n      players.forEach((player: BuildPlayer) => {\n        if (player.player.isMonster) {\n          newEnemies.push(player.player);\n        }\n      });\n\n      onEdit({ ...loadedEncounter.encounter, players: newPlayers, enemies: newEnemies });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {loadedEncounter.difficulty.difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {loadedEncounter.players.map((buildPlayer: BuildPlayer, index: number) => {\n                return (\n                  <Row\n                    current={encounter.currentInit === index && encounter.isPlaying}\n                    isDead={buildPlayer.player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={buildPlayer.player.init}\n                        onChange={(init) => onChangePlayerField(\"init\", init, buildPlayer.player)}\n                      />\n                    </PropField>\n                    <Prop>\n                      {buildPlayer.entity.pic !== \"\" && buildPlayer.entity.pic !== undefined ? (\n                        <PlayerImage player={buildPlayer}></PlayerImage>\n                      ) : (\n                        <></>\n                      )}\n                      {buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {buildPlayer.player.name}\n                        </MainLink>\n                      )}\n                      {!buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {buildPlayer.player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={buildPlayer.player.currentHp}\n                        max={buildPlayer.player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, buildPlayer.player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{buildPlayer.player.hp}</Prop>\n                    <Prop>{buildPlayer.player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {buildPlayer.player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(buildPlayer.player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n      {loadedEncounter && encounter.map !== \"\" && encounter.map !== undefined && (\n        <Board\n          onChangePlayers={onChangePlayers}\n          players={loadedEncounter.players}\n          dimension={\n            encounter.dimension !== undefined\n              ? encounter.dimension\n              : { width: 20, height: 20, size: 20 }\n          }\n          currentPlayerNumber={loadedEncounter.encounter.currentInit}\n          onChangeDimension={onChangeDimension}\n          img={encounter.map}\n        ></Board>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\ninterface $PlayerImageProps {\n  player: BuildPlayer;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.entity.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateEncounter(\"encounters\", encounterObj)} icon={faSave} />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView encounter={encounterObj} onEdit={(value) => editAndSaveEncounter(value)} />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 120px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}