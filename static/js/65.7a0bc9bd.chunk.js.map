{"version":3,"sources":["components/entities/subraces/details/SubraceView.tsx","components/entities/subraces/details/SubraceEditView.tsx","components/entities/subraces/details/SubraceDetail.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/entities/subraces/details/link_wrapper/IdToSubrace.tsx"],"names":["SubraceView","subrace","useState","send","setSend","CenterWrapper","View","Name","name","PropWrapper","Prop","abilityScores","PropTitle","type","Icon","icon","faLink","sources","traits","map","trait","index","TraitWrapper","key","TraitName","TraitLevel","level","TraitText","FormatedText","text","TextButton","faPaperPlane","onClick","P2PSender","data","mode","styled","div","theme","tile","color","backgroundColor","main","highlight","span","backgroundColorLink","FontAwesomeIcon","SubraceEditView","onEdit","onTraitChange","oldTrait","field","value","StringField","label","onChange","TraitView","IconButton","faTrash","indexOf","splice","removeTrait","faPlus","NumberField","ShortTextField","SubraceDetail","isNew","editMode","setMode","subraceObj","editSubrace","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","useEffect","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","id","goBack","abortText","abortClick","TopBar","BackButton","faArrowLeft","action","toString","title","tableName","updateWithCallback","result","setTimeout","updateSubclass","faSave","Message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","IdToSubrace","match","db","MyAppDatabase","useItem","subraces","params","loading","error","undefined"],"mappings":"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","file":"static/js/65.7a0bc9bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../data/races/Subrace\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  subrace: Subrace;\n  isNew: boolean;\n}\n\nconst SubraceDetail = ({ subrace, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj, subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subrace.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subraces\", subrace.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateSubclass(\"subraces\", subraceObj)} icon={faSave} />\n            <IconButton onClick={() => deleteSubrace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default IdToSubrace;\n"],"sourceRoot":""}