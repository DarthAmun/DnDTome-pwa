{"version":3,"sources":["data/Spell.tsx","components/entities/spells/details/link_wrapper/NameToSpell.tsx","components/general_elements/ErrorTile.tsx"],"names":["Spell","name","classes","sources","level","school","time","range","components","duration","ritual","text","id","filename","pic","this","isSpell","arg","nameCheck","undefined","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","NameToSpell","match","history","useHistory","db","MyAppDatabase","useItemByAttr","spells","params","spell","loading","error","buttonText","onButton","newSpell","createNewWithId","push","createNewSpell","isNew","ErrorTile","Tile","PropWrapper","Name","Text","PropTitle","onClick","icon","faPlusCircle","styled","div","theme","tile","color","backgroundColor","boxShadow","headerColor","span","backgroundColorLink"],"mappings":"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","file":"static/js/73.2639c488.chunk.js","sourcesContent":["import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport SpellDetail from \"../SpellDetail\";\nimport Spell from \"../../../../../data/Spell\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(db.spells, \"name\", match.params.name);\n\n  const createNewSpell = () => {\n    let newSpell = new Spell(match.params.name);\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && spell === undefined && (\n        <ErrorTile\n          text={\"No such spell exists. Want to creat such spell?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewSpell()}\n        />\n      )}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default NameToSpell;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n"],"sourceRoot":""}