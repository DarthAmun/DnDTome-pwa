{"version":3,"sources":["components/entities/worlds/details/link_wrapper/NameToWorld.tsx","components/general_elements/ErrorTile.tsx"],"names":["NameToWorld","match","history","useHistory","db","MyAppDatabase","useItemByAttr","worlds","params","name","world","loading","error","undefined","text","buttonText","onButton","newWorld","World","id","createNewWithId","push","createNewWorld","isNew","ErrorTile","Tile","PropWrapper","Name","Text","PropTitle","onClick","icon","faPlusCircle","styled","div","theme","tile","color","backgroundColor","boxShadow","headerColor","span","backgroundColorLink"],"mappings":"yMA6CeA,UAjCK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACjBC,EAAUC,cACRC,EAAK,IAAIC,IAFgD,EAG/BC,YAAcF,EAAGG,OAAQ,OAAQN,EAAMO,OAAOC,MAHf,mBAGxDC,EAHwD,KAGjDC,EAHiD,KAGxCC,EAHwC,KAa/D,OACE,qCACIA,GAASD,GAAW,kBAAC,IAAD,MACrBC,IAAUD,GAAW,sDACpBC,IAAUD,QAAqBE,IAAVH,GACrB,kBAAC,IAAD,CACEI,KAAM,kDACNC,WAAY,MACZC,SAAU,kBAhBK,WACrB,IAAIC,EAAW,IAAIC,IAAM,EAAGjB,EAAMO,OAAOC,aAClCQ,EAASE,GAChBC,YAAgB,SAAUH,GAAU,SAACE,GACnCjB,EAAQmB,KAAR,2BAAiCF,OAYbG,MAGlBV,GAAUD,QAAqBE,IAAVH,EAGrB,GAFA,kBAAC,IAAD,CAAaA,MAAOA,EAAOa,MAAsB,KAAfb,EAAMD,U,swCCRjCe,IAjBG,SAAC,GAA4C,IAA1CV,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SACrC,OACE,kBAACS,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kDAEF,kBAACC,EAAD,KACE,kBAACC,EAAD,eACCf,GAEH,kBAAC,IAAD,CAAYA,KAAMC,EAAYe,QAAS,kBAAMd,KAAYe,KAAMC,SAQvE,IAAMP,EAAOQ,IAAOC,IAAV,KAEC,qBAAGC,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAUpCZ,EAAOM,IAAOC,IAAV,KAOC,qBAAGC,MAAkBC,KAAKI,eAK/Bd,EAAcO,IAAOC,IAAV,KASXL,EAAYI,IAAOQ,KAAV,KAEJ,qBAAGN,MAAkBC,KAAKM,uBAK/Bd,EAAOK,IAAOC,IAAV,KAQY,qBAAGC,MAAkBC,KAAKE","file":"static/js/76.cc5192ce.chunk.js","sourcesContent":["import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport World from \"../../../../../data/world/World\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport WorldDetail from \"../WorldDetail\";\n\ntype TParams = { name: string };\n\nconst NameToWorld = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [world, loading, error] = useItemByAttr(db.worlds, \"name\", match.params.name);\n\n  const createNewWorld = () => {\n    let newWorld = new World(0, match.params.name);\n    delete newWorld.id;\n    createNewWithId(\"worlds\", newWorld, (id) => {\n      history.push(`/world-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && world === undefined && (\n        <ErrorTile\n          text={\"No such world exists. Want to creat such world?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewWorld()}\n        />\n      )}\n      {!error && !loading && world !== undefined ? (\n        <WorldDetail world={world} isNew={world.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToWorld;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n"],"sourceRoot":""}