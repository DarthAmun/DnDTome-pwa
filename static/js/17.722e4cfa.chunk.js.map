{"version":3,"sources":["services/PeerIdService.tsx","../node_modules/peerjs/dist sync","components/p2p/P2PEncounter.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterRoom.tsx","components/form_elements/NumberField.tsx"],"names":["generateBrokerId","min","max","password","characters","i","length","Math","floor","random","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","P2PEncounter","encounter","isHost","onEdit","useState","peerId","setId","peer","setPeer","error","setError","connections","setConn","isChanged","setChanged","useEffect","undefined","brokerId","newPeer","Peer","host","secure","on","conn","con","send","JSON","stringify","errorData","data","parse","filter","connect","forEach","value","label","onChange","style","minWidth","float","Icon","icon","faExclamationCircle","styled","FontAwesomeIcon","theme","main","highlight","TinyNumberField","showMax","Field","Input","type","target","Max","tile","color","backgroundColor","input","span","Board","img","players","showName","dimension","fogBoard","currentPlayerNumber","onChangePlayers","onChangeDimension","onChangeBoard","dragItem","setDragItem","currentFogBoard","setFogBoard","fog","setFog","makeDrag","useCallback","player","makeDrop","toggleFog","cord","newBoard","console","log","makeFog","f","BoardWrapper","BoardBar","zoom","step","width","height","size","onClick","toggle","faFill","BoardContainer","LayerWrapper","Grid","map","slot","PlayerSlot","updatePlayers","MapLayer","src","drag","name","dragOver","preventDefault","defineSize","isMonster","GridCell","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","index","isVisible","Empty","Image","pic","isDead","currentHp","isCurrent","div","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","zIndex","ImageElm","onDragStart","draggable","Tooltip","faEyeSlash","padding","fontSize","EncounterRoom","history","useHistory","setPlayers","enemies","isEnemy","push","getMap","mapBase64","CenterWrapper","View","mode","Name","PropWrapper","PropElm","PropTitle","roundCounter","Table","sort","a","b","init","isPlaying","localeCompare","Row","current","currentInit","PropField","Prop","PlayerImage","MainLink","board","table","props","tr","td","backgroundColorLink","NumberField","transform","LabelText"],"mappings":"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","file":"static/js/17.722e4cfa.chunk.js","sourcesContent":["const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 259;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(JSON.parse(data));\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(JSON.parse(data));\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import { faEyeSlash, faFill } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Slot from \"../../../data/encounter/Slot\";\nimport Player from \"../../../data/encounter/Player\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  isHost: boolean;\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  fogBoard: Slot[];\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n  onChangeBoard: (fogBoard: Slot[]) => void;\n}\n\nconst Board = ({\n  isHost,\n  img,\n  players,\n  showName,\n  dimension,\n  fogBoard,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n  onChangeBoard,\n}: $Props) => {\n  const [dragItem, setDragItem] = useState<Player>();\n  const [currentFogBoard, setFogBoard] = useState<Slot[]>(fogBoard);\n  const [fog, setFog] = useState<boolean>(false);\n\n  useEffect(() => {\n    setFogBoard(fogBoard);\n  }, [fogBoard]);\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const toggleFog = useCallback(\n    (cord: number) => {\n      if (fog) {\n        let newBoard = [...currentFogBoard];\n        newBoard[cord].fog = !newBoard[cord].fog;\n        console.log(\"toggle fog\", currentFogBoard[cord], newBoard[cord]);\n        setFogBoard(newBoard);\n      }\n    },\n    [setFogBoard, fog, currentFogBoard]\n  );\n\n  const makeFog = useCallback(() => {\n    setFog((f) => !f);\n    if (fog) {\n      console.log(\"push board\");\n      onChangeBoard(currentFogBoard);\n    }\n  }, [fog, currentFogBoard, onChangeBoard]);\n\n  return (\n    <BoardWrapper>\n      {isHost && (\n        <BoardBar>\n          <NumberField\n            value={dimension.zoom}\n            label=\"Zoom\"\n            step={10}\n            onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n          />\n          <NumberField\n            value={dimension.width}\n            label=\"Horizontal\"\n            onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n          />\n          <NumberField\n            value={dimension.height}\n            label=\"Vertical\"\n            onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n          />\n          <NumberField\n            value={dimension.size}\n            label=\"Size\"\n            onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n          />\n          <IconButton onClick={makeFog} toggle={fog} icon={faFill} />\n        </BoardBar>\n      )}\n      <BoardContainer>\n        <LayerWrapper zoom={dimension.zoom / 100}>\n          <Grid>\n            {fogBoard?.map((slot: Slot, i: number) => {\n              return (\n                <PlayerSlot\n                  isHost={isHost}\n                  key={i}\n                  cord={i}\n                  showName={showName}\n                  players={players}\n                  size={dimension.size}\n                  zoom={dimension.zoom / 100}\n                  fog={slot.fog}\n                  makeDrop={makeDrop}\n                  makeDrag={makeDrag}\n                  toggleFog={toggleFog}\n                  updatePlayers={onChangePlayers}\n                  currentPlayerNumber={currentPlayerNumber}\n                />\n              );\n            })}\n          </Grid>\n          <MapLayer zoom={dimension.zoom / 100} src={img} />\n        </LayerWrapper>\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  isHost: boolean;\n  size: number;\n  zoom: number;\n  cord: number;\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  fog: boolean;\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  toggleFog: (cord: number) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  isHost,\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  fog,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  toggleFog,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    console.log(\"update Players\");\n    updatePlayers(newPlayers);\n  };\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <GridCell\n      size={size * zoom}\n      fog={fog}\n      onDrop={(e) => drop(e, cord)}\n      isHost={isHost}\n      onDragOver={dragOver}\n      onClick={() => toggleFog(cord)}\n    >\n      {players.map((playerIcon: Player, index: number) => {\n        if ((!playerIcon.isVisible || isHost) && playerIcon.cord === cord)\n          return (\n            <Image\n              key={\"icon\" + index}\n              index={index}\n              drag={drag}\n              player={playerIcon}\n              isHost={isHost}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </GridCell>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1;\n  padding: 5px;\n  margin: 5px;\n  min-height: 75vh;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: no-wrap;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\nconst LayerWrapper = styled.div<ZoomProp>`\n  width: calc(100px * ${({ zoom }) => zoom * 10});\n  position: absolute;\n  left: 0;\n  right: 0;\n`;\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  max-height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: space-between;\n`;\n\nconst Grid = styled.div`\n  z-index: 100;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: flex-start;\n`;\n\ntype SizeProp = {\n  size: number;\n  fog: boolean;\n  isHost: boolean;\n};\nconst GridCell = styled.div<SizeProp>`\n  flex: 1 1;\n  min-width: calc(${({ size }) => size}px + 1px);\n  max-width: calc(${({ size }) => size}px + 1px);\n  min-height: calc(${({ size }) => size}px + 1px);\n  max-height: calc(${({ size }) => size}px + 1px);\n  margin-left: -1px;\n  margin-top: -1px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: relative;\n  box-sizing: border-box;\n  ${({ fog, isHost }) =>\n    fog ? (isHost ? \"background-color: rgba(0,0,0,0.5);\" : \"background-color: rgba(0,0,0,1);\") : \"\"}\n`;\n\ninterface $ImageProps {\n  index: number;\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  isHost: boolean;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({\n  index,\n  dragOver,\n  drag,\n  pic,\n  size,\n  showName,\n  player,\n  isDead,\n  isCurrent,\n  isHost,\n}: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      zIndex: 200,\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {isHost && player.isMonster && <Tooltip>{index}</Tooltip>}\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} style={{ color: \"white\" }} />}\n      </ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} />}\n        {showName ? `${player.name} ${index}` : `??? ${index}`}\n      </ImageElm>\n    );\n  }\n};\n\nconst Tooltip = styled.div`\n  display: none;\n  position: absolute;\n  top: -35px;\n  left: 0;\n  right: 0;\n  text-align: center;\n  white-space: nowrap;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  transition: 0.3s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.main.highlight} transparent transparent transparent;\n  }\n`;\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n\n  &:hover ${Tooltip} {\n    display: inline;\n  }\n`;\n\nconst Empty = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\n\nconst EncounterRoom = () => {\n  let history = useHistory();\n  const [encounter, onEdit] = useState<Encounter>();\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter?.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          if (JSON.stringify(encounter.players) !== JSON.stringify(newPlayers))\n            onEdit({\n              ...encounter,\n              players: newPlayers,\n            });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  return (\n    <>\n      <P2PEncounter encounter={encounter} onEdit={onEdit} isHost={false} />\n      <CenterWrapper>\n        <View mode={0}>\n          <Name>\n            <b>{encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.roundCounter}\n            </PropElm>\n          </PropWrapper>\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {encounter &&\n                players\n                  .sort((a: Player, b: Player) => {\n                    if (b.init === a.init || !encounter.isPlaying) {\n                      return a.name.localeCompare(b.name);\n                    }\n                    return b.init - a.init;\n                  })\n                  .filter((a) => !a.isVisible)\n                  .map((player: Player, index: number) => {\n                    return (\n                      <Row\n                        current={encounter.currentInit === index && encounter.isPlaying}\n                        isDead={player.currentHp <= 0}\n                        key={index}\n                      >\n                        <PropField>\n                          <TinyNumberField value={player.init} onChange={() => undefined} />\n                        </PropField>\n                        <Prop>\n                          {player.pic !== \"\" && player.pic !== undefined ? (\n                            <PlayerImage player={player}></PlayerImage>\n                          ) : (\n                            <></>\n                          )}\n                          {player.isMonster && <MainLink>{\"???\"}</MainLink>}\n                          {!player.isMonster && (\n                            <MainLink\n                              onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                            >\n                              {player.name}\n                            </MainLink>\n                          )}\n                        </Prop>\n                      </Row>\n                    );\n                  })}\n            </tbody>\n          </Table>\n        </View>\n        {encounter && (\n          <Board\n            isHost={false}\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={false}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            fogBoard={encounter.board}\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={() => {}}\n            onChangeBoard={() => {}}\n            img={getMap()}\n          />\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterRoom;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 400px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 400px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}