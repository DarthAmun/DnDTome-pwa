{"version":3,"sources":["services/ThemeService.js","assets/img/dice_icon_grey.png","components/spell/Spell.js","database/SpellService.js","database/MyDatabase.ts","components/spell/SpellOverview.js","components/Home.js","components/Options.js","components/add/AddSpell.js","components/LeftNav.js","assets/img/backpack.png","assets/img/orc-head.png","assets/img/sword-clash.png","components/spell/SpellView.js","components/RightNav.js","App.js","serviceWorker.js","index.js"],"names":["currentTheme","lightTheme","darkTheme","module","exports","applyTheme","nextTheme","themeClass","Object","keys","map","key","value","document","documentElement","style","setProperty","setTheme","theme","getTheme","Spell","props","backgroundImage","spell","pic","icon","backgroundPosition","backgroundSize","backgroundRepeat","className","animationDelay","delay","onClick","school","level","hasRitual","ritual","toLowerCase","includes","hasConcentration","duration","name","split","formatTime","time","search","replace","formatDuration","range","words","length","formatComponents","components","db","spells","version","stores","table","Dexie","reciveSpells","step","start","query","callback","console","log","open","then","orderBy","offset","limit","toArray","array","finally","close","SpellOverview","useState","currentSpellList","setCurrentSpellList","useRef","isFetching","setIsFetching","setStart","receiveSpellsResult","result","newList","concat","ReactDOM","useEffect","fetchMoreListItems","current","scrollHeight","clientHeight","count","id","onScroll","Math","round","offsetHeight","scrollTop","ref","index","to","faPlus","Home","history","useHistory","setTimeout","push","params","faDiceD20","width","height","r","cx","cy","stopColor","fileReader","Options","percent","now","full","spellsImported","importing","handleFileRead","e","content","spellsJson","JSON","parse","put","spell_name","classes","spell_classes","sources","spell_sources","spell_level","spell_school","spell_time","spell_range","spell_components","spell_duration","spell_ritual","text","spell_text","spell_pic","faPatreon","faDiscord","ThemeService","faPalette","type","onChange","Array","from","target","files","forEach","file","i","FileReader","onloadend","readAsText","clear","faTrashAlt","display","strokeWidth","trailWidth","strokeColor","AddSpell","setName","setSchool","setLevel","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","checked","faSave","LeftNav","top","this","location","pathname","faMeteor","bottom","faCog","Component","withRouter","SpellView","setId","setPic","spell_id","timeEnd","placeholder","float","RightNav","shortWindows","setShortWindows","activeView","setActiveView","showView","setShowView","showActiveView","window","removeView","windows","wins","filter","windowType","faTimesCircle","item","item_pic","item_name","gear","gear_pic","gear_name","monster","monster_pic","monster_name","race","race_pic","race_name","char","char_pic","char_name","PageLayout","children","packageJson","HomeLayout","LayoutRoute","component","Layout","layout","rest","render","App","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.50ed9829.chunk.js","sourcesContent":["let currentTheme = \"\";\r\n\r\nconst lightTheme = {\r\n    \"--app-background-color\": \"rgb(248, 248, 248)\",\r\n    \"--scrollbar-thumb\": \"#8000ff\",\r\n    \"--scrollbar\": \"rgba(92, 102, 130, 1)\",\r\n    \"--boxshadow\": \"0px 0px 10px 0px rgba(172, 172, 172, 0.2)\",\r\n    \"--boxshadow-hover\": \"0px 0px 10px 0px rgba(172, 172, 172, 1)\",\r\n    \"--character-add-color\": \"dimgrey\",\r\n    \"--character-add-background-color\": \"white\",\r\n    \"--card-color\": \"darkgrey\",\r\n    \"--card-title-color\": \"dimgray\",\r\n    \"--card-background-color\": \"white\",\r\n    \"--boxshadow-inset\": \"inset 0px 0px 10px -2px rgba(0, 0, 0, 0.1)\",\r\n    \"--card-seperator-line\": \"1px dashed lightgray\",\r\n    \"--button-color\": \"white\",\r\n    \"--button-background-color\": \"#8000ff\",\r\n    \"--button-boxshadow\": \"0px 0px 2px 0px rgba(0, 0, 0, 0.75)\",\r\n    \"--pagination-input-height\": \"28px\",\r\n    \"--pagination-input-border\": \"1px solid lightgray\",\r\n    \"--pagination-input-boxshadow\": \"none\",\r\n    \"--pagination-input-background-color\": \"white\",\r\n    \"--pagination-input-color\": \"inherit\",\r\n    \"--gradient\": \"linear-gradient(180deg, rgba(59,37,80,1) 0%, rgba(102,71,159,1) 100%)\",\r\n    \"--notification-color\": \"#8000ff\",\r\n};\r\nconst darkTheme = {\r\n    \"--app-background-color\": \"#1f2532\",\r\n    \"--scrollbar-thumb\": \"#8000ff\",\r\n    \"--scrollbar\": \"rgba(0, 0, 0, 0.425)\",\r\n    \"--boxshadow\": \"0px 0px 10px 0px rgba(0,0,0, 0.2)\",\r\n    \"--boxshadow-hover\": \"0px 0px 10px 0px rgba(0, 0, 0, 0.7)\",\r\n    \"--character-add-color\": \"lightslategray\",\r\n    \"--character-add-background-color\": \"#333d51\",\r\n    \"--card-color\": \"lightslategray\",\r\n    \"--card-title-color\": \"darkgrey\",\r\n    \"--card-background-color\": \"#333d51\",\r\n    \"--boxshadow-inset\": \"inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4)\",\r\n    \"--card-seperator-line\": \"1px dashed dimgray\",\r\n    \"--button-color\": \"#cfc8d8\",\r\n    \"--button-background-color\": \"#522a82\",\r\n    \"--pagination-input-height\": \"30px\",\r\n    \"--pagination-input-border\": \"none\",\r\n    \"--pagination-input-boxshadow\": \"0px 0px 10px 0px rgba(0, 0, 0, 0.2)\",\r\n    \"--pagination-input-background-color\": \"#475062\",\r\n    \"--pagination-input-color\": \"lightgrey\",\r\n    \"--gradient\": \"linear-gradient(180deg, rgba(41,26,56,1) 0%, rgba(59,37,80,1) 100%)\",\r\n    \"--notification-color\": \"lightslategray\",\r\n};\r\n\r\n\r\nmodule.exports.applyTheme = nextTheme => {\r\n    const themeClass = nextTheme === \"dark\" ? lightTheme : darkTheme;\r\n    Object.keys(themeClass).map(key => {\r\n        const value = themeClass[key];\r\n        document.documentElement.style.setProperty(key, value);\r\n    });\r\n};\r\n\r\nmodule.exports.setTheme = theme => {\r\n    currentTheme = theme;\r\n};\r\n\r\nmodule.exports.getTheme = () => {\r\n    return currentTheme;\r\n};","export default __webpack_public_path__ + \"static/media/dice_icon_grey.e40fe0d3.png\";","import React from 'react';\r\nimport '../../assets/css/spell/Spell.css';\r\nimport icon from '../../assets/img/dice_icon_grey.png';\r\n\r\nexport default function Spell(props) {\r\n\r\n    const formatTime = (value) => {\r\n        let words = value.split(',');\r\n        return words[0];\r\n    }\r\n\r\n    const formatLevel = (value) => {\r\n        if (value == \"0\") {\r\n            return <b>C</b>;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    const hasRitual = (value) => {\r\n        if (value === 1) {\r\n            return <div className=\"icon\">R</div>;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    const hasConcentration = (value) => {\r\n        let search = value.toLowerCase();\r\n        if (search.includes(\"concentration\")) {\r\n            return <div className=\"icon\">C</div>;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    const formatComponents = (value) => {\r\n        let words = value.split('(');\r\n        if (words.length > 1) {\r\n            return words[0] + \"*\";\r\n        }\r\n        return words[0];\r\n    }\r\n\r\n    const formatDuration = (value) => {\r\n        let search = value.toLowerCase();\r\n        if (search.includes(\"concentration\")) {\r\n            if (search.includes(\"concentration, \")) {\r\n                let words = value.replace(\"Concentration, \", \"\");\r\n                return words;\r\n            } else {\r\n                let words = value.replace(\"Concentration\", \"\");\r\n                return words;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    const getPicture = () => {\r\n        if (props.spell.pic === \"\" || props.spell.pic === null) {\r\n            return icon;\r\n        }\r\n        return props.spell.pic;\r\n    }\r\n\r\n    const style = {\r\n        backgroundImage: `url(${getPicture()})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat'\r\n    };\r\n\r\n    return (\r\n        <div className=\"spell\" style={{ animationDelay: `${props.delay * 50}ms` }} onClick={props.onClick}>\r\n            <div className={`spellSchool spellAttr ${props.spell.school}`}>{props.spell.school}</div>\r\n            <div className=\"spellLevel spellAttr\">{formatLevel(props.spell.level)}</div>\r\n            {hasRitual(props.spell.ritual)}\r\n            {hasConcentration(props.spell.duration)}\r\n\r\n            <div className=\"spellName spellAttr\">\r\n                <div className=\"image\" style={style}></div>\r\n                <b>{props.spell.name}</b>\r\n            </div>\r\n\r\n            <div className=\"spellTime smallSpellAttr\"><b>Time: </b>{formatTime(props.spell.time)}</div>\r\n            <div className=\"spellDuration smallSpellAttr\"><b>Duration: </b>{formatDuration(props.spell.duration)}</div>\r\n            <div className=\"spellRange smallSpellAttr\"><b>Range: </b>{props.spell.range}</div>\r\n            <div className=\"spellComp smallSpellAttr\"><b>Comp.: </b>{formatComponents(props.spell.components)}</div>\r\n        </div>\r\n    )\r\n}\r\n","import { MyAppDatabase } from \"./MyDatabase\";\r\nimport Spell from \"../components/spell/Spell\";\r\n\r\nconst db = new MyAppDatabase();\r\n\r\nexport function reciveSpell(id, callback) {\r\n  db.spells.where(\"id\").equals(id)\r\n    .then((spell) => {\r\n      callback(spell);\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function reciveSpellByName(name, callback) {\r\n  db.spells.where(\"name\").equalsIgnoreCase(name)\r\n    .then((spell) => {\r\n      callback(spell);\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function reciveAllSpells(callback) {\r\n  db.open()\r\n    .then(function () {\r\n      db.spells.orderBy(\"name\").then(function (array) {\r\n        callback(array);\r\n      })\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function reciveSpells(step, start, query, callback) {\r\n  console.log(step + \" \" + start)\r\n  db.open()\r\n    .then(function () {\r\n      db.spells.orderBy('name').offset(start).limit(step).toArray().then(function (array) {\r\n        console.log(array);\r\n        callback(array);\r\n      })\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function reciveSpellCount(query, callback) {\r\n  db.open()\r\n    .then(function () {\r\n      db.spells.count(count => {\r\n        callback(count);\r\n      })\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function reciveAttributeSelection(attribute, callback) {\r\n  db.spells.orderBy(attribute).uniqueKeys(function (array) {\r\n    callback(array);\r\n  })\r\n}\r\n\r\n\r\nexport function saveSpell(spell) {\r\n}\r\n\r\nexport function saveNewSpell(spell) {\r\n}\r\n\r\nexport function saveNewSpells(spells, callback) {\r\n  db.open()\r\n    .then(function () {\r\n      spells.map(spell => {\r\n        console.log(spell)\r\n        db.spells.put({\r\n          name: spell.spell_name,\r\n          classes: spell.spell_classes,\r\n          sources: spell.spell_sources,\r\n          level: spell.spell_level,\r\n          school: spell.spell_school,\r\n          time: spell.spell_time,\r\n          range: spell.spell_range,\r\n          components: spell.spell_components,\r\n          duration: spell.spell_duration,\r\n          ritual: spell.spell_ritual,\r\n          text: spell.spell_text,\r\n          pic: spell.spell_pic\r\n        });\r\n      });\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function saveNewSpellFromJson(spell, callback) {\r\n}\r\n\r\nexport function deleteSpell(spell) {\r\n}\r\n\r\nexport function deleteAllSpells() {\r\n  db.open()\r\n    .then(function () {\r\n      db.spells.clear();\r\n    })\r\n    .finally(function () {\r\n      db.close();\r\n    });\r\n}\r\n\r\nexport function addSpellToChar(char, spell, callback) {\r\n\r\n}\r\n","import Dexie from \"dexie\";\r\nimport Spell from \"../components/spell/Spell\";\r\n\r\nexport class MyAppDatabase extends Dexie {\r\n  // Declare implicit table properties.\r\n  // (just to inform Typescript. Instanciated by Dexie in stores() method)\r\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\r\n  //...other tables goes here...\r\n\r\n  constructor() {\r\n    super(\"MyAppDatabase\");\r\n    this.version(1).stores({\r\n      spells: \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\r\n      //...other tables goes here...\r\n    });\r\n    // The following line is needed if your typescript\r\n    // is compiled using babel instead of tsc:\r\n    this.spells = this.table(\"spells\");\r\n  }\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"../../assets/css/spell/SpellOverview.css\";\r\nimport Spell from \"./Spell\";\r\nimport { reciveSpells, reciveSpellCount } from \"../../database/SpellService\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function SpellOverview() {\r\n  const [currentSpellList, setCurrentSpellList] = useState({ spells: [] });\r\n  const spells = useRef(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [start, setStart] = useState(0);\r\n  const [query, setQuery] = useState({});\r\n\r\n  const receiveSpellsResult = result => {\r\n    let newList = currentSpellList.spells;\r\n    newList = newList.concat(result);\r\n\r\n    ReactDOM.unstable_batchedUpdates(() => {\r\n      setCurrentSpellList({ spells: newList });\r\n      setStart(start + 10);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFetching) {\r\n      fetchMoreListItems();\r\n    }\r\n  }, [isFetching]);\r\n\r\n  useEffect(() => {\r\n    setIsFetching(false);\r\n\r\n    reciveSpellCount(query, function (result) {\r\n      let spellCount = result;\r\n      if (spellCount > currentSpellList.spells.length) {\r\n        if (!currentSpellList.spells.length) {\r\n          reciveSpells(10, start, query, function (result) {\r\n            receiveSpellsResult(result);\r\n          });\r\n        }\r\n        console.log(spells.current.scrollHeight + \"==\" + spells.current.clientHeight + \"&&\" + currentSpellList.spells.length);\r\n        if (spells.current.scrollHeight == spells.current.clientHeight && currentSpellList.spells.length) {\r\n          reciveSpells(10, start, query, function (spells) {\r\n            receiveSpellsResult(spells);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [currentSpellList]);\r\n\r\n  const viewSpell = spell => {\r\n    // ipcRenderer.send(\"openView\", spell);\r\n  };\r\n\r\n  const fetchMoreListItems = () => {\r\n    reciveSpells(10, start, query, function (result) {\r\n      receiveSpellsResult(result);\r\n    });\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (Math.round(spells.current.offsetHeight + spells.current.scrollTop) < spells.current.scrollHeight - 240) return;\r\n    setIsFetching(true);\r\n  };\r\n\r\n  return (\r\n    <div id=\"overview\">\r\n      <div id=\"spellOverview\">\r\n        <div id=\"spells\" onScroll={handleScroll} ref={spells}>\r\n          {currentSpellList.spells.map((spell, index) => {\r\n            return <Spell delay={0} spell={spell} key={spell.id} onClick={() => viewSpell(spell)} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <Link to={`/add-spell`} className=\"button\">\r\n        <FontAwesomeIcon icon={faPlus} /> Add new Spell\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../assets/css/Home.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiceD20 } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Home(props) {\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      history.push(\"/spell-overview\");\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Particles className=\"particlesWrapperContainer\" params={{\r\n        \"particles\": {\r\n          \"number\": {\r\n            \"value\": 160,\r\n            \"density\": {\r\n              \"enable\": true,\r\n              \"value_area\": 800\r\n            }\r\n          },\r\n          \"color\": {\r\n            \"value\": \"#8000ff\"\r\n          },\r\n          \"shape\": {\r\n            \"type\": \"circle\",\r\n            \"stroke\": {\r\n              \"width\": 0,\r\n              \"color\": \"#000000\"\r\n            },\r\n            \"polygon\": {\r\n              \"nb_sides\": 5\r\n            },\r\n            \"image\": {\r\n              \"src\": \"img/github.svg\",\r\n              \"width\": 100,\r\n              \"height\": 100\r\n            }\r\n          },\r\n          \"opacity\": {\r\n            \"value\": 1,\r\n            \"random\": true,\r\n            \"anim\": {\r\n              \"enable\": true,\r\n              \"speed\": 1,\r\n              \"opacity_min\": 0,\r\n              \"sync\": false\r\n            }\r\n          },\r\n          \"size\": {\r\n            \"value\": 2,\r\n            \"random\": true,\r\n            \"anim\": {\r\n              \"enable\": false,\r\n              \"speed\": 4,\r\n              \"size_min\": 0.3,\r\n              \"sync\": false\r\n            }\r\n          },\r\n          \"line_linked\": {\r\n            \"enable\": false,\r\n            \"distance\": 150,\r\n            \"color\": \"#ffffff\",\r\n            \"opacity\": 0.4,\r\n            \"width\": 1\r\n          },\r\n          \"move\": {\r\n            \"enable\": true,\r\n            \"speed\": 1,\r\n            \"direction\": \"none\",\r\n            \"random\": true,\r\n            \"straight\": false,\r\n            \"out_mode\": \"out\",\r\n            \"bounce\": false,\r\n            \"attract\": {\r\n              \"enable\": false,\r\n              \"rotateX\": 600,\r\n              \"rotateY\": 600\r\n            }\r\n          }\r\n        },\r\n        \"interactivity\": {\r\n          \"detect_on\": \"canvas\",\r\n          \"events\": {\r\n            \"onhover\": {\r\n              \"enable\": false,\r\n              \"mode\": \"bubble\"\r\n            },\r\n            \"onclick\": {\r\n              \"enable\": false,\r\n              \"mode\": \"repulse\"\r\n            },\r\n            \"resize\": true\r\n          },\r\n          \"modes\": {\r\n            \"grab\": {\r\n              \"distance\": 400,\r\n              \"line_linked\": {\r\n                \"opacity\": 1\r\n              }\r\n            },\r\n            \"bubble\": {\r\n              \"distance\": 250,\r\n              \"size\": 0,\r\n              \"duration\": 2,\r\n              \"opacity\": 0,\r\n              \"speed\": 3\r\n            },\r\n            \"repulse\": {\r\n              \"distance\": 400,\r\n              \"duration\": 0.4\r\n            },\r\n            \"push\": {\r\n              \"particles_nb\": 4\r\n            },\r\n            \"remove\": {\r\n              \"particles_nb\": 2\r\n            }\r\n          }\r\n        },\r\n        \"retina_detect\": true\r\n      }} />\r\n      <div id=\"container\">\r\n        <div id=\"title\">DnDTome</div>\r\n        <Link to=\"/spell-overview\">\r\n          <FontAwesomeIcon icon={faDiceD20} className=\"animated bounce\" />\r\n        </Link>\r\n      </div>\r\n      <svg width=\"0\" height=\"0\">\r\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\r\n          <stop stopColor=\"#350069\" offset=\"0\" />\r\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\r\n        </radialGradient>\r\n      </svg>\r\n    </div>\r\n  );\r\n\r\n}\r\n","import '../assets/css/Options.css';\r\nimport React, { useState } from 'react';\r\nimport { reciveAllSpells, saveNewSpells, deleteAllSpells } from '../database/SpellService';\r\nimport { Line } from 'rc-progress';\r\nimport ThemeService from '../services/ThemeService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPatreon, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport { faFileImport, faTrashAlt, faPalette } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlet fileReader;\r\n\r\nexport default function Options() {\r\n  const [spellsImported, setSpellsImported] = useState({ percent: 0, now: 0, full: 0, name: \"\" });\r\n  const [importing, setImporting] = useState(\"none\");\r\n\r\n  const updateSpellImport = (result) => {\r\n    let percent = Math.round((result.now / result.full) * 100);\r\n    percent !== 0 && percent !== 100 ? setImporting(\"block\") : setImporting(\"none\");\r\n    setSpellsImported({ percent: percent, now: result.now, full: result.full, name: result.name });\r\n  }\r\n\r\n  const toPatreon = () => {\r\n  }\r\n  const toDiscord = () => {\r\n  }\r\n\r\n  const importSpells = e => {\r\n    const files = Array.from(e.target.files)\r\n\r\n    files.forEach((file, i) => {\r\n      fileReader = new FileReader();\r\n      fileReader.onloadend = handleFileRead;\r\n      fileReader.readAsText(file);\r\n    })\r\n  }\r\n\r\n  const handleFileRead = (e) => {\r\n    const content = fileReader.result;\r\n    let spellsJson = JSON.parse(content);\r\n    saveNewSpells(spellsJson, function (result) {\r\n      updateSpellImport(result);\r\n    });\r\n  }\r\n\r\n  const deleteAllSpellsAction = () => {\r\n    deleteAllSpells();\r\n  }\r\n\r\n  const darkMode = () => {\r\n    if (ThemeService.getTheme() === 'light') {\r\n      ThemeService.applyTheme('dark');\r\n      ThemeService.setTheme('dark');\r\n    } else {\r\n      ThemeService.applyTheme('light');\r\n      ThemeService.setTheme('light');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"overview\">\r\n      <div id=\"optionContent\">\r\n        <div id=\"options\">\r\n          <div className=\"optionSection\">\r\n            <h3>Want to support me?</h3>\r\n            <button className=\"patreon\" onClick={toPatreon}><FontAwesomeIcon icon={faPatreon} /> Become a patron</button>\r\n          </div>\r\n          <div className=\"optionSection\">\r\n            <h3>Found some bugs? Or have some feedback?</h3>\r\n            <button className=\"discord\" onClick={toDiscord}><FontAwesomeIcon icon={faDiscord} /> Join the discord</button>\r\n          </div>\r\n          <div className=\"optionSection\">\r\n            <h3>Theme</h3>\r\n            <button onClick={darkMode}><FontAwesomeIcon icon={faPalette} /> Change Theme</button>\r\n          </div>\r\n          <div className=\"optionSection\">\r\n            <h3>Data Import</h3>\r\n            <input type='file' id='single' onChange={importSpells}></input><br />\r\n          </div>\r\n          <div className=\"optionSection\">\r\n            <h3>Delete Data</h3>\r\n            <button onClick={deleteAllSpellsAction}><FontAwesomeIcon icon={faTrashAlt} /> Delete all Spells </button><br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"loadingScreen\" style={{ display: importing }}>\r\n        <div className=\"loadingTab\">\r\n          {spellsImported.percent !== 0 && spellsImported.percent !== 100 ?\r\n            (<div>Imported {spellsImported.percent}% ({spellsImported.now}/{spellsImported.full}) of spells.\r\n              <Line percent={spellsImported.percent} strokeWidth=\"1\" trailWidth=\"1\" strokeColor=\"#8000ff\" />\r\n              Importing {spellsImported.name} ...\r\n              </div>) : (<div></div>)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { saveNewSpell } from '../../database/SpellService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../assets/css/spell/SpellView.css';\r\n\r\nexport default function AddSpell() {\r\n    const [name, setName] = useState(\"\");\r\n    const [school, setSchool] = useState(\"\");\r\n    const [level, setLevel] = useState(0);\r\n    const [ritual, setRitual] = useState(0);\r\n    const [time, setTime] = useState(\"\");\r\n    const [range, setRange] = useState(\"\");\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [components, setComponents] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [classes, setClasses] = useState(\"\");\r\n    const [sources, setSources] = useState(\"\");\r\n\r\n    const saveSpell = (e) => {\r\n        saveNewSpell({ name, school, level, ritual, time, range, duration, components, text, classes, sources });\r\n    }\r\n\r\n    return (\r\n        <div id=\"overview\">\r\n            <div id=\"spellView\">\r\n                <div className=\"top\">\r\n                    <label>Name:<input name=\"name\" type=\"text\" value={name} onChange={e => setName(e.target.value)} /></label>\r\n                    <label>School:<input name=\"school\" type=\"text\" value={school} onChange={e => setSchool(e.target.value)} /></label>\r\n                    <label>Level:<input name=\"level\" type=\"number\" value={level} onChange={e => setLevel(e.target.value)} /></label>\r\n                    <label className=\"checkbox-label\">\r\n                        <div className=\"labelText\">Ritual:</div>\r\n                        <input name=\"ritual\" type=\"checkbox\" checked={ritual} onChange={e => setRitual(e.target.checked)} />\r\n                        <span className=\"checkbox-custom circular\"></span>\r\n                    </label>\r\n                    <label>Casting Time:<input name=\"time\" type=\"text\" value={time} onChange={e => setTime(e.target.value)} /></label>\r\n                    <label>Range:<input name=\"range\" type=\"text\" value={range} onChange={e => setRange(e.target.value)} /></label>\r\n                    <label>Duration:<input name=\"duration\" type=\"text\" value={duration} onChange={e => setDuration(e.target.value)} /></label>\r\n                    <label>Components:<input name=\"components\" type=\"text\" value={components} onChange={e => setComponents(e.target.value)} /></label>\r\n                    <label>Classes:<input name=\"classes\" type=\"text\" value={classes} onChange={e => setClasses(e.target.value)} /></label>\r\n                    <label>Sources:<input name=\"sources\" type=\"text\" value={sources} onChange={e => setSources(e.target.value)} /></label>\r\n                </div>\r\n                <textarea value={text} onChange={e => setText(e.target.value)}></textarea>\r\n                <button onClick={saveSpell}><FontAwesomeIcon icon={faSave} /> Save</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\"\r\nimport '../assets/css/LeftNav.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMeteor, faIdCard, faShieldAlt, faDiceD20, faCog, faDragon, faFistRaised } from '@fortawesome/free-solid-svg-icons';\r\nimport Particles from 'react-particles-js';\r\nimport backpackIcon from \"../assets/img/backpack.png\";\r\nimport raceIcon from \"../assets/img/orc-head.png\";\r\nimport encounterIcon from \"../assets/img/sword-clash.png\";\r\n\r\nclass LeftNav extends Component {\r\n  render() {\r\n\r\n    const closeActiveView = () => {\r\n    }\r\n\r\n    return (\r\n      <div id=\"leftNav\">\r\n        <Particles className=\"particlesWrapper\" params={{\r\n          \"particles\": {\r\n            \"number\": {\r\n              \"value\": 160,\r\n              \"density\": {\r\n                \"enable\": true,\r\n                \"value_area\": 400\r\n              }\r\n            },\r\n            \"color\": {\r\n              \"value\": \"#ffffff\"\r\n            },\r\n            \"shape\": {\r\n              \"type\": \"circle\",\r\n              \"stroke\": {\r\n                \"width\": 0,\r\n                \"color\": \"#000000\"\r\n              },\r\n              \"polygon\": {\r\n                \"nb_sides\": 5\r\n              },\r\n              \"image\": {\r\n                \"src\": \"img/github.svg\",\r\n                \"width\": 100,\r\n                \"height\": 100\r\n              }\r\n            },\r\n            \"opacity\": {\r\n              \"value\": 1,\r\n              \"random\": true,\r\n              \"anim\": {\r\n                \"enable\": true,\r\n                \"speed\": 1,\r\n                \"opacity_min\": 0,\r\n                \"sync\": false\r\n              }\r\n            },\r\n            \"size\": {\r\n              \"value\": 2,\r\n              \"random\": true,\r\n              \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 4,\r\n                \"size_min\": 0.3,\r\n                \"sync\": false\r\n              }\r\n            },\r\n            \"line_linked\": {\r\n              \"enable\": false,\r\n              \"distance\": 150,\r\n              \"color\": \"#ffffff\",\r\n              \"opacity\": 0.4,\r\n              \"width\": 1\r\n            },\r\n            \"move\": {\r\n              \"enable\": true,\r\n              \"speed\": 1,\r\n              \"direction\": \"none\",\r\n              \"random\": true,\r\n              \"straight\": false,\r\n              \"out_mode\": \"out\",\r\n              \"bounce\": false,\r\n              \"attract\": {\r\n                \"enable\": false,\r\n                \"rotateX\": 600,\r\n                \"rotateY\": 600\r\n              }\r\n            }\r\n          },\r\n          \"interactivity\": {\r\n            \"detect_on\": \"canvas\",\r\n            \"events\": {\r\n              \"onhover\": {\r\n                \"enable\": false,\r\n                \"mode\": \"bubble\"\r\n              },\r\n              \"onclick\": {\r\n                \"enable\": false,\r\n                \"mode\": \"repulse\"\r\n              },\r\n              \"resize\": true\r\n            },\r\n            \"modes\": {\r\n              \"grab\": {\r\n                \"distance\": 400,\r\n                \"line_linked\": {\r\n                  \"opacity\": 1\r\n                }\r\n              },\r\n              \"bubble\": {\r\n                \"distance\": 250,\r\n                \"size\": 0,\r\n                \"duration\": 2,\r\n                \"opacity\": 0,\r\n                \"speed\": 3\r\n              },\r\n              \"repulse\": {\r\n                \"distance\": 400,\r\n                \"duration\": 0.4\r\n              },\r\n              \"push\": {\r\n                \"particles_nb\": 4\r\n              },\r\n              \"remove\": {\r\n                \"particles_nb\": 2\r\n              }\r\n            }\r\n          },\r\n          \"retina_detect\": true\r\n        }} />\r\n        <div className=\"gradIcon\">\r\n          <FontAwesomeIcon icon={faDiceD20} className=\"smallIcon\" />\r\n        </div>\r\n        <Link onClick={e => closeActiveView()} to=\"/spell-overview\" style={{ top: \"70px\" }} className={this.props.location.pathname == \"/spell-overview\" ? \"menuItemActiv\" : \"\"}>\r\n          <div className=\"menuItem\">\r\n            <FontAwesomeIcon icon={faMeteor} /> Spells\r\n          </div>\r\n        </Link>\r\n        <Link onClick={e => closeActiveView()} to=\"/options\" style={{ bottom: \"5px\" }} className={this.props.location.pathname == \"/options\" ? \"menuItemActiv\" : \"\"}>\r\n          <div className=\"menuItem\">\r\n            <FontAwesomeIcon icon={faCog} /> Options\r\n          </div>\r\n        </Link>\r\n        <svg width=\"0\" height=\"0\">\r\n          <radialGradient id=\"rgg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\r\n            <stop stopColor=\"#350069\" offset=\"0\" />\r\n            <stop stopColor=\"#B973FF\" offset=\"0.9\" />\r\n          </radialGradient>\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(LeftNav);","export default __webpack_public_path__ + \"static/media/backpack.1bb79079.png\";","export default __webpack_public_path__ + \"static/media/orc-head.a296b842.png\";","export default __webpack_public_path__ + \"static/media/sword-clash.2b5f79a9.png\";","import React, { useState, useEffect } from 'react';\r\nimport * as ReactDOM from \"react-dom\";\r\nimport '../../assets/css/spell/SpellView.css';\r\nimport { saveSpell, deleteSpell, addSpellToChar } from '../../database/SpellService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faTrashAlt, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function SpellView({ spell }) {\r\n    const [id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [school, setSchool] = useState(\"\");\r\n    const [level, setLevel] = useState(\"\");\r\n    const [ritual, setRitual] = useState(0);\r\n    const [time, setTime] = useState(\"\");\r\n    const [range, setRange] = useState(\"\");\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [components, setComponents] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [classes, setClasses] = useState(\"\");\r\n    const [sources, setSources] = useState(\"\");\r\n    const [pic, setPic] = useState(\"\");\r\n\r\n    const [chars, setChars] = useState([]);\r\n    const [selectedChar, setSelectedChar] = useState(0);\r\n\r\n    const receiveSpell = (result) => {\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n            console.time(\"receiveSpell\")\r\n\r\n            let text = \"\";\r\n            if (result.spell_text !== null) {\r\n                text = result.spell_text.replace(/\\\\n/gm, \"\\r\\n\");\r\n            }\r\n            let sources = \"\";\r\n            if (result.spell_sources !== null) {\r\n                sources = result.spell_sources.replace(/\\\\n/gm, \"\\r\\n\");\r\n            }\r\n\r\n            setName(result.spell_name);\r\n            setSchool(result.spell_school);\r\n            setLevel(result.spell_level);\r\n            setRitual(result.spell_ritual);\r\n            setTime(result.spell_time);\r\n            setRange(result.spell_range);\r\n            setDuration(result.spell_duration);\r\n            setComponents(result.spell_components);\r\n            setText(text);\r\n            setClasses(result.spell_classes);\r\n            setSources(sources);\r\n            setId(result.spell_id);\r\n            setPic(result.spell_pic);\r\n\r\n            if (result.spell_pic === null) {\r\n                setPic(\"\");\r\n            }\r\n\r\n            console.timeEnd(\"receiveSpell\")\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        receiveSpell(spell);\r\n    }, [spell]);\r\n\r\n    const saveSpellAction = (e) => {\r\n        saveSpell({ id, name, school, level, ritual, time, range, duration, components, text, classes, sources, pic });\r\n    }\r\n    \r\n    const deleteSpellAction = (e) => {\r\n        deleteSpell({ id, name, school, ritual, level, time, range, duration, components, text, classes, sources });\r\n    }\r\n\r\n    const style = {\r\n        backgroundImage: `url(${pic})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'contain',\r\n        backgroundRepeat: 'no-repeat'\r\n    };\r\n\r\n    return (\r\n        <div id=\"spellView\">\r\n            <div className=\"top\">\r\n                <label>Name:<input name=\"name\" type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Name...\" /></label>\r\n                <label>School:<input name=\"school\" type=\"text\" value={school} onChange={e => setSchool(e.target.value)} placeholder=\"School...\" /></label>\r\n                <div className=\"spellImgBlock\">\r\n                    <label className=\"smallSpellLabel\">Level:<input name=\"level\" type=\"number\" value={level} onChange={e => setLevel(e.target.value)} /></label>\r\n                    <label className=\"smallerSpellLabel left checkbox-label\">\r\n                        <div className=\"labelText\">Ritual:</div>\r\n                        <input name=\"ritual\" type=\"checkbox\" checked={ritual} onChange={e => setRitual(e.target.checked)} />\r\n                        <span className=\"checkbox-custom circular\"></span>\r\n                    </label>\r\n                    <div className=\"image\" style={style}></div>\r\n                    <label className=\"smallPic\">Pic:<input name=\"pic\" type=\"text\" value={pic} onChange={e => setPic(e.target.value)} /></label>\r\n                </div>\r\n                <label>Casting Time:<input name=\"time\" type=\"text\" value={time} onChange={e => setTime(e.target.value)} placeholder=\"Casting Time...\" /></label>\r\n                <label>Range:<input name=\"range\" type=\"text\" value={range} onChange={e => setRange(e.target.value)} placeholder=\"Range...\" /></label>\r\n                <label>Duration:<input name=\"duration\" type=\"text\" value={duration} onChange={e => setDuration(e.target.value)} placeholder=\"Duration...\" /></label>\r\n                <label>Components:<input name=\"components\" type=\"text\" value={components} onChange={e => setComponents(e.target.value)} placeholder=\"Components...\" /></label>\r\n                <label>Classes:<input name=\"classes\" type=\"text\" value={classes} onChange={e => setClasses(e.target.value)} placeholder=\"Classes...\" /></label>\r\n                <label>Sources:<input name=\"sources\" type=\"text\" value={sources} onChange={e => setSources(e.target.value)} placeholder=\"Sources...\" /></label>\r\n            </div>\r\n            <div className=\"top\">\r\n                <textarea value={text} onChange={e => setText(e.target.value)} placeholder=\"Describtion...\"></textarea>\r\n                <button onClick={saveSpellAction}><FontAwesomeIcon icon={faSave} /> Save</button>\r\n                <button onClick={deleteSpellAction} className=\"delete\" style={{ float: \"right\" }}><FontAwesomeIcon icon={faTrashAlt} /> Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"../assets/css/RightNav.css\";\r\nimport icon from \"../assets/img/dice_icon_grey.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport SpellView from \"./spell/SpellView\";\r\n\r\nexport default function RightNav() {\r\n  const [shortWindows, setShortWindows] = useState([]);\r\n  const [activeView, setActiveView] = useState({});\r\n  const [showView, setShowView] = useState(false);\r\n\r\n  const receiveResult = (event, result) => {\r\n    let type = \"\";\r\n    if (result.spell_id !== undefined) {\r\n      type = \"spell\";\r\n    } else if (result.item_id !== undefined) {\r\n      type = \"item\";\r\n    } else if (result.gear_id !== undefined) {\r\n      type = \"gear\";\r\n    } else if (result.race_id !== undefined) {\r\n      type = \"race\";\r\n    } else if (result.monster_id !== undefined) {\r\n      type = \"monster\";\r\n    } else if (result.char_id !== undefined) {\r\n      type = \"char\";\r\n    }\r\n\r\n    let newWindow = { ...result, windowType: type };\r\n    ReactDOM.unstable_batchedUpdates(() => {\r\n      setShortWindows(shortWindows => [...shortWindows, newWindow]);\r\n      setActiveView(newWindow);\r\n      setShowView(true);\r\n    });\r\n  };\r\n\r\n  const updateWindow = (e, result) => {\r\n    let windows = shortWindows.map(shortWindow => {\r\n      if (shortWindow.windowType === \"spell\" && result.spell_id !== undefined && shortWindow.spell_id === result.spell_id) {\r\n        return { ...result, windowType: \"spell\" };\r\n      } else if (shortWindow.windowType === \"item\" && result.item_id !== undefined && shortWindow.item_id === result.item_id) {\r\n        return { ...result, windowType: \"item\" };\r\n      } else if (shortWindow.windowType === \"gear\" && result.gear_id !== undefined && shortWindow.gear_id === result.gear_id) {\r\n        return { ...result, windowType: \"gear\" };\r\n      } else if (shortWindow.windowType === \"race\" && result.race_id !== undefined && shortWindow.race_id === result.race_id) {\r\n        return { ...result, windowType: \"race\" };\r\n      } else if (shortWindow.windowType === \"monster\" && result.monster_id !== undefined && shortWindow.monster_id === result.monster_id) {\r\n        return { ...result, windowType: \"monster\" };\r\n      } else if (shortWindow.windowType === \"char\" && result.char_id !== undefined && shortWindow.char_id === result.char_id) {\r\n        return { ...result, windowType: \"char\" };\r\n      } else {\r\n        return shortWindow;\r\n      }\r\n    });\r\n    setShortWindows(windows);\r\n  }\r\n  const removeWindow = (e, result) => {\r\n    let windows = shortWindows.filter(shortWindow => {\r\n      if (shortWindow.windowType === \"spell\" && shortWindow.spell_id === result.id) {\r\n      } else if (shortWindow.windowType === \"item\" && shortWindow.item_id === result.id) {\r\n      } else if (shortWindow.windowType === \"gear\" && shortWindow.gear_id === result.id) {\r\n      } else if (shortWindow.windowType === \"race\" && shortWindow.race_id === result.id) {\r\n      } else if (shortWindow.windowType === \"monster\" && shortWindow.monster_id === result.id) {\r\n      } else if (shortWindow.windowType === \"char\" && shortWindow.char_id === result.id) {\r\n      } else {\r\n        return shortWindow;\r\n      }\r\n    });\r\n    setShortWindows(windows);\r\n  }\r\n\r\n  const getSpellPicture = spell => {\r\n    if (spell.spell_pic === \"\" || spell.spell_pic === null) {\r\n      return icon;\r\n    }\r\n    return spell.spell_pic;\r\n  };\r\n  const getMonsterPicture = monster => {\r\n    if (monster.monster_pic === \"\" || monster.monster_pic === null) {\r\n      return icon;\r\n    }\r\n    return monster.monster_pic;\r\n  };\r\n  const getItemPicture = item => {\r\n    if (item.item_pic === \"\" || item.item_pic === null) {\r\n      return icon;\r\n    }\r\n    return item.item_pic;\r\n  };\r\n  const getGearPicture = gear => {\r\n    if (gear.gear_pic === \"\" || gear.gear_pic === null) {\r\n      return icon;\r\n    }\r\n    return gear.gear_pic;\r\n  };\r\n  const getCharPicture = char => {\r\n    if (char.char_pic === \"\" || char.char_pic === null) {\r\n      return icon;\r\n    }\r\n    return char.char_pic;\r\n  };\r\n  const getRacePicture = race => {\r\n    if (race.race_pic === \"\" || race.race_pic === null) {\r\n      return icon;\r\n    }\r\n    return race.race_pic;\r\n  };\r\n\r\n  const getView = () => {\r\n    if (activeView.windowType === \"spell\") {\r\n      return (\r\n        <div className={`activeView ${showView ? 'show' : 'hide'}`}>\r\n          <SpellView spell={activeView} />\r\n        </div>\r\n      );\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const showActiveView = window => {\r\n    if (window === activeView && showView) {\r\n      setShowView(false);\r\n    } else {\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n        setActiveView(window);\r\n        setShowView(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  const closeActiveView = () => {\r\n    setShowView(false);\r\n  }\r\n\r\n  const removeView = (windows) => {\r\n    let wins = shortWindows.filter(window => window !== windows);\r\n    ReactDOM.unstable_batchedUpdates(() => {\r\n      setShortWindows(wins);\r\n      setShowView(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"rightNav\">\r\n      {getView()}\r\n      {shortWindows.map((window, index) => {\r\n        if (window.windowType === \"spell\") {\r\n          return (\r\n            <div className=\"windowContainer\" key={index} >\r\n              <div className=\"removeWindow\" onClick={e => removeView(window)}>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </div>\r\n              <div className=\"image\" onClick={e => showActiveView(window)} style={{ backgroundImage: `url(${getSpellPicture(window)})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}></div>\r\n              <div className=\"windowToolTip\">{window.spell_name}</div>\r\n            </div>\r\n          );\r\n        } else if (window.windowType === \"item\") {\r\n          return (\r\n            <div className=\"windowContainer\" key={index} >\r\n              <div className=\"removeWindow\" onClick={e => removeView(window)}>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </div>\r\n              <div className=\"image\" onClick={e => showActiveView(window)} style={{ backgroundImage: `url(${getItemPicture(window)})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}></div>\r\n              <div className=\"windowToolTip\">{window.item_name}</div>\r\n            </div>\r\n          );\r\n        } else if (window.windowType === \"gear\") {\r\n          return (\r\n            <div className=\"windowContainer\" key={index} >\r\n              <div className=\"removeWindow\" onClick={e => removeView(window)}>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </div>\r\n              <div className=\"image\" onClick={e => showActiveView(window)} style={{ backgroundImage: `url(${getGearPicture(window)})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", }}></div>\r\n              <div className=\"windowToolTip\">{window.gear_name}</div>\r\n            </div>\r\n          );\r\n        } else if (window.windowType === \"monster\") {\r\n          return (\r\n            <div className=\"windowContainer\" key={index} >\r\n              <div className=\"removeWindow\" onClick={e => removeView(window)}>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </div>\r\n              <div className=\"image\" onClick={e => showActiveView(window)} style={{ backgroundImage: `url(${getMonsterPicture(window)})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", }}></div>\r\n              <div className=\"windowToolTip\">{window.monster_name}</div>\r\n            </div>\r\n          );\r\n        } else if (window.windowType === \"race\") {\r\n          return (\r\n            <div className=\"windowContainer\" key={index} >\r\n              <div className=\"removeWindow\" onClick={e => removeView(window)}>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </div>\r\n              <div className=\"image\" onClick={e => showActiveView(window)} style={{ backgroundImage: `url(${getRacePicture(window)})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", }}></div>\r\n              <div className=\"windowToolTip\">{window.race_name}</div>\r\n            </div>\r\n          );\r\n        } else if (window.windowType === \"char\") {\r\n          return (\r\n            <div className=\"windowContainer\" key={index} >\r\n              <div className=\"removeWindow\" onClick={e => removeView(window)}>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </div>\r\n              <div className=\"image\" onClick={e => showActiveView(window)} style={{ backgroundImage: `url(${getCharPicture(window)})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", }}></div>\r\n              <div className=\"windowToolTip\">{window.char_name}</div>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import './assets/css/App.css';\r\nimport React, { useEffect } from 'react';\r\nimport { MemoryRouter, Switch, Route } from 'react-router';\r\nimport packageJson from '../package.json';\r\n\r\nimport SpellOverview from './components/spell/SpellOverview';\r\n\r\nimport Home from './components/Home';\r\nimport Options from './components/Options';\r\n\r\nimport AddSpell from './components/add/AddSpell';\r\n\r\nimport LeftNav from './components/LeftNav';\r\nimport RightNav from './components/RightNav';\r\n\r\nconst PageLayout = ({ children }) => (\r\n  <div className=\"App\">\r\n    <LeftNav />\r\n    <div id=\"content\">\r\n      {children}\r\n    </div>\r\n    <RightNav />\r\n    <div id=\"credits\">v{packageJson.version} by DarthAmun</div>\r\n  </div>\r\n);\r\n\r\nconst HomeLayout = ({ children }) => (\r\n  <div className=\"App homeDrag\">\r\n    <div id=\"content\">{children}</div>\r\n    <div id=\"credits\">v{packageJson.version} by DarthAmun</div>\r\n  </div>\r\n);\r\n\r\nconst LayoutRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      <Layout>\r\n        <Component {...props} />\r\n      </Layout>\r\n    )}\r\n  />\r\n);\r\n\r\nconst App = () => {\r\n  return (\r\n    <MemoryRouter>\r\n      <Switch>\r\n        <LayoutRoute path=\"/spell-overview\" layout={PageLayout} component={SpellOverview} />\r\n        <LayoutRoute path=\"/add-spell\" layout={PageLayout} component={AddSpell} />\r\n        <LayoutRoute path=\"/options\" layout={PageLayout} component={Options} />\r\n        <LayoutRoute path=\"/\" layout={HomeLayout} component={Home} />\r\n      </Switch>\r\n    </MemoryRouter >\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}